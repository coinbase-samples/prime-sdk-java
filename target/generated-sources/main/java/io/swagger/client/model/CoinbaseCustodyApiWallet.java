/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiAddress;
import io.swagger.client.model.CoinbaseCustodyApiWalletAction;
import io.swagger.client.model.CoinbaseCustodyApiWalletState;
import io.swagger.client.model.CoinbaseCustodyApiWalletType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseCustodyApiWallet
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiWallet {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("state")
  private CoinbaseCustodyApiWalletState state = null;

  @SerializedName("type")
  private CoinbaseCustodyApiWalletType type = null;

  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("cold_address")
  private CoinbaseCustodyApiAddress coldAddress = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("withdrawable_value")
  private String withdrawableValue = null;

  @SerializedName("available_actions")
  private List<CoinbaseCustodyApiWalletAction> availableActions = new ArrayList<CoinbaseCustodyApiWalletAction>();

  @SerializedName("delegated_to_address")
  private String delegatedToAddress = null;

  @SerializedName("minimum_rewards_requirement")
  private String minimumRewardsRequirement = null;

  @SerializedName("minimum_withdrawal_value")
  private String minimumWithdrawalValue = null;

  @SerializedName("parent_address")
  private CoinbaseCustodyApiAddress parentAddress = null;

  @SerializedName("unbonding_time_remaining")
  private String unbondingTimeRemaining = null;

  @SerializedName("currency_decimals")
  private Integer currencyDecimals = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("reward_wallet_id")
  private String rewardWalletId = null;

  @SerializedName("is_vesting")
  private Boolean isVesting = null;

  @SerializedName("validator_count")
  private Integer validatorCount = null;

  @SerializedName("validator_providers")
  private List<String> validatorProviders = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  public CoinbaseCustodyApiWallet id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiWallet name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseCustodyApiWallet state(CoinbaseCustodyApiWalletState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiWalletState getState() {
    return state;
  }

  public void setState(CoinbaseCustodyApiWalletState state) {
    this.state = state;
  }

  public CoinbaseCustodyApiWallet type(CoinbaseCustodyApiWalletType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiWalletType getType() {
    return type;
  }

  public void setType(CoinbaseCustodyApiWalletType type) {
    this.type = type;
  }

  public CoinbaseCustodyApiWallet currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CoinbaseCustodyApiWallet coldAddress(CoinbaseCustodyApiAddress coldAddress) {
    this.coldAddress = coldAddress;
    return this;
  }

   /**
   * Get coldAddress
   * @return coldAddress
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiAddress getColdAddress() {
    return coldAddress;
  }

  public void setColdAddress(CoinbaseCustodyApiAddress coldAddress) {
    this.coldAddress = coldAddress;
  }

  public CoinbaseCustodyApiWallet value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(required = true, value = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public CoinbaseCustodyApiWallet withdrawableValue(String withdrawableValue) {
    this.withdrawableValue = withdrawableValue;
    return this;
  }

   /**
   * Get withdrawableValue
   * @return withdrawableValue
  **/
  @ApiModelProperty(required = true, value = "")
  public String getWithdrawableValue() {
    return withdrawableValue;
  }

  public void setWithdrawableValue(String withdrawableValue) {
    this.withdrawableValue = withdrawableValue;
  }

  public CoinbaseCustodyApiWallet availableActions(List<CoinbaseCustodyApiWalletAction> availableActions) {
    this.availableActions = availableActions;
    return this;
  }

  public CoinbaseCustodyApiWallet addAvailableActionsItem(CoinbaseCustodyApiWalletAction availableActionsItem) {
    this.availableActions.add(availableActionsItem);
    return this;
  }

   /**
   * Get availableActions
   * @return availableActions
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseCustodyApiWalletAction> getAvailableActions() {
    return availableActions;
  }

  public void setAvailableActions(List<CoinbaseCustodyApiWalletAction> availableActions) {
    this.availableActions = availableActions;
  }

  public CoinbaseCustodyApiWallet delegatedToAddress(String delegatedToAddress) {
    this.delegatedToAddress = delegatedToAddress;
    return this;
  }

   /**
   * Get delegatedToAddress
   * @return delegatedToAddress
  **/
  @ApiModelProperty(value = "")
  public String getDelegatedToAddress() {
    return delegatedToAddress;
  }

  public void setDelegatedToAddress(String delegatedToAddress) {
    this.delegatedToAddress = delegatedToAddress;
  }

  public CoinbaseCustodyApiWallet minimumRewardsRequirement(String minimumRewardsRequirement) {
    this.minimumRewardsRequirement = minimumRewardsRequirement;
    return this;
  }

   /**
   * Get minimumRewardsRequirement
   * @return minimumRewardsRequirement
  **/
  @ApiModelProperty(value = "")
  public String getMinimumRewardsRequirement() {
    return minimumRewardsRequirement;
  }

  public void setMinimumRewardsRequirement(String minimumRewardsRequirement) {
    this.minimumRewardsRequirement = minimumRewardsRequirement;
  }

  public CoinbaseCustodyApiWallet minimumWithdrawalValue(String minimumWithdrawalValue) {
    this.minimumWithdrawalValue = minimumWithdrawalValue;
    return this;
  }

   /**
   * Get minimumWithdrawalValue
   * @return minimumWithdrawalValue
  **/
  @ApiModelProperty(value = "")
  public String getMinimumWithdrawalValue() {
    return minimumWithdrawalValue;
  }

  public void setMinimumWithdrawalValue(String minimumWithdrawalValue) {
    this.minimumWithdrawalValue = minimumWithdrawalValue;
  }

  public CoinbaseCustodyApiWallet parentAddress(CoinbaseCustodyApiAddress parentAddress) {
    this.parentAddress = parentAddress;
    return this;
  }

   /**
   * Get parentAddress
   * @return parentAddress
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiAddress getParentAddress() {
    return parentAddress;
  }

  public void setParentAddress(CoinbaseCustodyApiAddress parentAddress) {
    this.parentAddress = parentAddress;
  }

  public CoinbaseCustodyApiWallet unbondingTimeRemaining(String unbondingTimeRemaining) {
    this.unbondingTimeRemaining = unbondingTimeRemaining;
    return this;
  }

   /**
   * Get unbondingTimeRemaining
   * @return unbondingTimeRemaining
  **/
  @ApiModelProperty(value = "")
  public String getUnbondingTimeRemaining() {
    return unbondingTimeRemaining;
  }

  public void setUnbondingTimeRemaining(String unbondingTimeRemaining) {
    this.unbondingTimeRemaining = unbondingTimeRemaining;
  }

  public CoinbaseCustodyApiWallet currencyDecimals(Integer currencyDecimals) {
    this.currencyDecimals = currencyDecimals;
    return this;
  }

   /**
   * Get currencyDecimals
   * @return currencyDecimals
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrencyDecimals() {
    return currencyDecimals;
  }

  public void setCurrencyDecimals(Integer currencyDecimals) {
    this.currencyDecimals = currencyDecimals;
  }

  public CoinbaseCustodyApiWallet createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiWallet rewardWalletId(String rewardWalletId) {
    this.rewardWalletId = rewardWalletId;
    return this;
  }

   /**
   * Get rewardWalletId
   * @return rewardWalletId
  **/
  @ApiModelProperty(value = "")
  public String getRewardWalletId() {
    return rewardWalletId;
  }

  public void setRewardWalletId(String rewardWalletId) {
    this.rewardWalletId = rewardWalletId;
  }

  public CoinbaseCustodyApiWallet isVesting(Boolean isVesting) {
    this.isVesting = isVesting;
    return this;
  }

   /**
   * Get isVesting
   * @return isVesting
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsVesting() {
    return isVesting;
  }

  public void setIsVesting(Boolean isVesting) {
    this.isVesting = isVesting;
  }

  public CoinbaseCustodyApiWallet validatorCount(Integer validatorCount) {
    this.validatorCount = validatorCount;
    return this;
  }

   /**
   * Get validatorCount
   * @return validatorCount
  **/
  @ApiModelProperty(value = "")
  public Integer getValidatorCount() {
    return validatorCount;
  }

  public void setValidatorCount(Integer validatorCount) {
    this.validatorCount = validatorCount;
  }

  public CoinbaseCustodyApiWallet validatorProviders(List<String> validatorProviders) {
    this.validatorProviders = validatorProviders;
    return this;
  }

  public CoinbaseCustodyApiWallet addValidatorProvidersItem(String validatorProvidersItem) {
    if (this.validatorProviders == null) {
      this.validatorProviders = new ArrayList<String>();
    }
    this.validatorProviders.add(validatorProvidersItem);
    return this;
  }

   /**
   * Get validatorProviders
   * @return validatorProviders
  **/
  @ApiModelProperty(value = "")
  public List<String> getValidatorProviders() {
    return validatorProviders;
  }

  public void setValidatorProviders(List<String> validatorProviders) {
    this.validatorProviders = validatorProviders;
  }

  public CoinbaseCustodyApiWallet portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiWallet coinbaseCustodyApiWallet = (CoinbaseCustodyApiWallet) o;
    return Objects.equals(this.id, coinbaseCustodyApiWallet.id) &&
        Objects.equals(this.name, coinbaseCustodyApiWallet.name) &&
        Objects.equals(this.state, coinbaseCustodyApiWallet.state) &&
        Objects.equals(this.type, coinbaseCustodyApiWallet.type) &&
        Objects.equals(this.currencySymbol, coinbaseCustodyApiWallet.currencySymbol) &&
        Objects.equals(this.coldAddress, coinbaseCustodyApiWallet.coldAddress) &&
        Objects.equals(this.value, coinbaseCustodyApiWallet.value) &&
        Objects.equals(this.withdrawableValue, coinbaseCustodyApiWallet.withdrawableValue) &&
        Objects.equals(this.availableActions, coinbaseCustodyApiWallet.availableActions) &&
        Objects.equals(this.delegatedToAddress, coinbaseCustodyApiWallet.delegatedToAddress) &&
        Objects.equals(this.minimumRewardsRequirement, coinbaseCustodyApiWallet.minimumRewardsRequirement) &&
        Objects.equals(this.minimumWithdrawalValue, coinbaseCustodyApiWallet.minimumWithdrawalValue) &&
        Objects.equals(this.parentAddress, coinbaseCustodyApiWallet.parentAddress) &&
        Objects.equals(this.unbondingTimeRemaining, coinbaseCustodyApiWallet.unbondingTimeRemaining) &&
        Objects.equals(this.currencyDecimals, coinbaseCustodyApiWallet.currencyDecimals) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiWallet.createdAt) &&
        Objects.equals(this.rewardWalletId, coinbaseCustodyApiWallet.rewardWalletId) &&
        Objects.equals(this.isVesting, coinbaseCustodyApiWallet.isVesting) &&
        Objects.equals(this.validatorCount, coinbaseCustodyApiWallet.validatorCount) &&
        Objects.equals(this.validatorProviders, coinbaseCustodyApiWallet.validatorProviders) &&
        Objects.equals(this.portfolioId, coinbaseCustodyApiWallet.portfolioId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, state, type, currencySymbol, coldAddress, value, withdrawableValue, availableActions, delegatedToAddress, minimumRewardsRequirement, minimumWithdrawalValue, parentAddress, unbondingTimeRemaining, currencyDecimals, createdAt, rewardWalletId, isVesting, validatorCount, validatorProviders, portfolioId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiWallet {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    coldAddress: ").append(toIndentedString(coldAddress)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    withdrawableValue: ").append(toIndentedString(withdrawableValue)).append("\n");
    sb.append("    availableActions: ").append(toIndentedString(availableActions)).append("\n");
    sb.append("    delegatedToAddress: ").append(toIndentedString(delegatedToAddress)).append("\n");
    sb.append("    minimumRewardsRequirement: ").append(toIndentedString(minimumRewardsRequirement)).append("\n");
    sb.append("    minimumWithdrawalValue: ").append(toIndentedString(minimumWithdrawalValue)).append("\n");
    sb.append("    parentAddress: ").append(toIndentedString(parentAddress)).append("\n");
    sb.append("    unbondingTimeRemaining: ").append(toIndentedString(unbondingTimeRemaining)).append("\n");
    sb.append("    currencyDecimals: ").append(toIndentedString(currencyDecimals)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    rewardWalletId: ").append(toIndentedString(rewardWalletId)).append("\n");
    sb.append("    isVesting: ").append(toIndentedString(isVesting)).append("\n");
    sb.append("    validatorCount: ").append(toIndentedString(validatorCount)).append("\n");
    sb.append("    validatorProviders: ").append(toIndentedString(validatorProviders)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

