/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseTwsCryptoDestination;
import io.swagger.client.model.CoinbaseTwsGovernanceActionType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseTwsGovernanceAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsGovernanceAction {
  @SerializedName("type")
  private CoinbaseTwsGovernanceActionType type = null;

  @SerializedName("asset")
  private String asset = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("destinations")
  private List<CoinbaseTwsCryptoDestination> destinations = null;

  public CoinbaseTwsGovernanceAction type(CoinbaseTwsGovernanceActionType type) {
    this.type = type;
    return this;
  }

   /**
   * Governance action type
   * @return type
  **/
  @ApiModelProperty(value = "Governance action type")
  public CoinbaseTwsGovernanceActionType getType() {
    return type;
  }

  public void setType(CoinbaseTwsGovernanceActionType type) {
    this.type = type;
  }

  public CoinbaseTwsGovernanceAction asset(String asset) {
    this.asset = asset;
    return this;
  }

   /**
   * The symbol of the currency to perform governance action with
   * @return asset
  **/
  @ApiModelProperty(value = "The symbol of the currency to perform governance action with")
  public String getAsset() {
    return asset;
  }

  public void setAsset(String asset) {
    this.asset = asset;
  }

  public CoinbaseTwsGovernanceAction amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Governance action movement amount in whole unit
   * @return amount
  **/
  @ApiModelProperty(value = "Governance action movement amount in whole unit")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseTwsGovernanceAction destinations(List<CoinbaseTwsCryptoDestination> destinations) {
    this.destinations = destinations;
    return this;
  }

  public CoinbaseTwsGovernanceAction addDestinationsItem(CoinbaseTwsCryptoDestination destinationsItem) {
    if (this.destinations == null) {
      this.destinations = new ArrayList<CoinbaseTwsCryptoDestination>();
    }
    this.destinations.add(destinationsItem);
    return this;
  }

   /**
   * Governance destinations
   * @return destinations
  **/
  @ApiModelProperty(value = "Governance destinations")
  public List<CoinbaseTwsCryptoDestination> getDestinations() {
    return destinations;
  }

  public void setDestinations(List<CoinbaseTwsCryptoDestination> destinations) {
    this.destinations = destinations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsGovernanceAction coinbaseTwsGovernanceAction = (CoinbaseTwsGovernanceAction) o;
    return Objects.equals(this.type, coinbaseTwsGovernanceAction.type) &&
        Objects.equals(this.asset, coinbaseTwsGovernanceAction.asset) &&
        Objects.equals(this.amount, coinbaseTwsGovernanceAction.amount) &&
        Objects.equals(this.destinations, coinbaseTwsGovernanceAction.destinations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(type, asset, amount, destinations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsGovernanceAction {\n");
    
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    asset: ").append(toIndentedString(asset)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    destinations: ").append(toIndentedString(destinations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

