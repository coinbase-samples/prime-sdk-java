/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ScannerNFTCollection;
import io.swagger.client.model.ScannerNFTItem;
import io.swagger.client.model.ScannerQuantityRange;
import java.io.IOException;

/**
 * ScannerItemTransferOperation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class ScannerItemTransferOperation {
  @SerializedName("contract_address")
  private String contractAddress = null;

  @SerializedName("from_address")
  private String fromAddress = null;

  @SerializedName("to_address")
  private String toAddress = null;

  @SerializedName("token_id")
  private String tokenId = null;

  @SerializedName("collection")
  private ScannerNFTCollection collection = null;

  @SerializedName("item")
  private ScannerNFTItem item = null;

  @SerializedName("quantity")
  private String quantity = null;

  @SerializedName("quantity_range")
  private ScannerQuantityRange quantityRange = null;

  public ScannerItemTransferOperation contractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
    return this;
  }

   /**
   * Get contractAddress
   * @return contractAddress
  **/
  @ApiModelProperty(value = "")
  public String getContractAddress() {
    return contractAddress;
  }

  public void setContractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
  }

  public ScannerItemTransferOperation fromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
    return this;
  }

   /**
   * Get fromAddress
   * @return fromAddress
  **/
  @ApiModelProperty(value = "")
  public String getFromAddress() {
    return fromAddress;
  }

  public void setFromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
  }

  public ScannerItemTransferOperation toAddress(String toAddress) {
    this.toAddress = toAddress;
    return this;
  }

   /**
   * Get toAddress
   * @return toAddress
  **/
  @ApiModelProperty(value = "")
  public String getToAddress() {
    return toAddress;
  }

  public void setToAddress(String toAddress) {
    this.toAddress = toAddress;
  }

  public ScannerItemTransferOperation tokenId(String tokenId) {
    this.tokenId = tokenId;
    return this;
  }

   /**
   * Get tokenId
   * @return tokenId
  **/
  @ApiModelProperty(value = "")
  public String getTokenId() {
    return tokenId;
  }

  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }

  public ScannerItemTransferOperation collection(ScannerNFTCollection collection) {
    this.collection = collection;
    return this;
  }

   /**
   * Get collection
   * @return collection
  **/
  @ApiModelProperty(value = "")
  public ScannerNFTCollection getCollection() {
    return collection;
  }

  public void setCollection(ScannerNFTCollection collection) {
    this.collection = collection;
  }

  public ScannerItemTransferOperation item(ScannerNFTItem item) {
    this.item = item;
    return this;
  }

   /**
   * Get item
   * @return item
  **/
  @ApiModelProperty(value = "")
  public ScannerNFTItem getItem() {
    return item;
  }

  public void setItem(ScannerNFTItem item) {
    this.item = item;
  }

  public ScannerItemTransferOperation quantity(String quantity) {
    this.quantity = quantity;
    return this;
  }

   /**
   * Get quantity
   * @return quantity
  **/
  @ApiModelProperty(value = "")
  public String getQuantity() {
    return quantity;
  }

  public void setQuantity(String quantity) {
    this.quantity = quantity;
  }

  public ScannerItemTransferOperation quantityRange(ScannerQuantityRange quantityRange) {
    this.quantityRange = quantityRange;
    return this;
  }

   /**
   * Get quantityRange
   * @return quantityRange
  **/
  @ApiModelProperty(value = "")
  public ScannerQuantityRange getQuantityRange() {
    return quantityRange;
  }

  public void setQuantityRange(ScannerQuantityRange quantityRange) {
    this.quantityRange = quantityRange;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScannerItemTransferOperation scannerItemTransferOperation = (ScannerItemTransferOperation) o;
    return Objects.equals(this.contractAddress, scannerItemTransferOperation.contractAddress) &&
        Objects.equals(this.fromAddress, scannerItemTransferOperation.fromAddress) &&
        Objects.equals(this.toAddress, scannerItemTransferOperation.toAddress) &&
        Objects.equals(this.tokenId, scannerItemTransferOperation.tokenId) &&
        Objects.equals(this.collection, scannerItemTransferOperation.collection) &&
        Objects.equals(this.item, scannerItemTransferOperation.item) &&
        Objects.equals(this.quantity, scannerItemTransferOperation.quantity) &&
        Objects.equals(this.quantityRange, scannerItemTransferOperation.quantityRange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contractAddress, fromAddress, toAddress, tokenId, collection, item, quantity, quantityRange);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScannerItemTransferOperation {\n");
    
    sb.append("    contractAddress: ").append(toIndentedString(contractAddress)).append("\n");
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    toAddress: ").append(toIndentedString(toAddress)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    collection: ").append(toIndentedString(collection)).append("\n");
    sb.append("    item: ").append(toIndentedString(item)).append("\n");
    sb.append("    quantity: ").append(toIndentedString(quantity)).append("\n");
    sb.append("    quantityRange: ").append(toIndentedString(quantityRange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

