/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiQueryLevel;
import io.swagger.client.model.CoinbaseCustodyApiRole;
import io.swagger.client.model.CoinbaseCustodyApiSecondaryRole;
import io.swagger.client.model.CoinbaseCustodyApiUserLastActivity;
import io.swagger.client.model.CoinbaseCustodyApiUserPortfolioRoles;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseCustodyApiUser
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiUser {
  @SerializedName("email")
  private String email = null;

  @SerializedName("avatar_url")
  private String avatarUrl = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("last_activity")
  private CoinbaseCustodyApiUserLastActivity lastActivity = null;

  @SerializedName("invited_at")
  private OffsetDateTime invitedAt = null;

  @SerializedName("invited_by")
  private String invitedBy = null;

  @SerializedName("accepted")
  private Boolean accepted = null;

  @SerializedName("user_role")
  private CoinbaseCustodyApiRole userRole = null;

  @SerializedName("user_secondary_roles")
  private List<CoinbaseCustodyApiSecondaryRole> userSecondaryRoles = new ArrayList<CoinbaseCustodyApiSecondaryRole>();

  @SerializedName("user_roles")
  private List<CoinbaseCustodyApiRole> userRoles = null;

  @SerializedName("access_level")
  private CoinbaseCustodyApiQueryLevel accessLevel = null;

  @SerializedName("portfolio_user_roles")
  private CoinbaseCustodyApiUserPortfolioRoles portfolioUserRoles = null;

  public CoinbaseCustodyApiUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(required = true, value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CoinbaseCustodyApiUser avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * Get avatarUrl
   * @return avatarUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public CoinbaseCustodyApiUser name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseCustodyApiUser id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiUser lastActivity(CoinbaseCustodyApiUserLastActivity lastActivity) {
    this.lastActivity = lastActivity;
    return this;
  }

   /**
   * Get lastActivity
   * @return lastActivity
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserLastActivity getLastActivity() {
    return lastActivity;
  }

  public void setLastActivity(CoinbaseCustodyApiUserLastActivity lastActivity) {
    this.lastActivity = lastActivity;
  }

  public CoinbaseCustodyApiUser invitedAt(OffsetDateTime invitedAt) {
    this.invitedAt = invitedAt;
    return this;
  }

   /**
   * Get invitedAt
   * @return invitedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getInvitedAt() {
    return invitedAt;
  }

  public void setInvitedAt(OffsetDateTime invitedAt) {
    this.invitedAt = invitedAt;
  }

  public CoinbaseCustodyApiUser invitedBy(String invitedBy) {
    this.invitedBy = invitedBy;
    return this;
  }

   /**
   * Get invitedBy
   * @return invitedBy
  **/
  @ApiModelProperty(required = true, value = "")
  public String getInvitedBy() {
    return invitedBy;
  }

  public void setInvitedBy(String invitedBy) {
    this.invitedBy = invitedBy;
  }

  public CoinbaseCustodyApiUser accepted(Boolean accepted) {
    this.accepted = accepted;
    return this;
  }

   /**
   * Get accepted
   * @return accepted
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isAccepted() {
    return accepted;
  }

  public void setAccepted(Boolean accepted) {
    this.accepted = accepted;
  }

  public CoinbaseCustodyApiUser userRole(CoinbaseCustodyApiRole userRole) {
    this.userRole = userRole;
    return this;
  }

   /**
   * Get userRole
   * @return userRole
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiRole getUserRole() {
    return userRole;
  }

  public void setUserRole(CoinbaseCustodyApiRole userRole) {
    this.userRole = userRole;
  }

  public CoinbaseCustodyApiUser userSecondaryRoles(List<CoinbaseCustodyApiSecondaryRole> userSecondaryRoles) {
    this.userSecondaryRoles = userSecondaryRoles;
    return this;
  }

  public CoinbaseCustodyApiUser addUserSecondaryRolesItem(CoinbaseCustodyApiSecondaryRole userSecondaryRolesItem) {
    this.userSecondaryRoles.add(userSecondaryRolesItem);
    return this;
  }

   /**
   * Get userSecondaryRoles
   * @return userSecondaryRoles
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseCustodyApiSecondaryRole> getUserSecondaryRoles() {
    return userSecondaryRoles;
  }

  public void setUserSecondaryRoles(List<CoinbaseCustodyApiSecondaryRole> userSecondaryRoles) {
    this.userSecondaryRoles = userSecondaryRoles;
  }

  public CoinbaseCustodyApiUser userRoles(List<CoinbaseCustodyApiRole> userRoles) {
    this.userRoles = userRoles;
    return this;
  }

  public CoinbaseCustodyApiUser addUserRolesItem(CoinbaseCustodyApiRole userRolesItem) {
    if (this.userRoles == null) {
      this.userRoles = new ArrayList<CoinbaseCustodyApiRole>();
    }
    this.userRoles.add(userRolesItem);
    return this;
  }

   /**
   * Get userRoles
   * @return userRoles
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseCustodyApiRole> getUserRoles() {
    return userRoles;
  }

  public void setUserRoles(List<CoinbaseCustodyApiRole> userRoles) {
    this.userRoles = userRoles;
  }

  public CoinbaseCustodyApiUser accessLevel(CoinbaseCustodyApiQueryLevel accessLevel) {
    this.accessLevel = accessLevel;
    return this;
  }

   /**
   * Get accessLevel
   * @return accessLevel
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiQueryLevel getAccessLevel() {
    return accessLevel;
  }

  public void setAccessLevel(CoinbaseCustodyApiQueryLevel accessLevel) {
    this.accessLevel = accessLevel;
  }

  public CoinbaseCustodyApiUser portfolioUserRoles(CoinbaseCustodyApiUserPortfolioRoles portfolioUserRoles) {
    this.portfolioUserRoles = portfolioUserRoles;
    return this;
  }

   /**
   * Get portfolioUserRoles
   * @return portfolioUserRoles
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserPortfolioRoles getPortfolioUserRoles() {
    return portfolioUserRoles;
  }

  public void setPortfolioUserRoles(CoinbaseCustodyApiUserPortfolioRoles portfolioUserRoles) {
    this.portfolioUserRoles = portfolioUserRoles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiUser coinbaseCustodyApiUser = (CoinbaseCustodyApiUser) o;
    return Objects.equals(this.email, coinbaseCustodyApiUser.email) &&
        Objects.equals(this.avatarUrl, coinbaseCustodyApiUser.avatarUrl) &&
        Objects.equals(this.name, coinbaseCustodyApiUser.name) &&
        Objects.equals(this.id, coinbaseCustodyApiUser.id) &&
        Objects.equals(this.lastActivity, coinbaseCustodyApiUser.lastActivity) &&
        Objects.equals(this.invitedAt, coinbaseCustodyApiUser.invitedAt) &&
        Objects.equals(this.invitedBy, coinbaseCustodyApiUser.invitedBy) &&
        Objects.equals(this.accepted, coinbaseCustodyApiUser.accepted) &&
        Objects.equals(this.userRole, coinbaseCustodyApiUser.userRole) &&
        Objects.equals(this.userSecondaryRoles, coinbaseCustodyApiUser.userSecondaryRoles) &&
        Objects.equals(this.userRoles, coinbaseCustodyApiUser.userRoles) &&
        Objects.equals(this.accessLevel, coinbaseCustodyApiUser.accessLevel) &&
        Objects.equals(this.portfolioUserRoles, coinbaseCustodyApiUser.portfolioUserRoles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, avatarUrl, name, id, lastActivity, invitedAt, invitedBy, accepted, userRole, userSecondaryRoles, userRoles, accessLevel, portfolioUserRoles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiUser {\n");
    
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lastActivity: ").append(toIndentedString(lastActivity)).append("\n");
    sb.append("    invitedAt: ").append(toIndentedString(invitedAt)).append("\n");
    sb.append("    invitedBy: ").append(toIndentedString(invitedBy)).append("\n");
    sb.append("    accepted: ").append(toIndentedString(accepted)).append("\n");
    sb.append("    userRole: ").append(toIndentedString(userRole)).append("\n");
    sb.append("    userSecondaryRoles: ").append(toIndentedString(userSecondaryRoles)).append("\n");
    sb.append("    userRoles: ").append(toIndentedString(userRoles)).append("\n");
    sb.append("    accessLevel: ").append(toIndentedString(accessLevel)).append("\n");
    sb.append("    portfolioUserRoles: ").append(toIndentedString(portfolioUserRoles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

