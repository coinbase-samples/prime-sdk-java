/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiRedoPlanState;
import java.io.IOException;

/**
 * CoinbaseCustodyApiRedoPlanAuditData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiRedoPlanAuditData {
  @SerializedName("id")
  private String id = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("state")
  private CoinbaseCustodyApiRedoPlanState state = null;

  @SerializedName("redo_transaction_id")
  private String redoTransactionId = null;

  @SerializedName("sweep_transaction_id")
  private String sweepTransactionId = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  public CoinbaseCustodyApiRedoPlanAuditData id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiRedoPlanAuditData userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbaseCustodyApiRedoPlanAuditData state(CoinbaseCustodyApiRedoPlanState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiRedoPlanState getState() {
    return state;
  }

  public void setState(CoinbaseCustodyApiRedoPlanState state) {
    this.state = state;
  }

  public CoinbaseCustodyApiRedoPlanAuditData redoTransactionId(String redoTransactionId) {
    this.redoTransactionId = redoTransactionId;
    return this;
  }

   /**
   * Get redoTransactionId
   * @return redoTransactionId
  **/
  @ApiModelProperty(value = "")
  public String getRedoTransactionId() {
    return redoTransactionId;
  }

  public void setRedoTransactionId(String redoTransactionId) {
    this.redoTransactionId = redoTransactionId;
  }

  public CoinbaseCustodyApiRedoPlanAuditData sweepTransactionId(String sweepTransactionId) {
    this.sweepTransactionId = sweepTransactionId;
    return this;
  }

   /**
   * Get sweepTransactionId
   * @return sweepTransactionId
  **/
  @ApiModelProperty(value = "")
  public String getSweepTransactionId() {
    return sweepTransactionId;
  }

  public void setSweepTransactionId(String sweepTransactionId) {
    this.sweepTransactionId = sweepTransactionId;
  }

  public CoinbaseCustodyApiRedoPlanAuditData createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiRedoPlanAuditData updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiRedoPlanAuditData coinbaseCustodyApiRedoPlanAuditData = (CoinbaseCustodyApiRedoPlanAuditData) o;
    return Objects.equals(this.id, coinbaseCustodyApiRedoPlanAuditData.id) &&
        Objects.equals(this.userId, coinbaseCustodyApiRedoPlanAuditData.userId) &&
        Objects.equals(this.state, coinbaseCustodyApiRedoPlanAuditData.state) &&
        Objects.equals(this.redoTransactionId, coinbaseCustodyApiRedoPlanAuditData.redoTransactionId) &&
        Objects.equals(this.sweepTransactionId, coinbaseCustodyApiRedoPlanAuditData.sweepTransactionId) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiRedoPlanAuditData.createdAt) &&
        Objects.equals(this.updatedAt, coinbaseCustodyApiRedoPlanAuditData.updatedAt);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, userId, state, redoTransactionId, sweepTransactionId, createdAt, updatedAt);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiRedoPlanAuditData {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    redoTransactionId: ").append(toIndentedString(redoTransactionId)).append("\n");
    sb.append("    sweepTransactionId: ").append(toIndentedString(sweepTransactionId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

