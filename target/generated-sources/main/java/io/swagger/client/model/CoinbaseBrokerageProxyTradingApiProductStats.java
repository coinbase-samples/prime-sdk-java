/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyTradingApiFcmTradingSessionDetails;
import io.swagger.client.model.CoinbaseBrokerageProxyTradingApiFutureProductDetails;
import io.swagger.client.model.CoinbaseBrokerageProxyTradingApiFutureProductStats;
import io.swagger.client.model.CoinbaseBrokerageProxyTradingApiProductPermissions;
import io.swagger.client.model.CoreProductType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseBrokerageProxyTradingApiProductStats
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyTradingApiProductStats {
  @SerializedName("name")
  private String name = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("volume_24h")
  private String volume24h = null;

  @SerializedName("volume_percentage_change_24h")
  private String volumePercentageChange24h = null;

  @SerializedName("price_percentage_change_24h")
  private String pricePercentageChange24h = null;

  @SerializedName("high_24h")
  private String high24h = null;

  @SerializedName("low_24h")
  private String low24h = null;

  @SerializedName("high_52w")
  private String high52w = null;

  @SerializedName("low_52w")
  private String low52w = null;

  @SerializedName("market_cap")
  private String marketCap = null;

  @SerializedName("price_percentage_change_mtd")
  private String pricePercentageChangeMtd = null;

  @SerializedName("price_percentage_change_ytd")
  private String pricePercentageChangeYtd = null;

  @SerializedName("permissions")
  private List<CoinbaseBrokerageProxyTradingApiProductPermissions> permissions = new ArrayList<CoinbaseBrokerageProxyTradingApiProductPermissions>();

  @SerializedName("product_type")
  private CoreProductType productType = null;

  @SerializedName("base_currency")
  private String baseCurrency = null;

  @SerializedName("quote_currency")
  private String quoteCurrency = null;

  @SerializedName("fcm_trading_session_details")
  private CoinbaseBrokerageProxyTradingApiFcmTradingSessionDetails fcmTradingSessionDetails = null;

  @SerializedName("mid_market_price")
  private String midMarketPrice = null;

  @SerializedName("tradable")
  private Boolean tradable = null;

  @SerializedName("alias")
  private String alias = null;

  @SerializedName("volume_30d")
  private String volume30d = null;

  @SerializedName("average_daily_volume_30d")
  private String averageDailyVolume30d = null;

  @SerializedName("sole_venue_id")
  private String soleVenueId = null;

  @SerializedName("future_product_details")
  private CoinbaseBrokerageProxyTradingApiFutureProductDetails futureProductDetails = null;

  @SerializedName("future_product_stats")
  private CoinbaseBrokerageProxyTradingApiFutureProductStats futureProductStats = null;

  public CoinbaseBrokerageProxyTradingApiProductStats name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats volume24h(String volume24h) {
    this.volume24h = volume24h;
    return this;
  }

   /**
   * Get volume24h
   * @return volume24h
  **/
  @ApiModelProperty(required = true, value = "")
  public String getVolume24h() {
    return volume24h;
  }

  public void setVolume24h(String volume24h) {
    this.volume24h = volume24h;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats volumePercentageChange24h(String volumePercentageChange24h) {
    this.volumePercentageChange24h = volumePercentageChange24h;
    return this;
  }

   /**
   * Get volumePercentageChange24h
   * @return volumePercentageChange24h
  **/
  @ApiModelProperty(required = true, value = "")
  public String getVolumePercentageChange24h() {
    return volumePercentageChange24h;
  }

  public void setVolumePercentageChange24h(String volumePercentageChange24h) {
    this.volumePercentageChange24h = volumePercentageChange24h;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats pricePercentageChange24h(String pricePercentageChange24h) {
    this.pricePercentageChange24h = pricePercentageChange24h;
    return this;
  }

   /**
   * Get pricePercentageChange24h
   * @return pricePercentageChange24h
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPricePercentageChange24h() {
    return pricePercentageChange24h;
  }

  public void setPricePercentageChange24h(String pricePercentageChange24h) {
    this.pricePercentageChange24h = pricePercentageChange24h;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats high24h(String high24h) {
    this.high24h = high24h;
    return this;
  }

   /**
   * Get high24h
   * @return high24h
  **/
  @ApiModelProperty(required = true, value = "")
  public String getHigh24h() {
    return high24h;
  }

  public void setHigh24h(String high24h) {
    this.high24h = high24h;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats low24h(String low24h) {
    this.low24h = low24h;
    return this;
  }

   /**
   * Get low24h
   * @return low24h
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLow24h() {
    return low24h;
  }

  public void setLow24h(String low24h) {
    this.low24h = low24h;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats high52w(String high52w) {
    this.high52w = high52w;
    return this;
  }

   /**
   * Get high52w
   * @return high52w
  **/
  @ApiModelProperty(required = true, value = "")
  public String getHigh52w() {
    return high52w;
  }

  public void setHigh52w(String high52w) {
    this.high52w = high52w;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats low52w(String low52w) {
    this.low52w = low52w;
    return this;
  }

   /**
   * Get low52w
   * @return low52w
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLow52w() {
    return low52w;
  }

  public void setLow52w(String low52w) {
    this.low52w = low52w;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats marketCap(String marketCap) {
    this.marketCap = marketCap;
    return this;
  }

   /**
   * Get marketCap
   * @return marketCap
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMarketCap() {
    return marketCap;
  }

  public void setMarketCap(String marketCap) {
    this.marketCap = marketCap;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats pricePercentageChangeMtd(String pricePercentageChangeMtd) {
    this.pricePercentageChangeMtd = pricePercentageChangeMtd;
    return this;
  }

   /**
   * Get pricePercentageChangeMtd
   * @return pricePercentageChangeMtd
  **/
  @ApiModelProperty(value = "")
  public String getPricePercentageChangeMtd() {
    return pricePercentageChangeMtd;
  }

  public void setPricePercentageChangeMtd(String pricePercentageChangeMtd) {
    this.pricePercentageChangeMtd = pricePercentageChangeMtd;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats pricePercentageChangeYtd(String pricePercentageChangeYtd) {
    this.pricePercentageChangeYtd = pricePercentageChangeYtd;
    return this;
  }

   /**
   * Get pricePercentageChangeYtd
   * @return pricePercentageChangeYtd
  **/
  @ApiModelProperty(value = "")
  public String getPricePercentageChangeYtd() {
    return pricePercentageChangeYtd;
  }

  public void setPricePercentageChangeYtd(String pricePercentageChangeYtd) {
    this.pricePercentageChangeYtd = pricePercentageChangeYtd;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats permissions(List<CoinbaseBrokerageProxyTradingApiProductPermissions> permissions) {
    this.permissions = permissions;
    return this;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats addPermissionsItem(CoinbaseBrokerageProxyTradingApiProductPermissions permissionsItem) {
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Get permissions
   * @return permissions
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseBrokerageProxyTradingApiProductPermissions> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<CoinbaseBrokerageProxyTradingApiProductPermissions> permissions) {
    this.permissions = permissions;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats productType(CoreProductType productType) {
    this.productType = productType;
    return this;
  }

   /**
   * Get productType
   * @return productType
  **/
  @ApiModelProperty(value = "")
  public CoreProductType getProductType() {
    return productType;
  }

  public void setProductType(CoreProductType productType) {
    this.productType = productType;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats baseCurrency(String baseCurrency) {
    this.baseCurrency = baseCurrency;
    return this;
  }

   /**
   * Get baseCurrency
   * @return baseCurrency
  **/
  @ApiModelProperty(value = "")
  public String getBaseCurrency() {
    return baseCurrency;
  }

  public void setBaseCurrency(String baseCurrency) {
    this.baseCurrency = baseCurrency;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats quoteCurrency(String quoteCurrency) {
    this.quoteCurrency = quoteCurrency;
    return this;
  }

   /**
   * Get quoteCurrency
   * @return quoteCurrency
  **/
  @ApiModelProperty(value = "")
  public String getQuoteCurrency() {
    return quoteCurrency;
  }

  public void setQuoteCurrency(String quoteCurrency) {
    this.quoteCurrency = quoteCurrency;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats fcmTradingSessionDetails(CoinbaseBrokerageProxyTradingApiFcmTradingSessionDetails fcmTradingSessionDetails) {
    this.fcmTradingSessionDetails = fcmTradingSessionDetails;
    return this;
  }

   /**
   * Get fcmTradingSessionDetails
   * @return fcmTradingSessionDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyTradingApiFcmTradingSessionDetails getFcmTradingSessionDetails() {
    return fcmTradingSessionDetails;
  }

  public void setFcmTradingSessionDetails(CoinbaseBrokerageProxyTradingApiFcmTradingSessionDetails fcmTradingSessionDetails) {
    this.fcmTradingSessionDetails = fcmTradingSessionDetails;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats midMarketPrice(String midMarketPrice) {
    this.midMarketPrice = midMarketPrice;
    return this;
  }

   /**
   * Get midMarketPrice
   * @return midMarketPrice
  **/
  @ApiModelProperty(value = "")
  public String getMidMarketPrice() {
    return midMarketPrice;
  }

  public void setMidMarketPrice(String midMarketPrice) {
    this.midMarketPrice = midMarketPrice;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats tradable(Boolean tradable) {
    this.tradable = tradable;
    return this;
  }

   /**
   * Get tradable
   * @return tradable
  **/
  @ApiModelProperty(value = "")
  public Boolean isTradable() {
    return tradable;
  }

  public void setTradable(Boolean tradable) {
    this.tradable = tradable;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats alias(String alias) {
    this.alias = alias;
    return this;
  }

   /**
   * Get alias
   * @return alias
  **/
  @ApiModelProperty(value = "")
  public String getAlias() {
    return alias;
  }

  public void setAlias(String alias) {
    this.alias = alias;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats volume30d(String volume30d) {
    this.volume30d = volume30d;
    return this;
  }

   /**
   * Get volume30d
   * @return volume30d
  **/
  @ApiModelProperty(value = "")
  public String getVolume30d() {
    return volume30d;
  }

  public void setVolume30d(String volume30d) {
    this.volume30d = volume30d;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats averageDailyVolume30d(String averageDailyVolume30d) {
    this.averageDailyVolume30d = averageDailyVolume30d;
    return this;
  }

   /**
   * Get averageDailyVolume30d
   * @return averageDailyVolume30d
  **/
  @ApiModelProperty(value = "")
  public String getAverageDailyVolume30d() {
    return averageDailyVolume30d;
  }

  public void setAverageDailyVolume30d(String averageDailyVolume30d) {
    this.averageDailyVolume30d = averageDailyVolume30d;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats soleVenueId(String soleVenueId) {
    this.soleVenueId = soleVenueId;
    return this;
  }

   /**
   * Get soleVenueId
   * @return soleVenueId
  **/
  @ApiModelProperty(value = "")
  public String getSoleVenueId() {
    return soleVenueId;
  }

  public void setSoleVenueId(String soleVenueId) {
    this.soleVenueId = soleVenueId;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats futureProductDetails(CoinbaseBrokerageProxyTradingApiFutureProductDetails futureProductDetails) {
    this.futureProductDetails = futureProductDetails;
    return this;
  }

   /**
   * Get futureProductDetails
   * @return futureProductDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyTradingApiFutureProductDetails getFutureProductDetails() {
    return futureProductDetails;
  }

  public void setFutureProductDetails(CoinbaseBrokerageProxyTradingApiFutureProductDetails futureProductDetails) {
    this.futureProductDetails = futureProductDetails;
  }

  public CoinbaseBrokerageProxyTradingApiProductStats futureProductStats(CoinbaseBrokerageProxyTradingApiFutureProductStats futureProductStats) {
    this.futureProductStats = futureProductStats;
    return this;
  }

   /**
   * Market data stats for a FUTURES specific product. Not present for a SPOT product
   * @return futureProductStats
  **/
  @ApiModelProperty(value = "Market data stats for a FUTURES specific product. Not present for a SPOT product")
  public CoinbaseBrokerageProxyTradingApiFutureProductStats getFutureProductStats() {
    return futureProductStats;
  }

  public void setFutureProductStats(CoinbaseBrokerageProxyTradingApiFutureProductStats futureProductStats) {
    this.futureProductStats = futureProductStats;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyTradingApiProductStats coinbaseBrokerageProxyTradingApiProductStats = (CoinbaseBrokerageProxyTradingApiProductStats) o;
    return Objects.equals(this.name, coinbaseBrokerageProxyTradingApiProductStats.name) &&
        Objects.equals(this.price, coinbaseBrokerageProxyTradingApiProductStats.price) &&
        Objects.equals(this.volume24h, coinbaseBrokerageProxyTradingApiProductStats.volume24h) &&
        Objects.equals(this.volumePercentageChange24h, coinbaseBrokerageProxyTradingApiProductStats.volumePercentageChange24h) &&
        Objects.equals(this.pricePercentageChange24h, coinbaseBrokerageProxyTradingApiProductStats.pricePercentageChange24h) &&
        Objects.equals(this.high24h, coinbaseBrokerageProxyTradingApiProductStats.high24h) &&
        Objects.equals(this.low24h, coinbaseBrokerageProxyTradingApiProductStats.low24h) &&
        Objects.equals(this.high52w, coinbaseBrokerageProxyTradingApiProductStats.high52w) &&
        Objects.equals(this.low52w, coinbaseBrokerageProxyTradingApiProductStats.low52w) &&
        Objects.equals(this.marketCap, coinbaseBrokerageProxyTradingApiProductStats.marketCap) &&
        Objects.equals(this.pricePercentageChangeMtd, coinbaseBrokerageProxyTradingApiProductStats.pricePercentageChangeMtd) &&
        Objects.equals(this.pricePercentageChangeYtd, coinbaseBrokerageProxyTradingApiProductStats.pricePercentageChangeYtd) &&
        Objects.equals(this.permissions, coinbaseBrokerageProxyTradingApiProductStats.permissions) &&
        Objects.equals(this.productType, coinbaseBrokerageProxyTradingApiProductStats.productType) &&
        Objects.equals(this.baseCurrency, coinbaseBrokerageProxyTradingApiProductStats.baseCurrency) &&
        Objects.equals(this.quoteCurrency, coinbaseBrokerageProxyTradingApiProductStats.quoteCurrency) &&
        Objects.equals(this.fcmTradingSessionDetails, coinbaseBrokerageProxyTradingApiProductStats.fcmTradingSessionDetails) &&
        Objects.equals(this.midMarketPrice, coinbaseBrokerageProxyTradingApiProductStats.midMarketPrice) &&
        Objects.equals(this.tradable, coinbaseBrokerageProxyTradingApiProductStats.tradable) &&
        Objects.equals(this.alias, coinbaseBrokerageProxyTradingApiProductStats.alias) &&
        Objects.equals(this.volume30d, coinbaseBrokerageProxyTradingApiProductStats.volume30d) &&
        Objects.equals(this.averageDailyVolume30d, coinbaseBrokerageProxyTradingApiProductStats.averageDailyVolume30d) &&
        Objects.equals(this.soleVenueId, coinbaseBrokerageProxyTradingApiProductStats.soleVenueId) &&
        Objects.equals(this.futureProductDetails, coinbaseBrokerageProxyTradingApiProductStats.futureProductDetails) &&
        Objects.equals(this.futureProductStats, coinbaseBrokerageProxyTradingApiProductStats.futureProductStats);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, price, volume24h, volumePercentageChange24h, pricePercentageChange24h, high24h, low24h, high52w, low52w, marketCap, pricePercentageChangeMtd, pricePercentageChangeYtd, permissions, productType, baseCurrency, quoteCurrency, fcmTradingSessionDetails, midMarketPrice, tradable, alias, volume30d, averageDailyVolume30d, soleVenueId, futureProductDetails, futureProductStats);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyTradingApiProductStats {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    volume24h: ").append(toIndentedString(volume24h)).append("\n");
    sb.append("    volumePercentageChange24h: ").append(toIndentedString(volumePercentageChange24h)).append("\n");
    sb.append("    pricePercentageChange24h: ").append(toIndentedString(pricePercentageChange24h)).append("\n");
    sb.append("    high24h: ").append(toIndentedString(high24h)).append("\n");
    sb.append("    low24h: ").append(toIndentedString(low24h)).append("\n");
    sb.append("    high52w: ").append(toIndentedString(high52w)).append("\n");
    sb.append("    low52w: ").append(toIndentedString(low52w)).append("\n");
    sb.append("    marketCap: ").append(toIndentedString(marketCap)).append("\n");
    sb.append("    pricePercentageChangeMtd: ").append(toIndentedString(pricePercentageChangeMtd)).append("\n");
    sb.append("    pricePercentageChangeYtd: ").append(toIndentedString(pricePercentageChangeYtd)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    baseCurrency: ").append(toIndentedString(baseCurrency)).append("\n");
    sb.append("    quoteCurrency: ").append(toIndentedString(quoteCurrency)).append("\n");
    sb.append("    fcmTradingSessionDetails: ").append(toIndentedString(fcmTradingSessionDetails)).append("\n");
    sb.append("    midMarketPrice: ").append(toIndentedString(midMarketPrice)).append("\n");
    sb.append("    tradable: ").append(toIndentedString(tradable)).append("\n");
    sb.append("    alias: ").append(toIndentedString(alias)).append("\n");
    sb.append("    volume30d: ").append(toIndentedString(volume30d)).append("\n");
    sb.append("    averageDailyVolume30d: ").append(toIndentedString(averageDailyVolume30d)).append("\n");
    sb.append("    soleVenueId: ").append(toIndentedString(soleVenueId)).append("\n");
    sb.append("    futureProductDetails: ").append(toIndentedString(futureProductDetails)).append("\n");
    sb.append("    futureProductStats: ").append(toIndentedString(futureProductStats)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

