/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseTwsOmnibusQcWalletCreationOption;
import io.swagger.client.model.CoinbaseTwsTradingWalletCreationOption;
import io.swagger.client.model.CoinbaseTwsWeb3WalletCreationOption;
import java.io.IOException;

/**
 * CoinbaseTwsCreateWalletOption
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsCreateWalletOption {
  @SerializedName("web3_option")
  private CoinbaseTwsWeb3WalletCreationOption web3Option = null;

  @SerializedName("trading_option")
  private CoinbaseTwsTradingWalletCreationOption tradingOption = null;

  @SerializedName("omnibus_qc_option")
  private CoinbaseTwsOmnibusQcWalletCreationOption omnibusQcOption = null;

  public CoinbaseTwsCreateWalletOption web3Option(CoinbaseTwsWeb3WalletCreationOption web3Option) {
    this.web3Option = web3Option;
    return this;
  }

   /**
   * Get web3Option
   * @return web3Option
  **/
  @ApiModelProperty(value = "")
  public CoinbaseTwsWeb3WalletCreationOption getWeb3Option() {
    return web3Option;
  }

  public void setWeb3Option(CoinbaseTwsWeb3WalletCreationOption web3Option) {
    this.web3Option = web3Option;
  }

  public CoinbaseTwsCreateWalletOption tradingOption(CoinbaseTwsTradingWalletCreationOption tradingOption) {
    this.tradingOption = tradingOption;
    return this;
  }

   /**
   * Get tradingOption
   * @return tradingOption
  **/
  @ApiModelProperty(value = "")
  public CoinbaseTwsTradingWalletCreationOption getTradingOption() {
    return tradingOption;
  }

  public void setTradingOption(CoinbaseTwsTradingWalletCreationOption tradingOption) {
    this.tradingOption = tradingOption;
  }

  public CoinbaseTwsCreateWalletOption omnibusQcOption(CoinbaseTwsOmnibusQcWalletCreationOption omnibusQcOption) {
    this.omnibusQcOption = omnibusQcOption;
    return this;
  }

   /**
   * Get omnibusQcOption
   * @return omnibusQcOption
  **/
  @ApiModelProperty(value = "")
  public CoinbaseTwsOmnibusQcWalletCreationOption getOmnibusQcOption() {
    return omnibusQcOption;
  }

  public void setOmnibusQcOption(CoinbaseTwsOmnibusQcWalletCreationOption omnibusQcOption) {
    this.omnibusQcOption = omnibusQcOption;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsCreateWalletOption coinbaseTwsCreateWalletOption = (CoinbaseTwsCreateWalletOption) o;
    return Objects.equals(this.web3Option, coinbaseTwsCreateWalletOption.web3Option) &&
        Objects.equals(this.tradingOption, coinbaseTwsCreateWalletOption.tradingOption) &&
        Objects.equals(this.omnibusQcOption, coinbaseTwsCreateWalletOption.omnibusQcOption);
  }

  @Override
  public int hashCode() {
    return Objects.hash(web3Option, tradingOption, omnibusQcOption);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsCreateWalletOption {\n");
    
    sb.append("    web3Option: ").append(toIndentedString(web3Option)).append("\n");
    sb.append("    tradingOption: ").append(toIndentedString(tradingOption)).append("\n");
    sb.append("    omnibusQcOption: ").append(toIndentedString(omnibusQcOption)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

