/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAmountField;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPreviewSizeType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest {
  @SerializedName("source_portfolio_id")
  private String sourcePortfolioId = null;

  @SerializedName("order_ids")
  private List<String> orderIds = new ArrayList<String>();

  @SerializedName("size_type")
  private CoinbaseEngPrimeApiApiPreviewSizeType sizeType = null;

  @SerializedName("divide_evenly")
  private Boolean divideEvenly = null;

  @SerializedName("amount_fields")
  private List<CoinbaseEngPrimeApiApiAmountField> amountFields = new ArrayList<CoinbaseEngPrimeApiApiAmountField>();

  @SerializedName("product_id")
  private String productId = null;

  @SerializedName("remainder_destination_portfolio_id")
  private String remainderDestinationPortfolioId = null;

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest sourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
    return this;
  }

   /**
   * The ID of the source portfolio id
   * @return sourcePortfolioId
  **/
  @ApiModelProperty(required = true, value = "The ID of the source portfolio id")
  public String getSourcePortfolioId() {
    return sourcePortfolioId;
  }

  public void setSourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest orderIds(List<String> orderIds) {
    this.orderIds = orderIds;
    return this;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest addOrderIdsItem(String orderIdsItem) {
    this.orderIds.add(orderIdsItem);
    return this;
  }

   /**
   * An array of the order ids
   * @return orderIds
  **/
  @ApiModelProperty(required = true, value = "An array of the order ids")
  public List<String> getOrderIds() {
    return orderIds;
  }

  public void setOrderIds(List<String> orderIds) {
    this.orderIds = orderIds;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest sizeType(CoinbaseEngPrimeApiApiPreviewSizeType sizeType) {
    this.sizeType = sizeType;
    return this;
  }

   /**
   * User request for the size type
   * @return sizeType
  **/
  @ApiModelProperty(required = true, value = "User request for the size type")
  public CoinbaseEngPrimeApiApiPreviewSizeType getSizeType() {
    return sizeType;
  }

  public void setSizeType(CoinbaseEngPrimeApiApiPreviewSizeType sizeType) {
    this.sizeType = sizeType;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest divideEvenly(Boolean divideEvenly) {
    this.divideEvenly = divideEvenly;
    return this;
  }

   /**
   * Boolean for divide evenly should be false unless user clicks divide evenly
   * @return divideEvenly
  **/
  @ApiModelProperty(required = true, value = "Boolean for divide evenly should be false unless user clicks divide evenly")
  public Boolean isDivideEvenly() {
    return divideEvenly;
  }

  public void setDivideEvenly(Boolean divideEvenly) {
    this.divideEvenly = divideEvenly;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest amountFields(List<CoinbaseEngPrimeApiApiAmountField> amountFields) {
    this.amountFields = amountFields;
    return this;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest addAmountFieldsItem(CoinbaseEngPrimeApiApiAmountField amountFieldsItem) {
    this.amountFields.add(amountFieldsItem);
    return this;
  }

   /**
   * An array for the amount fields
   * @return amountFields
  **/
  @ApiModelProperty(required = true, value = "An array for the amount fields")
  public List<CoinbaseEngPrimeApiApiAmountField> getAmountFields() {
    return amountFields;
  }

  public void setAmountFields(List<CoinbaseEngPrimeApiApiAmountField> amountFields) {
    this.amountFields = amountFields;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * The product id of the call field
   * @return productId
  **/
  @ApiModelProperty(required = true, value = "The product id of the call field")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest remainderDestinationPortfolioId(String remainderDestinationPortfolioId) {
    this.remainderDestinationPortfolioId = remainderDestinationPortfolioId;
    return this;
  }

   /**
   * Optional destination portfolio to assign remainder to
   * @return remainderDestinationPortfolioId
  **/
  @ApiModelProperty(value = "Optional destination portfolio to assign remainder to")
  public String getRemainderDestinationPortfolioId() {
    return remainderDestinationPortfolioId;
  }

  public void setRemainderDestinationPortfolioId(String remainderDestinationPortfolioId) {
    this.remainderDestinationPortfolioId = remainderDestinationPortfolioId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest = (CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest) o;
    return Objects.equals(this.sourcePortfolioId, coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest.sourcePortfolioId) &&
        Objects.equals(this.orderIds, coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest.orderIds) &&
        Objects.equals(this.sizeType, coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest.sizeType) &&
        Objects.equals(this.divideEvenly, coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest.divideEvenly) &&
        Objects.equals(this.amountFields, coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest.amountFields) &&
        Objects.equals(this.productId, coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest.productId) &&
        Objects.equals(this.remainderDestinationPortfolioId, coinbaseEngPrimeApiApiPostNetAllocationPreviewRequest.remainderDestinationPortfolioId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourcePortfolioId, orderIds, sizeType, divideEvenly, amountFields, productId, remainderDestinationPortfolioId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPostNetAllocationPreviewRequest {\n");
    
    sb.append("    sourcePortfolioId: ").append(toIndentedString(sourcePortfolioId)).append("\n");
    sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
    sb.append("    sizeType: ").append(toIndentedString(sizeType)).append("\n");
    sb.append("    divideEvenly: ").append(toIndentedString(divideEvenly)).append("\n");
    sb.append("    amountFields: ").append(toIndentedString(amountFields)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    remainderDestinationPortfolioId: ").append(toIndentedString(remainderDestinationPortfolioId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

