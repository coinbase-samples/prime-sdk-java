/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingPMLocate;
import io.swagger.client.model.CoinbaseFinancingPaginationResponse;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseFinancingGetAllLocatesByPortfolioResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingGetAllLocatesByPortfolioResponse {
  @SerializedName("locates")
  private List<CoinbaseFinancingPMLocate> locates = null;

  @SerializedName("result_count")
  private Integer resultCount = null;

  @SerializedName("pagination")
  private CoinbaseFinancingPaginationResponse pagination = null;

  public CoinbaseFinancingGetAllLocatesByPortfolioResponse locates(List<CoinbaseFinancingPMLocate> locates) {
    this.locates = locates;
    return this;
  }

  public CoinbaseFinancingGetAllLocatesByPortfolioResponse addLocatesItem(CoinbaseFinancingPMLocate locatesItem) {
    if (this.locates == null) {
      this.locates = new ArrayList<CoinbaseFinancingPMLocate>();
    }
    this.locates.add(locatesItem);
    return this;
  }

   /**
   * Get locates
   * @return locates
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingPMLocate> getLocates() {
    return locates;
  }

  public void setLocates(List<CoinbaseFinancingPMLocate> locates) {
    this.locates = locates;
  }

  public CoinbaseFinancingGetAllLocatesByPortfolioResponse resultCount(Integer resultCount) {
    this.resultCount = resultCount;
    return this;
  }

   /**
   * Get resultCount
   * @return resultCount
  **/
  @ApiModelProperty(value = "")
  public Integer getResultCount() {
    return resultCount;
  }

  public void setResultCount(Integer resultCount) {
    this.resultCount = resultCount;
  }

  public CoinbaseFinancingGetAllLocatesByPortfolioResponse pagination(CoinbaseFinancingPaginationResponse pagination) {
    this.pagination = pagination;
    return this;
  }

   /**
   * Get pagination
   * @return pagination
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingPaginationResponse getPagination() {
    return pagination;
  }

  public void setPagination(CoinbaseFinancingPaginationResponse pagination) {
    this.pagination = pagination;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingGetAllLocatesByPortfolioResponse coinbaseFinancingGetAllLocatesByPortfolioResponse = (CoinbaseFinancingGetAllLocatesByPortfolioResponse) o;
    return Objects.equals(this.locates, coinbaseFinancingGetAllLocatesByPortfolioResponse.locates) &&
        Objects.equals(this.resultCount, coinbaseFinancingGetAllLocatesByPortfolioResponse.resultCount) &&
        Objects.equals(this.pagination, coinbaseFinancingGetAllLocatesByPortfolioResponse.pagination);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locates, resultCount, pagination);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingGetAllLocatesByPortfolioResponse {\n");
    
    sb.append("    locates: ").append(toIndentedString(locates)).append("\n");
    sb.append("    resultCount: ").append(toIndentedString(resultCount)).append("\n");
    sb.append("    pagination: ").append(toIndentedString(pagination)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

