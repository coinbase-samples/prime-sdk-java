/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * - ACTIVITY_SECONDARY_TYPE_UNSPECIFIED: Order &amp; Allocation secondary types  - ACTIVITY_SECONDARY_TYPE_INTERNAL_TRANSFER: Transaction secondary types  - ACTIVITY_SECONDARY_TYPE_CB_LENDS: Lending secondary types  - ACTIVITY_SECONDARY_TYPE_INVITE_TEAM_MEMBER: User Invite secondary types  - ACTIVITY_SECONDARY_TYPE_WEB3_WALLET: Wallet Create secondary types  - ACTIVITY_SECONDARY_TYPE_WEB3_SIGNER: Web3 Signer role secondary type
 */
@JsonAdapter(CoinbaseEngPrimeActivityApiActivitySecondaryType.Adapter.class)
public enum CoinbaseEngPrimeActivityApiActivitySecondaryType {
  
  UNSPECIFIED("ACTIVITY_SECONDARY_TYPE_UNSPECIFIED"),
  
  BUY("ACTIVITY_SECONDARY_TYPE_BUY"),
  
  SELL("ACTIVITY_SECONDARY_TYPE_SELL"),
  
  INTERNAL_TRANSFER("ACTIVITY_SECONDARY_TYPE_INTERNAL_TRANSFER"),
  
  SWEEP_TRANSFER("ACTIVITY_SECONDARY_TYPE_SWEEP_TRANSFER"),
  
  CB_LENDS("ACTIVITY_SECONDARY_TYPE_CB_LENDS"),
  
  CB_BORROWS("ACTIVITY_SECONDARY_TYPE_CB_BORROWS"),
  
  INVITE_TEAM_MEMBER("ACTIVITY_SECONDARY_TYPE_INVITE_TEAM_MEMBER"),
  
  WEB3_WALLET("ACTIVITY_SECONDARY_TYPE_WEB3_WALLET"),
  
  QUALIFIED_CUSTODIAN_WALLET("ACTIVITY_SECONDARY_TYPE_QUALIFIED_CUSTODIAN_WALLET"),
  
  WEB3_SIGNER("ACTIVITY_SECONDARY_TYPE_WEB3_SIGNER");

  private String value;

  CoinbaseEngPrimeActivityApiActivitySecondaryType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbaseEngPrimeActivityApiActivitySecondaryType fromValue(String text) {
    for (CoinbaseEngPrimeActivityApiActivitySecondaryType b : CoinbaseEngPrimeActivityApiActivitySecondaryType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbaseEngPrimeActivityApiActivitySecondaryType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbaseEngPrimeActivityApiActivitySecondaryType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbaseEngPrimeActivityApiActivitySecondaryType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbaseEngPrimeActivityApiActivitySecondaryType.fromValue(String.valueOf(value));
    }
  }
}

