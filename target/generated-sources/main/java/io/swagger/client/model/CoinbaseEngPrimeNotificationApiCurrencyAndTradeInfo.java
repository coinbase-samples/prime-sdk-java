/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("trading_pair")
  private String tradingPair = null;

  @SerializedName("trading_algorithm")
  private String tradingAlgorithm = null;

  public CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo tradingPair(String tradingPair) {
    this.tradingPair = tradingPair;
    return this;
  }

   /**
   * Get tradingPair
   * @return tradingPair
  **/
  @ApiModelProperty(value = "")
  public String getTradingPair() {
    return tradingPair;
  }

  public void setTradingPair(String tradingPair) {
    this.tradingPair = tradingPair;
  }

  public CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo tradingAlgorithm(String tradingAlgorithm) {
    this.tradingAlgorithm = tradingAlgorithm;
    return this;
  }

   /**
   * Get tradingAlgorithm
   * @return tradingAlgorithm
  **/
  @ApiModelProperty(value = "")
  public String getTradingAlgorithm() {
    return tradingAlgorithm;
  }

  public void setTradingAlgorithm(String tradingAlgorithm) {
    this.tradingAlgorithm = tradingAlgorithm;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo coinbaseEngPrimeNotificationApiCurrencyAndTradeInfo = (CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo) o;
    return Objects.equals(this.currency, coinbaseEngPrimeNotificationApiCurrencyAndTradeInfo.currency) &&
        Objects.equals(this.amount, coinbaseEngPrimeNotificationApiCurrencyAndTradeInfo.amount) &&
        Objects.equals(this.tradingPair, coinbaseEngPrimeNotificationApiCurrencyAndTradeInfo.tradingPair) &&
        Objects.equals(this.tradingAlgorithm, coinbaseEngPrimeNotificationApiCurrencyAndTradeInfo.tradingAlgorithm);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, amount, tradingPair, tradingAlgorithm);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo {\n");
    
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    tradingPair: ").append(toIndentedString(tradingPair)).append("\n");
    sb.append("    tradingAlgorithm: ").append(toIndentedString(tradingAlgorithm)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

