/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbasePaymentsCommonAddress;
import io.swagger.client.model.CoinbasePaymentsCommonPaymentMethodsSepaAccountDetail;
import java.io.IOException;

/**
 * SepaV2 identifies for the payment method SEPA_V2, which supports SEPA rails in the decomp flow.
 */
@ApiModel(description = "SepaV2 identifies for the payment method SEPA_V2, which supports SEPA rails in the decomp flow.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbasePaymentsCommonPaymentMethodsSepaV2 {
  @SerializedName("account")
  private CoinbasePaymentsCommonPaymentMethodsSepaAccountDetail account = null;

  @SerializedName("customer_first_name")
  private String customerFirstName = null;

  @SerializedName("customer_last_name")
  private String customerLastName = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("phone_number")
  private String phoneNumber = null;

  @SerializedName("customer_country")
  private String customerCountry = null;

  @SerializedName("address")
  private CoinbasePaymentsCommonAddress address = null;

  @SerializedName("supports_open_banking")
  private Boolean supportsOpenBanking = null;

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 account(CoinbasePaymentsCommonPaymentMethodsSepaAccountDetail account) {
    this.account = account;
    return this;
  }

   /**
   * The SEPA account details.
   * @return account
  **/
  @ApiModelProperty(value = "The SEPA account details.")
  public CoinbasePaymentsCommonPaymentMethodsSepaAccountDetail getAccount() {
    return account;
  }

  public void setAccount(CoinbasePaymentsCommonPaymentMethodsSepaAccountDetail account) {
    this.account = account;
  }

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 customerFirstName(String customerFirstName) {
    this.customerFirstName = customerFirstName;
    return this;
  }

   /**
   * Get customerFirstName
   * @return customerFirstName
  **/
  @ApiModelProperty(value = "")
  public String getCustomerFirstName() {
    return customerFirstName;
  }

  public void setCustomerFirstName(String customerFirstName) {
    this.customerFirstName = customerFirstName;
  }

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 customerLastName(String customerLastName) {
    this.customerLastName = customerLastName;
    return this;
  }

   /**
   * Get customerLastName
   * @return customerLastName
  **/
  @ApiModelProperty(value = "")
  public String getCustomerLastName() {
    return customerLastName;
  }

  public void setCustomerLastName(String customerLastName) {
    this.customerLastName = customerLastName;
  }

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 phoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
    return this;
  }

   /**
   * Get phoneNumber
   * @return phoneNumber
  **/
  @ApiModelProperty(value = "")
  public String getPhoneNumber() {
    return phoneNumber;
  }

  public void setPhoneNumber(String phoneNumber) {
    this.phoneNumber = phoneNumber;
  }

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 customerCountry(String customerCountry) {
    this.customerCountry = customerCountry;
    return this;
  }

   /**
   * Customer&#39;s country in ISO-3166-1 ALPHA-2.
   * @return customerCountry
  **/
  @ApiModelProperty(value = "Customer's country in ISO-3166-1 ALPHA-2.")
  public String getCustomerCountry() {
    return customerCountry;
  }

  public void setCustomerCountry(String customerCountry) {
    this.customerCountry = customerCountry;
  }

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 address(CoinbasePaymentsCommonAddress address) {
    this.address = address;
    return this;
  }

   /**
   * Deprecated. Address was required for Banking Circle payout but later found unused.  It will now be unpopulated. Keeping this field in case LHV or other banks require it in the future.
   * @return address
  **/
  @ApiModelProperty(value = "Deprecated. Address was required for Banking Circle payout but later found unused.  It will now be unpopulated. Keeping this field in case LHV or other banks require it in the future.")
  public CoinbasePaymentsCommonAddress getAddress() {
    return address;
  }

  public void setAddress(CoinbasePaymentsCommonAddress address) {
    this.address = address;
  }

  public CoinbasePaymentsCommonPaymentMethodsSepaV2 supportsOpenBanking(Boolean supportsOpenBanking) {
    this.supportsOpenBanking = supportsOpenBanking;
    return this;
  }

   /**
   * Meant to be used for routing in PGS.
   * @return supportsOpenBanking
  **/
  @ApiModelProperty(value = "Meant to be used for routing in PGS.")
  public Boolean isSupportsOpenBanking() {
    return supportsOpenBanking;
  }

  public void setSupportsOpenBanking(Boolean supportsOpenBanking) {
    this.supportsOpenBanking = supportsOpenBanking;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbasePaymentsCommonPaymentMethodsSepaV2 coinbasePaymentsCommonPaymentMethodsSepaV2 = (CoinbasePaymentsCommonPaymentMethodsSepaV2) o;
    return Objects.equals(this.account, coinbasePaymentsCommonPaymentMethodsSepaV2.account) &&
        Objects.equals(this.customerFirstName, coinbasePaymentsCommonPaymentMethodsSepaV2.customerFirstName) &&
        Objects.equals(this.customerLastName, coinbasePaymentsCommonPaymentMethodsSepaV2.customerLastName) &&
        Objects.equals(this.email, coinbasePaymentsCommonPaymentMethodsSepaV2.email) &&
        Objects.equals(this.phoneNumber, coinbasePaymentsCommonPaymentMethodsSepaV2.phoneNumber) &&
        Objects.equals(this.customerCountry, coinbasePaymentsCommonPaymentMethodsSepaV2.customerCountry) &&
        Objects.equals(this.address, coinbasePaymentsCommonPaymentMethodsSepaV2.address) &&
        Objects.equals(this.supportsOpenBanking, coinbasePaymentsCommonPaymentMethodsSepaV2.supportsOpenBanking);
  }

  @Override
  public int hashCode() {
    return Objects.hash(account, customerFirstName, customerLastName, email, phoneNumber, customerCountry, address, supportsOpenBanking);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbasePaymentsCommonPaymentMethodsSepaV2 {\n");
    
    sb.append("    account: ").append(toIndentedString(account)).append("\n");
    sb.append("    customerFirstName: ").append(toIndentedString(customerFirstName)).append("\n");
    sb.append("    customerLastName: ").append(toIndentedString(customerLastName)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    phoneNumber: ").append(toIndentedString(phoneNumber)).append("\n");
    sb.append("    customerCountry: ").append(toIndentedString(customerCountry)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    supportsOpenBanking: ").append(toIndentedString(supportsOpenBanking)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

