/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EngPrimePolicyApiConditionValue;
import io.swagger.client.model.EngPrimePolicyApiHierarchy;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * EngPrimePolicyApiEvaluationInput
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class EngPrimePolicyApiEvaluationInput {
  @SerializedName("policy_type")
  private String policyType = null;

  @SerializedName("hierarchy")
  private EngPrimePolicyApiHierarchy hierarchy = null;

  @SerializedName("values")
  private List<EngPrimePolicyApiConditionValue> values = null;

  public EngPrimePolicyApiEvaluationInput policyType(String policyType) {
    this.policyType = policyType;
    return this;
  }

   /**
   * Get policyType
   * @return policyType
  **/
  @ApiModelProperty(value = "")
  public String getPolicyType() {
    return policyType;
  }

  public void setPolicyType(String policyType) {
    this.policyType = policyType;
  }

  public EngPrimePolicyApiEvaluationInput hierarchy(EngPrimePolicyApiHierarchy hierarchy) {
    this.hierarchy = hierarchy;
    return this;
  }

   /**
   * Get hierarchy
   * @return hierarchy
  **/
  @ApiModelProperty(value = "")
  public EngPrimePolicyApiHierarchy getHierarchy() {
    return hierarchy;
  }

  public void setHierarchy(EngPrimePolicyApiHierarchy hierarchy) {
    this.hierarchy = hierarchy;
  }

  public EngPrimePolicyApiEvaluationInput values(List<EngPrimePolicyApiConditionValue> values) {
    this.values = values;
    return this;
  }

  public EngPrimePolicyApiEvaluationInput addValuesItem(EngPrimePolicyApiConditionValue valuesItem) {
    if (this.values == null) {
      this.values = new ArrayList<EngPrimePolicyApiConditionValue>();
    }
    this.values.add(valuesItem);
    return this;
  }

   /**
   * Get values
   * @return values
  **/
  @ApiModelProperty(value = "")
  public List<EngPrimePolicyApiConditionValue> getValues() {
    return values;
  }

  public void setValues(List<EngPrimePolicyApiConditionValue> values) {
    this.values = values;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    EngPrimePolicyApiEvaluationInput engPrimePolicyApiEvaluationInput = (EngPrimePolicyApiEvaluationInput) o;
    return Objects.equals(this.policyType, engPrimePolicyApiEvaluationInput.policyType) &&
        Objects.equals(this.hierarchy, engPrimePolicyApiEvaluationInput.hierarchy) &&
        Objects.equals(this.values, engPrimePolicyApiEvaluationInput.values);
  }

  @Override
  public int hashCode() {
    return Objects.hash(policyType, hierarchy, values);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class EngPrimePolicyApiEvaluationInput {\n");
    
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    hierarchy: ").append(toIndentedString(hierarchy)).append("\n");
    sb.append("    values: ").append(toIndentedString(values)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

