/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo;
import java.io.IOException;

/**
 * CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate {
  @SerializedName("action")
  private String action = null;

  @SerializedName("main_label")
  private String mainLabel = null;

  @SerializedName("sub_label")
  private String subLabel = null;

  @SerializedName("action_instruction")
  private String actionInstruction = null;

  @SerializedName("currency_and_trade_info")
  private CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo currencyAndTradeInfo = null;

  @SerializedName("additional_text")
  private String additionalText = null;

  public CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @ApiModelProperty(value = "")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate mainLabel(String mainLabel) {
    this.mainLabel = mainLabel;
    return this;
  }

   /**
   * Get mainLabel
   * @return mainLabel
  **/
  @ApiModelProperty(value = "")
  public String getMainLabel() {
    return mainLabel;
  }

  public void setMainLabel(String mainLabel) {
    this.mainLabel = mainLabel;
  }

  public CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate subLabel(String subLabel) {
    this.subLabel = subLabel;
    return this;
  }

   /**
   * Get subLabel
   * @return subLabel
  **/
  @ApiModelProperty(value = "")
  public String getSubLabel() {
    return subLabel;
  }

  public void setSubLabel(String subLabel) {
    this.subLabel = subLabel;
  }

  public CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate actionInstruction(String actionInstruction) {
    this.actionInstruction = actionInstruction;
    return this;
  }

   /**
   * Get actionInstruction
   * @return actionInstruction
  **/
  @ApiModelProperty(value = "")
  public String getActionInstruction() {
    return actionInstruction;
  }

  public void setActionInstruction(String actionInstruction) {
    this.actionInstruction = actionInstruction;
  }

  public CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate currencyAndTradeInfo(CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo currencyAndTradeInfo) {
    this.currencyAndTradeInfo = currencyAndTradeInfo;
    return this;
  }

   /**
   * Get currencyAndTradeInfo
   * @return currencyAndTradeInfo
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo getCurrencyAndTradeInfo() {
    return currencyAndTradeInfo;
  }

  public void setCurrencyAndTradeInfo(CoinbaseEngPrimeNotificationApiCurrencyAndTradeInfo currencyAndTradeInfo) {
    this.currencyAndTradeInfo = currencyAndTradeInfo;
  }

  public CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate additionalText(String additionalText) {
    this.additionalText = additionalText;
    return this;
  }

   /**
   * Get additionalText
   * @return additionalText
  **/
  @ApiModelProperty(value = "")
  public String getAdditionalText() {
    return additionalText;
  }

  public void setAdditionalText(String additionalText) {
    this.additionalText = additionalText;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate coinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate = (CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate) o;
    return Objects.equals(this.action, coinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate.action) &&
        Objects.equals(this.mainLabel, coinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate.mainLabel) &&
        Objects.equals(this.subLabel, coinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate.subLabel) &&
        Objects.equals(this.actionInstruction, coinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate.actionInstruction) &&
        Objects.equals(this.currencyAndTradeInfo, coinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate.currencyAndTradeInfo) &&
        Objects.equals(this.additionalText, coinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate.additionalText);
  }

  @Override
  public int hashCode() {
    return Objects.hash(action, mainLabel, subLabel, actionInstruction, currencyAndTradeInfo, additionalText);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeNotificationApiTaskConvertedInAppTemplate {\n");
    
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    mainLabel: ").append(toIndentedString(mainLabel)).append("\n");
    sb.append("    subLabel: ").append(toIndentedString(subLabel)).append("\n");
    sb.append("    actionInstruction: ").append(toIndentedString(actionInstruction)).append("\n");
    sb.append("    currencyAndTradeInfo: ").append(toIndentedString(currencyAndTradeInfo)).append("\n");
    sb.append("    additionalText: ").append(toIndentedString(additionalText)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

