/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseTwsDappContext;
import io.swagger.client.model.CoinbaseTwsEvmTransactionDetails;
import io.swagger.client.model.CoinbaseTwsNetworkMetadata;
import io.swagger.client.model.CoinbaseTwsWeb3TransactionMetadata;
import java.io.IOException;

/**
 * CoinbaseTwsWeb3TransactionAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsWeb3TransactionAction {
  @SerializedName("raw_unsigned_tx")
  private String rawUnsignedTx = null;

  @SerializedName("network_metadata")
  private CoinbaseTwsNetworkMetadata networkMetadata = null;

  @SerializedName("dapp_context")
  private CoinbaseTwsDappContext dappContext = null;

  @SerializedName("metadata")
  private CoinbaseTwsWeb3TransactionMetadata metadata = null;

  @SerializedName("destination")
  private String destination = null;

  @SerializedName("evm_transaction_details")
  private CoinbaseTwsEvmTransactionDetails evmTransactionDetails = null;

  @SerializedName("replaced_transaction_id")
  private String replacedTransactionId = null;

  public CoinbaseTwsWeb3TransactionAction rawUnsignedTx(String rawUnsignedTx) {
    this.rawUnsignedTx = rawUnsignedTx;
    return this;
  }

   /**
   * Unsigned transaction hex string
   * @return rawUnsignedTx
  **/
  @ApiModelProperty(value = "Unsigned transaction hex string")
  public String getRawUnsignedTx() {
    return rawUnsignedTx;
  }

  public void setRawUnsignedTx(String rawUnsignedTx) {
    this.rawUnsignedTx = rawUnsignedTx;
  }

  public CoinbaseTwsWeb3TransactionAction networkMetadata(CoinbaseTwsNetworkMetadata networkMetadata) {
    this.networkMetadata = networkMetadata;
    return this;
  }

   /**
   * Network information for web3 transaction
   * @return networkMetadata
  **/
  @ApiModelProperty(value = "Network information for web3 transaction")
  public CoinbaseTwsNetworkMetadata getNetworkMetadata() {
    return networkMetadata;
  }

  public void setNetworkMetadata(CoinbaseTwsNetworkMetadata networkMetadata) {
    this.networkMetadata = networkMetadata;
  }

  public CoinbaseTwsWeb3TransactionAction dappContext(CoinbaseTwsDappContext dappContext) {
    this.dappContext = dappContext;
    return this;
  }

   /**
   * Dapp information for web3 transaction
   * @return dappContext
  **/
  @ApiModelProperty(value = "Dapp information for web3 transaction")
  public CoinbaseTwsDappContext getDappContext() {
    return dappContext;
  }

  public void setDappContext(CoinbaseTwsDappContext dappContext) {
    this.dappContext = dappContext;
  }

  public CoinbaseTwsWeb3TransactionAction metadata(CoinbaseTwsWeb3TransactionMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Fields for specifying transaction amounts
   * @return metadata
  **/
  @ApiModelProperty(value = "Fields for specifying transaction amounts")
  public CoinbaseTwsWeb3TransactionMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(CoinbaseTwsWeb3TransactionMetadata metadata) {
    this.metadata = metadata;
  }

  public CoinbaseTwsWeb3TransactionAction destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Destination address for the transaction
   * @return destination
  **/
  @ApiModelProperty(value = "Destination address for the transaction")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public CoinbaseTwsWeb3TransactionAction evmTransactionDetails(CoinbaseTwsEvmTransactionDetails evmTransactionDetails) {
    this.evmTransactionDetails = evmTransactionDetails;
    return this;
  }

   /**
   * Get evmTransactionDetails
   * @return evmTransactionDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseTwsEvmTransactionDetails getEvmTransactionDetails() {
    return evmTransactionDetails;
  }

  public void setEvmTransactionDetails(CoinbaseTwsEvmTransactionDetails evmTransactionDetails) {
    this.evmTransactionDetails = evmTransactionDetails;
  }

  public CoinbaseTwsWeb3TransactionAction replacedTransactionId(String replacedTransactionId) {
    this.replacedTransactionId = replacedTransactionId;
    return this;
  }

   /**
   * Set when creating a replacement transaction. The id of transaction being replaced.
   * @return replacedTransactionId
  **/
  @ApiModelProperty(value = "Set when creating a replacement transaction. The id of transaction being replaced.")
  public String getReplacedTransactionId() {
    return replacedTransactionId;
  }

  public void setReplacedTransactionId(String replacedTransactionId) {
    this.replacedTransactionId = replacedTransactionId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsWeb3TransactionAction coinbaseTwsWeb3TransactionAction = (CoinbaseTwsWeb3TransactionAction) o;
    return Objects.equals(this.rawUnsignedTx, coinbaseTwsWeb3TransactionAction.rawUnsignedTx) &&
        Objects.equals(this.networkMetadata, coinbaseTwsWeb3TransactionAction.networkMetadata) &&
        Objects.equals(this.dappContext, coinbaseTwsWeb3TransactionAction.dappContext) &&
        Objects.equals(this.metadata, coinbaseTwsWeb3TransactionAction.metadata) &&
        Objects.equals(this.destination, coinbaseTwsWeb3TransactionAction.destination) &&
        Objects.equals(this.evmTransactionDetails, coinbaseTwsWeb3TransactionAction.evmTransactionDetails) &&
        Objects.equals(this.replacedTransactionId, coinbaseTwsWeb3TransactionAction.replacedTransactionId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rawUnsignedTx, networkMetadata, dappContext, metadata, destination, evmTransactionDetails, replacedTransactionId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsWeb3TransactionAction {\n");
    
    sb.append("    rawUnsignedTx: ").append(toIndentedString(rawUnsignedTx)).append("\n");
    sb.append("    networkMetadata: ").append(toIndentedString(networkMetadata)).append("\n");
    sb.append("    dappContext: ").append(toIndentedString(dappContext)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    evmTransactionDetails: ").append(toIndentedString(evmTransactionDetails)).append("\n");
    sb.append("    replacedTransactionId: ").append(toIndentedString(replacedTransactionId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

