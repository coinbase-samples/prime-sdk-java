/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseCustodyApiActivityUser
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiActivityUser {
  @SerializedName("avatar_url")
  private String avatarUrl = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("email")
  private String email = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("display_coinbase_label")
  private Boolean displayCoinbaseLabel = null;

  public CoinbaseCustodyApiActivityUser avatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
    return this;
  }

   /**
   * Get avatarUrl
   * @return avatarUrl
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAvatarUrl() {
    return avatarUrl;
  }

  public void setAvatarUrl(String avatarUrl) {
    this.avatarUrl = avatarUrl;
  }

  public CoinbaseCustodyApiActivityUser createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiActivityUser email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Get email
   * @return email
  **/
  @ApiModelProperty(required = true, value = "")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public CoinbaseCustodyApiActivityUser id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiActivityUser name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseCustodyApiActivityUser state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public CoinbaseCustodyApiActivityUser displayCoinbaseLabel(Boolean displayCoinbaseLabel) {
    this.displayCoinbaseLabel = displayCoinbaseLabel;
    return this;
  }

   /**
   * Get displayCoinbaseLabel
   * @return displayCoinbaseLabel
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isDisplayCoinbaseLabel() {
    return displayCoinbaseLabel;
  }

  public void setDisplayCoinbaseLabel(Boolean displayCoinbaseLabel) {
    this.displayCoinbaseLabel = displayCoinbaseLabel;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiActivityUser coinbaseCustodyApiActivityUser = (CoinbaseCustodyApiActivityUser) o;
    return Objects.equals(this.avatarUrl, coinbaseCustodyApiActivityUser.avatarUrl) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiActivityUser.createdAt) &&
        Objects.equals(this.email, coinbaseCustodyApiActivityUser.email) &&
        Objects.equals(this.id, coinbaseCustodyApiActivityUser.id) &&
        Objects.equals(this.name, coinbaseCustodyApiActivityUser.name) &&
        Objects.equals(this.state, coinbaseCustodyApiActivityUser.state) &&
        Objects.equals(this.displayCoinbaseLabel, coinbaseCustodyApiActivityUser.displayCoinbaseLabel);
  }

  @Override
  public int hashCode() {
    return Objects.hash(avatarUrl, createdAt, email, id, name, state, displayCoinbaseLabel);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiActivityUser {\n");
    
    sb.append("    avatarUrl: ").append(toIndentedString(avatarUrl)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    email: ").append(toIndentedString(email)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    displayCoinbaseLabel: ").append(toIndentedString(displayCoinbaseLabel)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

