/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingAmount;
import io.swagger.client.model.CoinbaseFinancingMarginCallStatus;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseFinancingMarginCallHistoryRecord
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingMarginCallHistoryRecord {
  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("required_collateral_notional")
  private CoinbaseFinancingAmount requiredCollateralNotional = null;

  @SerializedName("held_collateral_notional")
  private CoinbaseFinancingAmount heldCollateralNotional = null;

  @SerializedName("held_collateral_breakdown")
  private List<CoinbaseFinancingAmount> heldCollateralBreakdown = null;

  @SerializedName("excess_collateral_notional")
  private CoinbaseFinancingAmount excessCollateralNotional = null;

  @SerializedName("held_collateral_percentage")
  private String heldCollateralPercentage = null;

  @SerializedName("margin_call_amount_notional")
  private CoinbaseFinancingAmount marginCallAmountNotional = null;

  @SerializedName("outstanding_margin_call_amount_notional")
  private CoinbaseFinancingAmount outstandingMarginCallAmountNotional = null;

  @SerializedName("status")
  private CoinbaseFinancingMarginCallStatus status = null;

  @SerializedName("due_at")
  private OffsetDateTime dueAt = null;

  @SerializedName("margin_call_id")
  private String marginCallId = null;

  @SerializedName("adjusted_held_collateral_notional")
  private CoinbaseFinancingAmount adjustedHeldCollateralNotional = null;

  @SerializedName("entity_id")
  private String entityId = null;

  @SerializedName("entity_name")
  private String entityName = null;

  @SerializedName("paid")
  private CoinbaseFinancingAmount paid = null;

  @SerializedName("excess_shortfall_percentage")
  private String excessShortfallPercentage = null;

  public CoinbaseFinancingMarginCallHistoryRecord createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseFinancingMarginCallHistoryRecord requiredCollateralNotional(CoinbaseFinancingAmount requiredCollateralNotional) {
    this.requiredCollateralNotional = requiredCollateralNotional;
    return this;
  }

   /**
   * Get requiredCollateralNotional
   * @return requiredCollateralNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getRequiredCollateralNotional() {
    return requiredCollateralNotional;
  }

  public void setRequiredCollateralNotional(CoinbaseFinancingAmount requiredCollateralNotional) {
    this.requiredCollateralNotional = requiredCollateralNotional;
  }

  public CoinbaseFinancingMarginCallHistoryRecord heldCollateralNotional(CoinbaseFinancingAmount heldCollateralNotional) {
    this.heldCollateralNotional = heldCollateralNotional;
    return this;
  }

   /**
   * Get heldCollateralNotional
   * @return heldCollateralNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getHeldCollateralNotional() {
    return heldCollateralNotional;
  }

  public void setHeldCollateralNotional(CoinbaseFinancingAmount heldCollateralNotional) {
    this.heldCollateralNotional = heldCollateralNotional;
  }

  public CoinbaseFinancingMarginCallHistoryRecord heldCollateralBreakdown(List<CoinbaseFinancingAmount> heldCollateralBreakdown) {
    this.heldCollateralBreakdown = heldCollateralBreakdown;
    return this;
  }

  public CoinbaseFinancingMarginCallHistoryRecord addHeldCollateralBreakdownItem(CoinbaseFinancingAmount heldCollateralBreakdownItem) {
    if (this.heldCollateralBreakdown == null) {
      this.heldCollateralBreakdown = new ArrayList<CoinbaseFinancingAmount>();
    }
    this.heldCollateralBreakdown.add(heldCollateralBreakdownItem);
    return this;
  }

   /**
   * Get heldCollateralBreakdown
   * @return heldCollateralBreakdown
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingAmount> getHeldCollateralBreakdown() {
    return heldCollateralBreakdown;
  }

  public void setHeldCollateralBreakdown(List<CoinbaseFinancingAmount> heldCollateralBreakdown) {
    this.heldCollateralBreakdown = heldCollateralBreakdown;
  }

  public CoinbaseFinancingMarginCallHistoryRecord excessCollateralNotional(CoinbaseFinancingAmount excessCollateralNotional) {
    this.excessCollateralNotional = excessCollateralNotional;
    return this;
  }

   /**
   * Get excessCollateralNotional
   * @return excessCollateralNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getExcessCollateralNotional() {
    return excessCollateralNotional;
  }

  public void setExcessCollateralNotional(CoinbaseFinancingAmount excessCollateralNotional) {
    this.excessCollateralNotional = excessCollateralNotional;
  }

  public CoinbaseFinancingMarginCallHistoryRecord heldCollateralPercentage(String heldCollateralPercentage) {
    this.heldCollateralPercentage = heldCollateralPercentage;
    return this;
  }

   /**
   * Get heldCollateralPercentage
   * @return heldCollateralPercentage
  **/
  @ApiModelProperty(value = "")
  public String getHeldCollateralPercentage() {
    return heldCollateralPercentage;
  }

  public void setHeldCollateralPercentage(String heldCollateralPercentage) {
    this.heldCollateralPercentage = heldCollateralPercentage;
  }

  public CoinbaseFinancingMarginCallHistoryRecord marginCallAmountNotional(CoinbaseFinancingAmount marginCallAmountNotional) {
    this.marginCallAmountNotional = marginCallAmountNotional;
    return this;
  }

   /**
   * Get marginCallAmountNotional
   * @return marginCallAmountNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getMarginCallAmountNotional() {
    return marginCallAmountNotional;
  }

  public void setMarginCallAmountNotional(CoinbaseFinancingAmount marginCallAmountNotional) {
    this.marginCallAmountNotional = marginCallAmountNotional;
  }

  public CoinbaseFinancingMarginCallHistoryRecord outstandingMarginCallAmountNotional(CoinbaseFinancingAmount outstandingMarginCallAmountNotional) {
    this.outstandingMarginCallAmountNotional = outstandingMarginCallAmountNotional;
    return this;
  }

   /**
   * Get outstandingMarginCallAmountNotional
   * @return outstandingMarginCallAmountNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getOutstandingMarginCallAmountNotional() {
    return outstandingMarginCallAmountNotional;
  }

  public void setOutstandingMarginCallAmountNotional(CoinbaseFinancingAmount outstandingMarginCallAmountNotional) {
    this.outstandingMarginCallAmountNotional = outstandingMarginCallAmountNotional;
  }

  public CoinbaseFinancingMarginCallHistoryRecord status(CoinbaseFinancingMarginCallStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingMarginCallStatus getStatus() {
    return status;
  }

  public void setStatus(CoinbaseFinancingMarginCallStatus status) {
    this.status = status;
  }

  public CoinbaseFinancingMarginCallHistoryRecord dueAt(OffsetDateTime dueAt) {
    this.dueAt = dueAt;
    return this;
  }

   /**
   * Get dueAt
   * @return dueAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getDueAt() {
    return dueAt;
  }

  public void setDueAt(OffsetDateTime dueAt) {
    this.dueAt = dueAt;
  }

  public CoinbaseFinancingMarginCallHistoryRecord marginCallId(String marginCallId) {
    this.marginCallId = marginCallId;
    return this;
  }

   /**
   * Get marginCallId
   * @return marginCallId
  **/
  @ApiModelProperty(value = "")
  public String getMarginCallId() {
    return marginCallId;
  }

  public void setMarginCallId(String marginCallId) {
    this.marginCallId = marginCallId;
  }

  public CoinbaseFinancingMarginCallHistoryRecord adjustedHeldCollateralNotional(CoinbaseFinancingAmount adjustedHeldCollateralNotional) {
    this.adjustedHeldCollateralNotional = adjustedHeldCollateralNotional;
    return this;
  }

   /**
   * Get adjustedHeldCollateralNotional
   * @return adjustedHeldCollateralNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getAdjustedHeldCollateralNotional() {
    return adjustedHeldCollateralNotional;
  }

  public void setAdjustedHeldCollateralNotional(CoinbaseFinancingAmount adjustedHeldCollateralNotional) {
    this.adjustedHeldCollateralNotional = adjustedHeldCollateralNotional;
  }

  public CoinbaseFinancingMarginCallHistoryRecord entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @ApiModelProperty(value = "")
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public CoinbaseFinancingMarginCallHistoryRecord entityName(String entityName) {
    this.entityName = entityName;
    return this;
  }

   /**
   * Get entityName
   * @return entityName
  **/
  @ApiModelProperty(value = "")
  public String getEntityName() {
    return entityName;
  }

  public void setEntityName(String entityName) {
    this.entityName = entityName;
  }

  public CoinbaseFinancingMarginCallHistoryRecord paid(CoinbaseFinancingAmount paid) {
    this.paid = paid;
    return this;
  }

   /**
   * Get paid
   * @return paid
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getPaid() {
    return paid;
  }

  public void setPaid(CoinbaseFinancingAmount paid) {
    this.paid = paid;
  }

  public CoinbaseFinancingMarginCallHistoryRecord excessShortfallPercentage(String excessShortfallPercentage) {
    this.excessShortfallPercentage = excessShortfallPercentage;
    return this;
  }

   /**
   * Get excessShortfallPercentage
   * @return excessShortfallPercentage
  **/
  @ApiModelProperty(value = "")
  public String getExcessShortfallPercentage() {
    return excessShortfallPercentage;
  }

  public void setExcessShortfallPercentage(String excessShortfallPercentage) {
    this.excessShortfallPercentage = excessShortfallPercentage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingMarginCallHistoryRecord coinbaseFinancingMarginCallHistoryRecord = (CoinbaseFinancingMarginCallHistoryRecord) o;
    return Objects.equals(this.createdAt, coinbaseFinancingMarginCallHistoryRecord.createdAt) &&
        Objects.equals(this.requiredCollateralNotional, coinbaseFinancingMarginCallHistoryRecord.requiredCollateralNotional) &&
        Objects.equals(this.heldCollateralNotional, coinbaseFinancingMarginCallHistoryRecord.heldCollateralNotional) &&
        Objects.equals(this.heldCollateralBreakdown, coinbaseFinancingMarginCallHistoryRecord.heldCollateralBreakdown) &&
        Objects.equals(this.excessCollateralNotional, coinbaseFinancingMarginCallHistoryRecord.excessCollateralNotional) &&
        Objects.equals(this.heldCollateralPercentage, coinbaseFinancingMarginCallHistoryRecord.heldCollateralPercentage) &&
        Objects.equals(this.marginCallAmountNotional, coinbaseFinancingMarginCallHistoryRecord.marginCallAmountNotional) &&
        Objects.equals(this.outstandingMarginCallAmountNotional, coinbaseFinancingMarginCallHistoryRecord.outstandingMarginCallAmountNotional) &&
        Objects.equals(this.status, coinbaseFinancingMarginCallHistoryRecord.status) &&
        Objects.equals(this.dueAt, coinbaseFinancingMarginCallHistoryRecord.dueAt) &&
        Objects.equals(this.marginCallId, coinbaseFinancingMarginCallHistoryRecord.marginCallId) &&
        Objects.equals(this.adjustedHeldCollateralNotional, coinbaseFinancingMarginCallHistoryRecord.adjustedHeldCollateralNotional) &&
        Objects.equals(this.entityId, coinbaseFinancingMarginCallHistoryRecord.entityId) &&
        Objects.equals(this.entityName, coinbaseFinancingMarginCallHistoryRecord.entityName) &&
        Objects.equals(this.paid, coinbaseFinancingMarginCallHistoryRecord.paid) &&
        Objects.equals(this.excessShortfallPercentage, coinbaseFinancingMarginCallHistoryRecord.excessShortfallPercentage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(createdAt, requiredCollateralNotional, heldCollateralNotional, heldCollateralBreakdown, excessCollateralNotional, heldCollateralPercentage, marginCallAmountNotional, outstandingMarginCallAmountNotional, status, dueAt, marginCallId, adjustedHeldCollateralNotional, entityId, entityName, paid, excessShortfallPercentage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingMarginCallHistoryRecord {\n");
    
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    requiredCollateralNotional: ").append(toIndentedString(requiredCollateralNotional)).append("\n");
    sb.append("    heldCollateralNotional: ").append(toIndentedString(heldCollateralNotional)).append("\n");
    sb.append("    heldCollateralBreakdown: ").append(toIndentedString(heldCollateralBreakdown)).append("\n");
    sb.append("    excessCollateralNotional: ").append(toIndentedString(excessCollateralNotional)).append("\n");
    sb.append("    heldCollateralPercentage: ").append(toIndentedString(heldCollateralPercentage)).append("\n");
    sb.append("    marginCallAmountNotional: ").append(toIndentedString(marginCallAmountNotional)).append("\n");
    sb.append("    outstandingMarginCallAmountNotional: ").append(toIndentedString(outstandingMarginCallAmountNotional)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    dueAt: ").append(toIndentedString(dueAt)).append("\n");
    sb.append("    marginCallId: ").append(toIndentedString(marginCallId)).append("\n");
    sb.append("    adjustedHeldCollateralNotional: ").append(toIndentedString(adjustedHeldCollateralNotional)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityName: ").append(toIndentedString(entityName)).append("\n");
    sb.append("    paid: ").append(toIndentedString(paid)).append("\n");
    sb.append("    excessShortfallPercentage: ").append(toIndentedString(excessShortfallPercentage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

