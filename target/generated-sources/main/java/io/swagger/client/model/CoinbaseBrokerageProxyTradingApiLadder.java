/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyTradingApiLadderPriceLevel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseBrokerageProxyTradingApiLadder
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyTradingApiLadder {
  @SerializedName("price_levels")
  private List<CoinbaseBrokerageProxyTradingApiLadderPriceLevel> priceLevels = new ArrayList<CoinbaseBrokerageProxyTradingApiLadderPriceLevel>();

  @SerializedName("price_levels_mid_index")
  private Integer priceLevelsMidIndex = null;

  public CoinbaseBrokerageProxyTradingApiLadder priceLevels(List<CoinbaseBrokerageProxyTradingApiLadderPriceLevel> priceLevels) {
    this.priceLevels = priceLevels;
    return this;
  }

  public CoinbaseBrokerageProxyTradingApiLadder addPriceLevelsItem(CoinbaseBrokerageProxyTradingApiLadderPriceLevel priceLevelsItem) {
    this.priceLevels.add(priceLevelsItem);
    return this;
  }

   /**
   * Array of price levels: [price, ask_size, ask_sum_size, bid_size, bid_sum_size], sorted in price desc order.
   * @return priceLevels
  **/
  @ApiModelProperty(required = true, value = "Array of price levels: [price, ask_size, ask_sum_size, bid_size, bid_sum_size], sorted in price desc order.")
  public List<CoinbaseBrokerageProxyTradingApiLadderPriceLevel> getPriceLevels() {
    return priceLevels;
  }

  public void setPriceLevels(List<CoinbaseBrokerageProxyTradingApiLadderPriceLevel> priceLevels) {
    this.priceLevels = priceLevels;
  }

  public CoinbaseBrokerageProxyTradingApiLadder priceLevelsMidIndex(Integer priceLevelsMidIndex) {
    this.priceLevelsMidIndex = priceLevelsMidIndex;
    return this;
  }

   /**
   * The index of the mid-price level for the price levels. If the mid-price is between two levels, the index will round down to the closest level. If no levels are returned it will return 0.
   * @return priceLevelsMidIndex
  **/
  @ApiModelProperty(required = true, value = "The index of the mid-price level for the price levels. If the mid-price is between two levels, the index will round down to the closest level. If no levels are returned it will return 0.")
  public Integer getPriceLevelsMidIndex() {
    return priceLevelsMidIndex;
  }

  public void setPriceLevelsMidIndex(Integer priceLevelsMidIndex) {
    this.priceLevelsMidIndex = priceLevelsMidIndex;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyTradingApiLadder coinbaseBrokerageProxyTradingApiLadder = (CoinbaseBrokerageProxyTradingApiLadder) o;
    return Objects.equals(this.priceLevels, coinbaseBrokerageProxyTradingApiLadder.priceLevels) &&
        Objects.equals(this.priceLevelsMidIndex, coinbaseBrokerageProxyTradingApiLadder.priceLevelsMidIndex);
  }

  @Override
  public int hashCode() {
    return Objects.hash(priceLevels, priceLevelsMidIndex);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyTradingApiLadder {\n");
    
    sb.append("    priceLevels: ").append(toIndentedString(priceLevels)).append("\n");
    sb.append("    priceLevelsMidIndex: ").append(toIndentedString(priceLevelsMidIndex)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

