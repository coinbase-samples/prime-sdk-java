/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbasePaymentsCommonPaymentMethodsNovaAccount
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbasePaymentsCommonPaymentMethodsNovaAccount {
  @SerializedName("network")
  private String network = null;

  @SerializedName("nova_account_id")
  private String novaAccountId = null;

  @SerializedName("pool_name")
  private String poolName = null;

  @SerializedName("account_idempotency_key")
  private String accountIdempotencyKey = null;

  public CoinbasePaymentsCommonPaymentMethodsNovaAccount network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(value = "")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public CoinbasePaymentsCommonPaymentMethodsNovaAccount novaAccountId(String novaAccountId) {
    this.novaAccountId = novaAccountId;
    return this;
  }

   /**
   * Get novaAccountId
   * @return novaAccountId
  **/
  @ApiModelProperty(value = "")
  public String getNovaAccountId() {
    return novaAccountId;
  }

  public void setNovaAccountId(String novaAccountId) {
    this.novaAccountId = novaAccountId;
  }

  public CoinbasePaymentsCommonPaymentMethodsNovaAccount poolName(String poolName) {
    this.poolName = poolName;
    return this;
  }

   /**
   * Get poolName
   * @return poolName
  **/
  @ApiModelProperty(value = "")
  public String getPoolName() {
    return poolName;
  }

  public void setPoolName(String poolName) {
    this.poolName = poolName;
  }

  public CoinbasePaymentsCommonPaymentMethodsNovaAccount accountIdempotencyKey(String accountIdempotencyKey) {
    this.accountIdempotencyKey = accountIdempotencyKey;
    return this;
  }

   /**
   * Get accountIdempotencyKey
   * @return accountIdempotencyKey
  **/
  @ApiModelProperty(value = "")
  public String getAccountIdempotencyKey() {
    return accountIdempotencyKey;
  }

  public void setAccountIdempotencyKey(String accountIdempotencyKey) {
    this.accountIdempotencyKey = accountIdempotencyKey;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbasePaymentsCommonPaymentMethodsNovaAccount coinbasePaymentsCommonPaymentMethodsNovaAccount = (CoinbasePaymentsCommonPaymentMethodsNovaAccount) o;
    return Objects.equals(this.network, coinbasePaymentsCommonPaymentMethodsNovaAccount.network) &&
        Objects.equals(this.novaAccountId, coinbasePaymentsCommonPaymentMethodsNovaAccount.novaAccountId) &&
        Objects.equals(this.poolName, coinbasePaymentsCommonPaymentMethodsNovaAccount.poolName) &&
        Objects.equals(this.accountIdempotencyKey, coinbasePaymentsCommonPaymentMethodsNovaAccount.accountIdempotencyKey);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network, novaAccountId, poolName, accountIdempotencyKey);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbasePaymentsCommonPaymentMethodsNovaAccount {\n");
    
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    novaAccountId: ").append(toIndentedString(novaAccountId)).append("\n");
    sb.append("    poolName: ").append(toIndentedString(poolName)).append("\n");
    sb.append("    accountIdempotencyKey: ").append(toIndentedString(accountIdempotencyKey)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

