/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiConversionOptions;
import io.swagger.client.model.CoinbaseCustodyApiDestinationOptions;
import io.swagger.client.model.CoinbaseCustodyApiKeyRegistrationOptions;
import io.swagger.client.model.CoinbaseCustodyApiMiddleOfficeOptions;
import io.swagger.client.model.CoinbaseCustodyApiRewardOptions;
import io.swagger.client.model.CoinbaseCustodyApiStakingOptions;
import io.swagger.client.model.CoinbaseCustodyApiTransactionAuditDataRedoTxInfo;
import io.swagger.client.model.CoinbaseCustodyApiTransactionAuditDataTestWithdrawal;
import io.swagger.client.model.CoinbaseCustodyApiTransactionType;
import io.swagger.client.model.CoinbaseCustodyApiTransferSummary;
import io.swagger.client.model.CoinbaseCustodyApiVoteAuthorizeOptions;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CoinbaseCustodyApiTransactionAuditData
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiTransactionAuditData {
  @SerializedName("id")
  private String id = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("staking_amount")
  private String stakingAmount = null;

  @SerializedName("value")
  private String value = null;

  @SerializedName("staking_value")
  private String stakingValue = null;

  @SerializedName("type")
  private CoinbaseCustodyApiTransactionType type = null;

  @SerializedName("human_id")
  private String humanId = null;

  @SerializedName("customer_fees")
  private String customerFees = null;

  @SerializedName("custody_fees")
  private String custodyFees = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("source_address")
  private String sourceAddress = null;

  @SerializedName("destination")
  private String destination = null;

  @SerializedName("vehicle_id")
  private String vehicleId = null;

  @SerializedName("vehicle_name")
  private String vehicleName = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("wallet_id")
  private String walletId = null;

  @SerializedName("fee_refund_state")
  private String feeRefundState = null;

  @SerializedName("test_withdrawal")
  private CoinbaseCustodyApiTransactionAuditDataTestWithdrawal testWithdrawal = null;

  @SerializedName("redo_tx_info")
  private CoinbaseCustodyApiTransactionAuditDataRedoTxInfo redoTxInfo = null;

  @SerializedName("options")
  private CoinbaseCustodyApiDestinationOptions options = null;

  @SerializedName("key_registration_options")
  private CoinbaseCustodyApiKeyRegistrationOptions keyRegistrationOptions = null;

  @SerializedName("conversion_options")
  private CoinbaseCustodyApiConversionOptions conversionOptions = null;

  @SerializedName("vote_authorize_options")
  private CoinbaseCustodyApiVoteAuthorizeOptions voteAuthorizeOptions = null;

  @SerializedName("middle_office_options")
  private CoinbaseCustodyApiMiddleOfficeOptions middleOfficeOptions = null;

  @SerializedName("staking_options")
  private CoinbaseCustodyApiStakingOptions stakingOptions = null;

  @SerializedName("reward_options")
  private CoinbaseCustodyApiRewardOptions rewardOptions = null;

  @SerializedName("summary")
  private CoinbaseCustodyApiTransferSummary summary = null;

  @SerializedName("usd_amount_at_creation")
  private String usdAmountAtCreation = null;

  @SerializedName("metadata")
  private Map<String, String> metadata = null;

  public CoinbaseCustodyApiTransactionAuditData id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiTransactionAuditData amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseCustodyApiTransactionAuditData stakingAmount(String stakingAmount) {
    this.stakingAmount = stakingAmount;
    return this;
  }

   /**
   * Get stakingAmount
   * @return stakingAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStakingAmount() {
    return stakingAmount;
  }

  public void setStakingAmount(String stakingAmount) {
    this.stakingAmount = stakingAmount;
  }

  public CoinbaseCustodyApiTransactionAuditData value(String value) {
    this.value = value;
    return this;
  }

   /**
   * Get value
   * @return value
  **/
  @ApiModelProperty(required = true, value = "")
  public String getValue() {
    return value;
  }

  public void setValue(String value) {
    this.value = value;
  }

  public CoinbaseCustodyApiTransactionAuditData stakingValue(String stakingValue) {
    this.stakingValue = stakingValue;
    return this;
  }

   /**
   * Get stakingValue
   * @return stakingValue
  **/
  @ApiModelProperty(required = true, value = "")
  public String getStakingValue() {
    return stakingValue;
  }

  public void setStakingValue(String stakingValue) {
    this.stakingValue = stakingValue;
  }

  public CoinbaseCustodyApiTransactionAuditData type(CoinbaseCustodyApiTransactionType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiTransactionType getType() {
    return type;
  }

  public void setType(CoinbaseCustodyApiTransactionType type) {
    this.type = type;
  }

  public CoinbaseCustodyApiTransactionAuditData humanId(String humanId) {
    this.humanId = humanId;
    return this;
  }

   /**
   * Get humanId
   * @return humanId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getHumanId() {
    return humanId;
  }

  public void setHumanId(String humanId) {
    this.humanId = humanId;
  }

  public CoinbaseCustodyApiTransactionAuditData customerFees(String customerFees) {
    this.customerFees = customerFees;
    return this;
  }

   /**
   * Get customerFees
   * @return customerFees
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCustomerFees() {
    return customerFees;
  }

  public void setCustomerFees(String customerFees) {
    this.customerFees = customerFees;
  }

  public CoinbaseCustodyApiTransactionAuditData custodyFees(String custodyFees) {
    this.custodyFees = custodyFees;
    return this;
  }

   /**
   * Get custodyFees
   * @return custodyFees
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCustodyFees() {
    return custodyFees;
  }

  public void setCustodyFees(String custodyFees) {
    this.custodyFees = custodyFees;
  }

  public CoinbaseCustodyApiTransactionAuditData currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseCustodyApiTransactionAuditData sourceAddress(String sourceAddress) {
    this.sourceAddress = sourceAddress;
    return this;
  }

   /**
   * Get sourceAddress
   * @return sourceAddress
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceAddress() {
    return sourceAddress;
  }

  public void setSourceAddress(String sourceAddress) {
    this.sourceAddress = sourceAddress;
  }

  public CoinbaseCustodyApiTransactionAuditData destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public CoinbaseCustodyApiTransactionAuditData vehicleId(String vehicleId) {
    this.vehicleId = vehicleId;
    return this;
  }

   /**
   * Get vehicleId
   * @return vehicleId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getVehicleId() {
    return vehicleId;
  }

  public void setVehicleId(String vehicleId) {
    this.vehicleId = vehicleId;
  }

  public CoinbaseCustodyApiTransactionAuditData vehicleName(String vehicleName) {
    this.vehicleName = vehicleName;
    return this;
  }

   /**
   * Get vehicleName
   * @return vehicleName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getVehicleName() {
    return vehicleName;
  }

  public void setVehicleName(String vehicleName) {
    this.vehicleName = vehicleName;
  }

  public CoinbaseCustodyApiTransactionAuditData userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbaseCustodyApiTransactionAuditData walletId(String walletId) {
    this.walletId = walletId;
    return this;
  }

   /**
   * Get walletId
   * @return walletId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getWalletId() {
    return walletId;
  }

  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }

  public CoinbaseCustodyApiTransactionAuditData feeRefundState(String feeRefundState) {
    this.feeRefundState = feeRefundState;
    return this;
  }

   /**
   * Get feeRefundState
   * @return feeRefundState
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFeeRefundState() {
    return feeRefundState;
  }

  public void setFeeRefundState(String feeRefundState) {
    this.feeRefundState = feeRefundState;
  }

  public CoinbaseCustodyApiTransactionAuditData testWithdrawal(CoinbaseCustodyApiTransactionAuditDataTestWithdrawal testWithdrawal) {
    this.testWithdrawal = testWithdrawal;
    return this;
  }

   /**
   * Get testWithdrawal
   * @return testWithdrawal
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal getTestWithdrawal() {
    return testWithdrawal;
  }

  public void setTestWithdrawal(CoinbaseCustodyApiTransactionAuditDataTestWithdrawal testWithdrawal) {
    this.testWithdrawal = testWithdrawal;
  }

  public CoinbaseCustodyApiTransactionAuditData redoTxInfo(CoinbaseCustodyApiTransactionAuditDataRedoTxInfo redoTxInfo) {
    this.redoTxInfo = redoTxInfo;
    return this;
  }

   /**
   * Get redoTxInfo
   * @return redoTxInfo
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransactionAuditDataRedoTxInfo getRedoTxInfo() {
    return redoTxInfo;
  }

  public void setRedoTxInfo(CoinbaseCustodyApiTransactionAuditDataRedoTxInfo redoTxInfo) {
    this.redoTxInfo = redoTxInfo;
  }

  public CoinbaseCustodyApiTransactionAuditData options(CoinbaseCustodyApiDestinationOptions options) {
    this.options = options;
    return this;
  }

   /**
   * Get options
   * @return options
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiDestinationOptions getOptions() {
    return options;
  }

  public void setOptions(CoinbaseCustodyApiDestinationOptions options) {
    this.options = options;
  }

  public CoinbaseCustodyApiTransactionAuditData keyRegistrationOptions(CoinbaseCustodyApiKeyRegistrationOptions keyRegistrationOptions) {
    this.keyRegistrationOptions = keyRegistrationOptions;
    return this;
  }

   /**
   * Get keyRegistrationOptions
   * @return keyRegistrationOptions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiKeyRegistrationOptions getKeyRegistrationOptions() {
    return keyRegistrationOptions;
  }

  public void setKeyRegistrationOptions(CoinbaseCustodyApiKeyRegistrationOptions keyRegistrationOptions) {
    this.keyRegistrationOptions = keyRegistrationOptions;
  }

  public CoinbaseCustodyApiTransactionAuditData conversionOptions(CoinbaseCustodyApiConversionOptions conversionOptions) {
    this.conversionOptions = conversionOptions;
    return this;
  }

   /**
   * Get conversionOptions
   * @return conversionOptions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiConversionOptions getConversionOptions() {
    return conversionOptions;
  }

  public void setConversionOptions(CoinbaseCustodyApiConversionOptions conversionOptions) {
    this.conversionOptions = conversionOptions;
  }

  public CoinbaseCustodyApiTransactionAuditData voteAuthorizeOptions(CoinbaseCustodyApiVoteAuthorizeOptions voteAuthorizeOptions) {
    this.voteAuthorizeOptions = voteAuthorizeOptions;
    return this;
  }

   /**
   * Get voteAuthorizeOptions
   * @return voteAuthorizeOptions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiVoteAuthorizeOptions getVoteAuthorizeOptions() {
    return voteAuthorizeOptions;
  }

  public void setVoteAuthorizeOptions(CoinbaseCustodyApiVoteAuthorizeOptions voteAuthorizeOptions) {
    this.voteAuthorizeOptions = voteAuthorizeOptions;
  }

  public CoinbaseCustodyApiTransactionAuditData middleOfficeOptions(CoinbaseCustodyApiMiddleOfficeOptions middleOfficeOptions) {
    this.middleOfficeOptions = middleOfficeOptions;
    return this;
  }

   /**
   * Get middleOfficeOptions
   * @return middleOfficeOptions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiMiddleOfficeOptions getMiddleOfficeOptions() {
    return middleOfficeOptions;
  }

  public void setMiddleOfficeOptions(CoinbaseCustodyApiMiddleOfficeOptions middleOfficeOptions) {
    this.middleOfficeOptions = middleOfficeOptions;
  }

  public CoinbaseCustodyApiTransactionAuditData stakingOptions(CoinbaseCustodyApiStakingOptions stakingOptions) {
    this.stakingOptions = stakingOptions;
    return this;
  }

   /**
   * Get stakingOptions
   * @return stakingOptions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiStakingOptions getStakingOptions() {
    return stakingOptions;
  }

  public void setStakingOptions(CoinbaseCustodyApiStakingOptions stakingOptions) {
    this.stakingOptions = stakingOptions;
  }

  public CoinbaseCustodyApiTransactionAuditData rewardOptions(CoinbaseCustodyApiRewardOptions rewardOptions) {
    this.rewardOptions = rewardOptions;
    return this;
  }

   /**
   * Get rewardOptions
   * @return rewardOptions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiRewardOptions getRewardOptions() {
    return rewardOptions;
  }

  public void setRewardOptions(CoinbaseCustodyApiRewardOptions rewardOptions) {
    this.rewardOptions = rewardOptions;
  }

  public CoinbaseCustodyApiTransactionAuditData summary(CoinbaseCustodyApiTransferSummary summary) {
    this.summary = summary;
    return this;
  }

   /**
   * Get summary
   * @return summary
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransferSummary getSummary() {
    return summary;
  }

  public void setSummary(CoinbaseCustodyApiTransferSummary summary) {
    this.summary = summary;
  }

  public CoinbaseCustodyApiTransactionAuditData usdAmountAtCreation(String usdAmountAtCreation) {
    this.usdAmountAtCreation = usdAmountAtCreation;
    return this;
  }

   /**
   * Get usdAmountAtCreation
   * @return usdAmountAtCreation
  **/
  @ApiModelProperty(value = "")
  public String getUsdAmountAtCreation() {
    return usdAmountAtCreation;
  }

  public void setUsdAmountAtCreation(String usdAmountAtCreation) {
    this.usdAmountAtCreation = usdAmountAtCreation;
  }

  public CoinbaseCustodyApiTransactionAuditData metadata(Map<String, String> metadata) {
    this.metadata = metadata;
    return this;
  }

  public CoinbaseCustodyApiTransactionAuditData putMetadataItem(String key, String metadataItem) {
    if (this.metadata == null) {
      this.metadata = new HashMap<String, String>();
    }
    this.metadata.put(key, metadataItem);
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getMetadata() {
    return metadata;
  }

  public void setMetadata(Map<String, String> metadata) {
    this.metadata = metadata;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiTransactionAuditData coinbaseCustodyApiTransactionAuditData = (CoinbaseCustodyApiTransactionAuditData) o;
    return Objects.equals(this.id, coinbaseCustodyApiTransactionAuditData.id) &&
        Objects.equals(this.amount, coinbaseCustodyApiTransactionAuditData.amount) &&
        Objects.equals(this.stakingAmount, coinbaseCustodyApiTransactionAuditData.stakingAmount) &&
        Objects.equals(this.value, coinbaseCustodyApiTransactionAuditData.value) &&
        Objects.equals(this.stakingValue, coinbaseCustodyApiTransactionAuditData.stakingValue) &&
        Objects.equals(this.type, coinbaseCustodyApiTransactionAuditData.type) &&
        Objects.equals(this.humanId, coinbaseCustodyApiTransactionAuditData.humanId) &&
        Objects.equals(this.customerFees, coinbaseCustodyApiTransactionAuditData.customerFees) &&
        Objects.equals(this.custodyFees, coinbaseCustodyApiTransactionAuditData.custodyFees) &&
        Objects.equals(this.currency, coinbaseCustodyApiTransactionAuditData.currency) &&
        Objects.equals(this.sourceAddress, coinbaseCustodyApiTransactionAuditData.sourceAddress) &&
        Objects.equals(this.destination, coinbaseCustodyApiTransactionAuditData.destination) &&
        Objects.equals(this.vehicleId, coinbaseCustodyApiTransactionAuditData.vehicleId) &&
        Objects.equals(this.vehicleName, coinbaseCustodyApiTransactionAuditData.vehicleName) &&
        Objects.equals(this.userId, coinbaseCustodyApiTransactionAuditData.userId) &&
        Objects.equals(this.walletId, coinbaseCustodyApiTransactionAuditData.walletId) &&
        Objects.equals(this.feeRefundState, coinbaseCustodyApiTransactionAuditData.feeRefundState) &&
        Objects.equals(this.testWithdrawal, coinbaseCustodyApiTransactionAuditData.testWithdrawal) &&
        Objects.equals(this.redoTxInfo, coinbaseCustodyApiTransactionAuditData.redoTxInfo) &&
        Objects.equals(this.options, coinbaseCustodyApiTransactionAuditData.options) &&
        Objects.equals(this.keyRegistrationOptions, coinbaseCustodyApiTransactionAuditData.keyRegistrationOptions) &&
        Objects.equals(this.conversionOptions, coinbaseCustodyApiTransactionAuditData.conversionOptions) &&
        Objects.equals(this.voteAuthorizeOptions, coinbaseCustodyApiTransactionAuditData.voteAuthorizeOptions) &&
        Objects.equals(this.middleOfficeOptions, coinbaseCustodyApiTransactionAuditData.middleOfficeOptions) &&
        Objects.equals(this.stakingOptions, coinbaseCustodyApiTransactionAuditData.stakingOptions) &&
        Objects.equals(this.rewardOptions, coinbaseCustodyApiTransactionAuditData.rewardOptions) &&
        Objects.equals(this.summary, coinbaseCustodyApiTransactionAuditData.summary) &&
        Objects.equals(this.usdAmountAtCreation, coinbaseCustodyApiTransactionAuditData.usdAmountAtCreation) &&
        Objects.equals(this.metadata, coinbaseCustodyApiTransactionAuditData.metadata);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, amount, stakingAmount, value, stakingValue, type, humanId, customerFees, custodyFees, currency, sourceAddress, destination, vehicleId, vehicleName, userId, walletId, feeRefundState, testWithdrawal, redoTxInfo, options, keyRegistrationOptions, conversionOptions, voteAuthorizeOptions, middleOfficeOptions, stakingOptions, rewardOptions, summary, usdAmountAtCreation, metadata);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiTransactionAuditData {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    stakingAmount: ").append(toIndentedString(stakingAmount)).append("\n");
    sb.append("    value: ").append(toIndentedString(value)).append("\n");
    sb.append("    stakingValue: ").append(toIndentedString(stakingValue)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    humanId: ").append(toIndentedString(humanId)).append("\n");
    sb.append("    customerFees: ").append(toIndentedString(customerFees)).append("\n");
    sb.append("    custodyFees: ").append(toIndentedString(custodyFees)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    sourceAddress: ").append(toIndentedString(sourceAddress)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    vehicleId: ").append(toIndentedString(vehicleId)).append("\n");
    sb.append("    vehicleName: ").append(toIndentedString(vehicleName)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    feeRefundState: ").append(toIndentedString(feeRefundState)).append("\n");
    sb.append("    testWithdrawal: ").append(toIndentedString(testWithdrawal)).append("\n");
    sb.append("    redoTxInfo: ").append(toIndentedString(redoTxInfo)).append("\n");
    sb.append("    options: ").append(toIndentedString(options)).append("\n");
    sb.append("    keyRegistrationOptions: ").append(toIndentedString(keyRegistrationOptions)).append("\n");
    sb.append("    conversionOptions: ").append(toIndentedString(conversionOptions)).append("\n");
    sb.append("    voteAuthorizeOptions: ").append(toIndentedString(voteAuthorizeOptions)).append("\n");
    sb.append("    middleOfficeOptions: ").append(toIndentedString(middleOfficeOptions)).append("\n");
    sb.append("    stakingOptions: ").append(toIndentedString(stakingOptions)).append("\n");
    sb.append("    rewardOptions: ").append(toIndentedString(rewardOptions)).append("\n");
    sb.append("    summary: ").append(toIndentedString(summary)).append("\n");
    sb.append("    usdAmountAtCreation: ").append(toIndentedString(usdAmountAtCreation)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

