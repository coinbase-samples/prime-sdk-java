/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeNotificationApiChannel;
import io.swagger.client.model.CoinbaseEngPrimeNotificationApiUserPreferenceForChannel;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest {
  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("channel")
  private CoinbaseEngPrimeNotificationApiChannel channel = null;

  @SerializedName("user_preferences")
  private List<CoinbaseEngPrimeNotificationApiUserPreferenceForChannel> userPreferences = new ArrayList<CoinbaseEngPrimeNotificationApiUserPreferenceForChannel>();

  public CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest channel(CoinbaseEngPrimeNotificationApiChannel channel) {
    this.channel = channel;
    return this;
  }

   /**
   * Get channel
   * @return channel
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeNotificationApiChannel getChannel() {
    return channel;
  }

  public void setChannel(CoinbaseEngPrimeNotificationApiChannel channel) {
    this.channel = channel;
  }

  public CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest userPreferences(List<CoinbaseEngPrimeNotificationApiUserPreferenceForChannel> userPreferences) {
    this.userPreferences = userPreferences;
    return this;
  }

  public CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest addUserPreferencesItem(CoinbaseEngPrimeNotificationApiUserPreferenceForChannel userPreferencesItem) {
    this.userPreferences.add(userPreferencesItem);
    return this;
  }

   /**
   * Get userPreferences
   * @return userPreferences
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseEngPrimeNotificationApiUserPreferenceForChannel> getUserPreferences() {
    return userPreferences;
  }

  public void setUserPreferences(List<CoinbaseEngPrimeNotificationApiUserPreferenceForChannel> userPreferences) {
    this.userPreferences = userPreferences;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest coinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest = (CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest) o;
    return Objects.equals(this.userId, coinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest.userId) &&
        Objects.equals(this.channel, coinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest.channel) &&
        Objects.equals(this.userPreferences, coinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest.userPreferences);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, channel, userPreferences);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiUpdateUserPreferencesForChannelRequest {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    channel: ").append(toIndentedString(channel)).append("\n");
    sb.append("    userPreferences: ").append(toIndentedString(userPreferences)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

