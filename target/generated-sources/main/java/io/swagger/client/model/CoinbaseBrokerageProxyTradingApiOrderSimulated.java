/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyTradingApiLadderBestPrice;
import io.swagger.client.model.CoinbaseBrokerageProxyTradingApiSpread;
import java.io.IOException;

/**
 * CoinbaseBrokerageProxyTradingApiOrderSimulated
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyTradingApiOrderSimulated {
  @SerializedName("lift_ask")
  private CoinbaseBrokerageProxyTradingApiLadderBestPrice liftAsk = null;

  @SerializedName("hit_bid")
  private CoinbaseBrokerageProxyTradingApiLadderBestPrice hitBid = null;

  @SerializedName("spread")
  private CoinbaseBrokerageProxyTradingApiSpread spread = null;

  @SerializedName("spread_bps")
  private CoinbaseBrokerageProxyTradingApiSpread spreadBps = null;

  public CoinbaseBrokerageProxyTradingApiOrderSimulated liftAsk(CoinbaseBrokerageProxyTradingApiLadderBestPrice liftAsk) {
    this.liftAsk = liftAsk;
    return this;
  }

   /**
   * The weighted price that can accommodate the order amount, otherwise it returns an error. If the order amount is 0 it will return the lowest ask.
   * @return liftAsk
  **/
  @ApiModelProperty(required = true, value = "The weighted price that can accommodate the order amount, otherwise it returns an error. If the order amount is 0 it will return the lowest ask.")
  public CoinbaseBrokerageProxyTradingApiLadderBestPrice getLiftAsk() {
    return liftAsk;
  }

  public void setLiftAsk(CoinbaseBrokerageProxyTradingApiLadderBestPrice liftAsk) {
    this.liftAsk = liftAsk;
  }

  public CoinbaseBrokerageProxyTradingApiOrderSimulated hitBid(CoinbaseBrokerageProxyTradingApiLadderBestPrice hitBid) {
    this.hitBid = hitBid;
    return this;
  }

   /**
   * The weighted price that can accommodate the order amount, otherwise it returns an error. If the order amount is 0 it will return the highest bid.
   * @return hitBid
  **/
  @ApiModelProperty(required = true, value = "The weighted price that can accommodate the order amount, otherwise it returns an error. If the order amount is 0 it will return the highest bid.")
  public CoinbaseBrokerageProxyTradingApiLadderBestPrice getHitBid() {
    return hitBid;
  }

  public void setHitBid(CoinbaseBrokerageProxyTradingApiLadderBestPrice hitBid) {
    this.hitBid = hitBid;
  }

  public CoinbaseBrokerageProxyTradingApiOrderSimulated spread(CoinbaseBrokerageProxyTradingApiSpread spread) {
    this.spread = spread;
    return this;
  }

   /**
   * Calculated as lift_ask - hit_bid, otherwise it returns an error.
   * @return spread
  **/
  @ApiModelProperty(required = true, value = "Calculated as lift_ask - hit_bid, otherwise it returns an error.")
  public CoinbaseBrokerageProxyTradingApiSpread getSpread() {
    return spread;
  }

  public void setSpread(CoinbaseBrokerageProxyTradingApiSpread spread) {
    this.spread = spread;
  }

  public CoinbaseBrokerageProxyTradingApiOrderSimulated spreadBps(CoinbaseBrokerageProxyTradingApiSpread spreadBps) {
    this.spreadBps = spreadBps;
    return this;
  }

   /**
   * Calculated as ((lift_ask - hit_bid) / lift_ask) * 10000, otherwise returns an error.
   * @return spreadBps
  **/
  @ApiModelProperty(required = true, value = "Calculated as ((lift_ask - hit_bid) / lift_ask) * 10000, otherwise returns an error.")
  public CoinbaseBrokerageProxyTradingApiSpread getSpreadBps() {
    return spreadBps;
  }

  public void setSpreadBps(CoinbaseBrokerageProxyTradingApiSpread spreadBps) {
    this.spreadBps = spreadBps;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyTradingApiOrderSimulated coinbaseBrokerageProxyTradingApiOrderSimulated = (CoinbaseBrokerageProxyTradingApiOrderSimulated) o;
    return Objects.equals(this.liftAsk, coinbaseBrokerageProxyTradingApiOrderSimulated.liftAsk) &&
        Objects.equals(this.hitBid, coinbaseBrokerageProxyTradingApiOrderSimulated.hitBid) &&
        Objects.equals(this.spread, coinbaseBrokerageProxyTradingApiOrderSimulated.spread) &&
        Objects.equals(this.spreadBps, coinbaseBrokerageProxyTradingApiOrderSimulated.spreadBps);
  }

  @Override
  public int hashCode() {
    return Objects.hash(liftAsk, hitBid, spread, spreadBps);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyTradingApiOrderSimulated {\n");
    
    sb.append("    liftAsk: ").append(toIndentedString(liftAsk)).append("\n");
    sb.append("    hitBid: ").append(toIndentedString(hitBid)).append("\n");
    sb.append("    spread: ").append(toIndentedString(spread)).append("\n");
    sb.append("    spreadBps: ").append(toIndentedString(spreadBps)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

