/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingLocateError;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseFinancingSubmitMultipleLocatesResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingSubmitMultipleLocatesResponse {
  @SerializedName("locate_ids")
  private List<String> locateIds = null;

  @SerializedName("locate_errors")
  private List<CoinbaseFinancingLocateError> locateErrors = null;

  public CoinbaseFinancingSubmitMultipleLocatesResponse locateIds(List<String> locateIds) {
    this.locateIds = locateIds;
    return this;
  }

  public CoinbaseFinancingSubmitMultipleLocatesResponse addLocateIdsItem(String locateIdsItem) {
    if (this.locateIds == null) {
      this.locateIds = new ArrayList<String>();
    }
    this.locateIds.add(locateIdsItem);
    return this;
  }

   /**
   * Get locateIds
   * @return locateIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getLocateIds() {
    return locateIds;
  }

  public void setLocateIds(List<String> locateIds) {
    this.locateIds = locateIds;
  }

  public CoinbaseFinancingSubmitMultipleLocatesResponse locateErrors(List<CoinbaseFinancingLocateError> locateErrors) {
    this.locateErrors = locateErrors;
    return this;
  }

  public CoinbaseFinancingSubmitMultipleLocatesResponse addLocateErrorsItem(CoinbaseFinancingLocateError locateErrorsItem) {
    if (this.locateErrors == null) {
      this.locateErrors = new ArrayList<CoinbaseFinancingLocateError>();
    }
    this.locateErrors.add(locateErrorsItem);
    return this;
  }

   /**
   * Get locateErrors
   * @return locateErrors
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingLocateError> getLocateErrors() {
    return locateErrors;
  }

  public void setLocateErrors(List<CoinbaseFinancingLocateError> locateErrors) {
    this.locateErrors = locateErrors;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingSubmitMultipleLocatesResponse coinbaseFinancingSubmitMultipleLocatesResponse = (CoinbaseFinancingSubmitMultipleLocatesResponse) o;
    return Objects.equals(this.locateIds, coinbaseFinancingSubmitMultipleLocatesResponse.locateIds) &&
        Objects.equals(this.locateErrors, coinbaseFinancingSubmitMultipleLocatesResponse.locateErrors);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locateIds, locateErrors);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingSubmitMultipleLocatesResponse {\n");
    
    sb.append("    locateIds: ").append(toIndentedString(locateIds)).append("\n");
    sb.append("    locateErrors: ").append(toIndentedString(locateErrors)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

