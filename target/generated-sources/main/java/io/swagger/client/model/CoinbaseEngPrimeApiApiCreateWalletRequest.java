/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWalletType;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiCreateWalletRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiCreateWalletRequest {
  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("wallet_type")
  private CoinbaseEngPrimeApiApiWalletType walletType = null;

  public CoinbaseEngPrimeApiApiCreateWalletRequest portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseEngPrimeApiApiCreateWalletRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseEngPrimeApiApiCreateWalletRequest currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CoinbaseEngPrimeApiApiCreateWalletRequest walletType(CoinbaseEngPrimeApiApiWalletType walletType) {
    this.walletType = walletType;
    return this;
  }

   /**
   * Get walletType
   * @return walletType
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeApiApiWalletType getWalletType() {
    return walletType;
  }

  public void setWalletType(CoinbaseEngPrimeApiApiWalletType walletType) {
    this.walletType = walletType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiCreateWalletRequest coinbaseEngPrimeApiApiCreateWalletRequest = (CoinbaseEngPrimeApiApiCreateWalletRequest) o;
    return Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiCreateWalletRequest.portfolioId) &&
        Objects.equals(this.name, coinbaseEngPrimeApiApiCreateWalletRequest.name) &&
        Objects.equals(this.currencySymbol, coinbaseEngPrimeApiApiCreateWalletRequest.currencySymbol) &&
        Objects.equals(this.walletType, coinbaseEngPrimeApiApiCreateWalletRequest.walletType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioId, name, currencySymbol, walletType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiCreateWalletRequest {\n");
    
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    walletType: ").append(toIndentedString(walletType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

