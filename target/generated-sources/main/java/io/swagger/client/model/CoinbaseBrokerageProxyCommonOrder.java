/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonCancelReason;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonCommissionModel;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonEdit;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonMarginScope;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonOrderConfiguration;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonOrderExecutionStatus;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonOrderMetadata;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonOrderSide;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonProductDetails;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonRejectReason;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonStopTriggerStatus;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonTimeInForceType;
import io.swagger.client.model.CoreOrderPlacementSource;
import io.swagger.client.model.CoreProductType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * This is the shared type for how orders are presented to the external world by the order read and order historical proxy API.
 */
@ApiModel(description = "This is the shared type for how orders are presented to the external world by the order read and order historical proxy API.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyCommonOrder {
  @SerializedName("order_id")
  private String orderId = null;

  @SerializedName("client_order_id")
  private String clientOrderId = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("product_id")
  private String productId = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("side")
  private CoinbaseBrokerageProxyCommonOrderSide side = null;

  @SerializedName("order_configuration")
  private CoinbaseBrokerageProxyCommonOrderConfiguration orderConfiguration = null;

  @SerializedName("status")
  private CoinbaseBrokerageProxyCommonOrderExecutionStatus status = null;

  @SerializedName("time_in_force")
  private CoinbaseBrokerageProxyCommonTimeInForceType timeInForce = null;

  @SerializedName("created_time")
  private OffsetDateTime createdTime = null;

  @SerializedName("completion_percentage")
  private String completionPercentage = null;

  @SerializedName("filled_size")
  private String filledSize = null;

  @SerializedName("filled_value")
  private String filledValue = null;

  @SerializedName("average_filled_price")
  private String averageFilledPrice = null;

  @SerializedName("number_of_fills")
  private String numberOfFills = null;

  @SerializedName("size_in_quote")
  private Boolean sizeInQuote = null;

  @SerializedName("pending_cancel")
  private Boolean pendingCancel = null;

  @SerializedName("total_fees")
  private String totalFees = null;

  @SerializedName("size_inclusive_of_fees")
  private Boolean sizeInclusiveOfFees = null;

  @SerializedName("quote_quantity_remaining")
  private String quoteQuantityRemaining = null;

  @SerializedName("base_quantity_remaining")
  private String baseQuantityRemaining = null;

  @SerializedName("outstanding_hold_amount")
  private String outstandingHoldAmount = null;

  @SerializedName("metadata")
  private CoinbaseBrokerageProxyCommonOrderMetadata metadata = null;

  @SerializedName("total_value_after_fees")
  private String totalValueAfterFees = null;

  @SerializedName("display_size")
  private String displaySize = null;

  @SerializedName("trigger_status")
  private CoinbaseBrokerageProxyCommonStopTriggerStatus triggerStatus = null;

  @SerializedName("all_in_commission_details_client_commission")
  private String allInCommissionDetailsClientCommission = null;

  @SerializedName("cost_plus_commission_details_client_commission")
  private String costPlusCommissionDetailsClientCommission = null;

  @SerializedName("cost_plus_commission_details_venue_commission")
  private String costPlusCommissionDetailsVenueCommission = null;

  @SerializedName("commission_model")
  private CoinbaseBrokerageProxyCommonCommissionModel commissionModel = null;

  @SerializedName("all_in_commission_details_ces_commission")
  private String allInCommissionDetailsCesCommission = null;

  @SerializedName("cost_plus_commission_details_ces_commission")
  private String costPlusCommissionDetailsCesCommission = null;

  @SerializedName("product_type")
  private CoreProductType productType = null;

  @SerializedName("product_details")
  private CoinbaseBrokerageProxyCommonProductDetails productDetails = null;

  @SerializedName("sole_venue_id")
  private String soleVenueId = null;

  @SerializedName("order_placement_source")
  private CoreOrderPlacementSource orderPlacementSource = null;

  @SerializedName("last_fill_time")
  private OffsetDateTime lastFillTime = null;

  @SerializedName("intx_portfolio_id")
  private String intxPortfolioId = null;

  @SerializedName("reject_reason")
  private CoinbaseBrokerageProxyCommonRejectReason rejectReason = null;

  @SerializedName("cancel_reason")
  private CoinbaseBrokerageProxyCommonCancelReason cancelReason = null;

  @SerializedName("is_dust_eligible")
  private Boolean isDustEligible = null;

  @SerializedName("edit_history")
  private List<CoinbaseBrokerageProxyCommonEdit> editHistory = null;

  @SerializedName("margin_scope")
  private CoinbaseBrokerageProxyCommonMarginScope marginScope = null;

  @SerializedName("leverage")
  private String leverage = null;

  public CoinbaseBrokerageProxyCommonOrder orderId(String orderId) {
    this.orderId = orderId;
    return this;
  }

   /**
   * The unique id for this order
   * @return orderId
  **/
  @ApiModelProperty(required = true, value = "The unique id for this order")
  public String getOrderId() {
    return orderId;
  }

  public void setOrderId(String orderId) {
    this.orderId = orderId;
  }

  public CoinbaseBrokerageProxyCommonOrder clientOrderId(String clientOrderId) {
    this.clientOrderId = clientOrderId;
    return this;
  }

   /**
   * Get clientOrderId
   * @return clientOrderId
  **/
  @ApiModelProperty(value = "")
  public String getClientOrderId() {
    return clientOrderId;
  }

  public void setClientOrderId(String clientOrderId) {
    this.clientOrderId = clientOrderId;
  }

  public CoinbaseBrokerageProxyCommonOrder portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * The id of the portfolio that this order was created in&#39;
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "The id of the portfolio that this order was created in'")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseBrokerageProxyCommonOrder productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * The product this order was created for e.g. &#39;BTC-USD&#39;
   * @return productId
  **/
  @ApiModelProperty(required = true, value = "The product this order was created for e.g. 'BTC-USD'")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public CoinbaseBrokerageProxyCommonOrder userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbaseBrokerageProxyCommonOrder side(CoinbaseBrokerageProxyCommonOrderSide side) {
    this.side = side;
    return this;
  }

   /**
   * The side of the market that the order is on e.g. &#39;BUY&#39;, &#39;SELL&#39;
   * @return side
  **/
  @ApiModelProperty(required = true, value = "The side of the market that the order is on e.g. 'BUY', 'SELL'")
  public CoinbaseBrokerageProxyCommonOrderSide getSide() {
    return side;
  }

  public void setSide(CoinbaseBrokerageProxyCommonOrderSide side) {
    this.side = side;
  }

  public CoinbaseBrokerageProxyCommonOrder orderConfiguration(CoinbaseBrokerageProxyCommonOrderConfiguration orderConfiguration) {
    this.orderConfiguration = orderConfiguration;
    return this;
  }

   /**
   * Get orderConfiguration
   * @return orderConfiguration
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonOrderConfiguration getOrderConfiguration() {
    return orderConfiguration;
  }

  public void setOrderConfiguration(CoinbaseBrokerageProxyCommonOrderConfiguration orderConfiguration) {
    this.orderConfiguration = orderConfiguration;
  }

  public CoinbaseBrokerageProxyCommonOrder status(CoinbaseBrokerageProxyCommonOrderExecutionStatus status) {
    this.status = status;
    return this;
  }

   /**
   * The current state of the order
   * @return status
  **/
  @ApiModelProperty(required = true, value = "The current state of the order")
  public CoinbaseBrokerageProxyCommonOrderExecutionStatus getStatus() {
    return status;
  }

  public void setStatus(CoinbaseBrokerageProxyCommonOrderExecutionStatus status) {
    this.status = status;
  }

  public CoinbaseBrokerageProxyCommonOrder timeInForce(CoinbaseBrokerageProxyCommonTimeInForceType timeInForce) {
    this.timeInForce = timeInForce;
    return this;
  }

   /**
   * Get timeInForce
   * @return timeInForce
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonTimeInForceType getTimeInForce() {
    return timeInForce;
  }

  public void setTimeInForce(CoinbaseBrokerageProxyCommonTimeInForceType timeInForce) {
    this.timeInForce = timeInForce;
  }

  public CoinbaseBrokerageProxyCommonOrder createdTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
    return this;
  }

   /**
   * Timestamp for when the order was created
   * @return createdTime
  **/
  @ApiModelProperty(required = true, value = "Timestamp for when the order was created")
  public OffsetDateTime getCreatedTime() {
    return createdTime;
  }

  public void setCreatedTime(OffsetDateTime createdTime) {
    this.createdTime = createdTime;
  }

  public CoinbaseBrokerageProxyCommonOrder completionPercentage(String completionPercentage) {
    this.completionPercentage = completionPercentage;
    return this;
  }

   /**
   * Completion percentage of order, as a stringified float. Value will be an empty string if percentage cannot be calculated.
   * @return completionPercentage
  **/
  @ApiModelProperty(value = "Completion percentage of order, as a stringified float. Value will be an empty string if percentage cannot be calculated.")
  public String getCompletionPercentage() {
    return completionPercentage;
  }

  public void setCompletionPercentage(String completionPercentage) {
    this.completionPercentage = completionPercentage;
  }

  public CoinbaseBrokerageProxyCommonOrder filledSize(String filledSize) {
    this.filledSize = filledSize;
    return this;
  }

   /**
   * Total filled size, in base currency
   * @return filledSize
  **/
  @ApiModelProperty(value = "Total filled size, in base currency")
  public String getFilledSize() {
    return filledSize;
  }

  public void setFilledSize(String filledSize) {
    this.filledSize = filledSize;
  }

  public CoinbaseBrokerageProxyCommonOrder filledValue(String filledValue) {
    this.filledValue = filledValue;
    return this;
  }

   /**
   * Total filled value, in quote currency
   * @return filledValue
  **/
  @ApiModelProperty(value = "Total filled value, in quote currency")
  public String getFilledValue() {
    return filledValue;
  }

  public void setFilledValue(String filledValue) {
    this.filledValue = filledValue;
  }

  public CoinbaseBrokerageProxyCommonOrder averageFilledPrice(String averageFilledPrice) {
    this.averageFilledPrice = averageFilledPrice;
    return this;
  }

   /**
   * Get averageFilledPrice
   * @return averageFilledPrice
  **/
  @ApiModelProperty(value = "")
  public String getAverageFilledPrice() {
    return averageFilledPrice;
  }

  public void setAverageFilledPrice(String averageFilledPrice) {
    this.averageFilledPrice = averageFilledPrice;
  }

  public CoinbaseBrokerageProxyCommonOrder numberOfFills(String numberOfFills) {
    this.numberOfFills = numberOfFills;
    return this;
  }

   /**
   * Get numberOfFills
   * @return numberOfFills
  **/
  @ApiModelProperty(value = "")
  public String getNumberOfFills() {
    return numberOfFills;
  }

  public void setNumberOfFills(String numberOfFills) {
    this.numberOfFills = numberOfFills;
  }

  public CoinbaseBrokerageProxyCommonOrder sizeInQuote(Boolean sizeInQuote) {
    this.sizeInQuote = sizeInQuote;
    return this;
  }

   /**
   * Get sizeInQuote
   * @return sizeInQuote
  **/
  @ApiModelProperty(value = "")
  public Boolean isSizeInQuote() {
    return sizeInQuote;
  }

  public void setSizeInQuote(Boolean sizeInQuote) {
    this.sizeInQuote = sizeInQuote;
  }

  public CoinbaseBrokerageProxyCommonOrder pendingCancel(Boolean pendingCancel) {
    this.pendingCancel = pendingCancel;
    return this;
  }

   /**
   * Get pendingCancel
   * @return pendingCancel
  **/
  @ApiModelProperty(value = "")
  public Boolean isPendingCancel() {
    return pendingCancel;
  }

  public void setPendingCancel(Boolean pendingCancel) {
    this.pendingCancel = pendingCancel;
  }

  public CoinbaseBrokerageProxyCommonOrder totalFees(String totalFees) {
    this.totalFees = totalFees;
    return this;
  }

   /**
   * Get totalFees
   * @return totalFees
  **/
  @ApiModelProperty(value = "")
  public String getTotalFees() {
    return totalFees;
  }

  public void setTotalFees(String totalFees) {
    this.totalFees = totalFees;
  }

  public CoinbaseBrokerageProxyCommonOrder sizeInclusiveOfFees(Boolean sizeInclusiveOfFees) {
    this.sizeInclusiveOfFees = sizeInclusiveOfFees;
    return this;
  }

   /**
   * Get sizeInclusiveOfFees
   * @return sizeInclusiveOfFees
  **/
  @ApiModelProperty(value = "")
  public Boolean isSizeInclusiveOfFees() {
    return sizeInclusiveOfFees;
  }

  public void setSizeInclusiveOfFees(Boolean sizeInclusiveOfFees) {
    this.sizeInclusiveOfFees = sizeInclusiveOfFees;
  }

  public CoinbaseBrokerageProxyCommonOrder quoteQuantityRemaining(String quoteQuantityRemaining) {
    this.quoteQuantityRemaining = quoteQuantityRemaining;
    return this;
  }

   /**
   * Get quoteQuantityRemaining
   * @return quoteQuantityRemaining
  **/
  @ApiModelProperty(value = "")
  public String getQuoteQuantityRemaining() {
    return quoteQuantityRemaining;
  }

  public void setQuoteQuantityRemaining(String quoteQuantityRemaining) {
    this.quoteQuantityRemaining = quoteQuantityRemaining;
  }

  public CoinbaseBrokerageProxyCommonOrder baseQuantityRemaining(String baseQuantityRemaining) {
    this.baseQuantityRemaining = baseQuantityRemaining;
    return this;
  }

   /**
   * Get baseQuantityRemaining
   * @return baseQuantityRemaining
  **/
  @ApiModelProperty(value = "")
  public String getBaseQuantityRemaining() {
    return baseQuantityRemaining;
  }

  public void setBaseQuantityRemaining(String baseQuantityRemaining) {
    this.baseQuantityRemaining = baseQuantityRemaining;
  }

  public CoinbaseBrokerageProxyCommonOrder outstandingHoldAmount(String outstandingHoldAmount) {
    this.outstandingHoldAmount = outstandingHoldAmount;
    return this;
  }

   /**
   * Get outstandingHoldAmount
   * @return outstandingHoldAmount
  **/
  @ApiModelProperty(value = "")
  public String getOutstandingHoldAmount() {
    return outstandingHoldAmount;
  }

  public void setOutstandingHoldAmount(String outstandingHoldAmount) {
    this.outstandingHoldAmount = outstandingHoldAmount;
  }

  public CoinbaseBrokerageProxyCommonOrder metadata(CoinbaseBrokerageProxyCommonOrderMetadata metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonOrderMetadata getMetadata() {
    return metadata;
  }

  public void setMetadata(CoinbaseBrokerageProxyCommonOrderMetadata metadata) {
    this.metadata = metadata;
  }

  public CoinbaseBrokerageProxyCommonOrder totalValueAfterFees(String totalValueAfterFees) {
    this.totalValueAfterFees = totalValueAfterFees;
    return this;
  }

   /**
   * derived field: filled_value + total_fees for buy orders and filled_value - total_fees for sell orders.
   * @return totalValueAfterFees
  **/
  @ApiModelProperty(value = "derived field: filled_value + total_fees for buy orders and filled_value - total_fees for sell orders.")
  public String getTotalValueAfterFees() {
    return totalValueAfterFees;
  }

  public void setTotalValueAfterFees(String totalValueAfterFees) {
    this.totalValueAfterFees = totalValueAfterFees;
  }

  public CoinbaseBrokerageProxyCommonOrder displaySize(String displaySize) {
    this.displaySize = displaySize;
    return this;
  }

   /**
   * Get displaySize
   * @return displaySize
  **/
  @ApiModelProperty(value = "")
  public String getDisplaySize() {
    return displaySize;
  }

  public void setDisplaySize(String displaySize) {
    this.displaySize = displaySize;
  }

  public CoinbaseBrokerageProxyCommonOrder triggerStatus(CoinbaseBrokerageProxyCommonStopTriggerStatus triggerStatus) {
    this.triggerStatus = triggerStatus;
    return this;
  }

   /**
   * Get triggerStatus
   * @return triggerStatus
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonStopTriggerStatus getTriggerStatus() {
    return triggerStatus;
  }

  public void setTriggerStatus(CoinbaseBrokerageProxyCommonStopTriggerStatus triggerStatus) {
    this.triggerStatus = triggerStatus;
  }

  public CoinbaseBrokerageProxyCommonOrder allInCommissionDetailsClientCommission(String allInCommissionDetailsClientCommission) {
    this.allInCommissionDetailsClientCommission = allInCommissionDetailsClientCommission;
    return this;
  }

   /**
   * Get allInCommissionDetailsClientCommission
   * @return allInCommissionDetailsClientCommission
  **/
  @ApiModelProperty(value = "")
  public String getAllInCommissionDetailsClientCommission() {
    return allInCommissionDetailsClientCommission;
  }

  public void setAllInCommissionDetailsClientCommission(String allInCommissionDetailsClientCommission) {
    this.allInCommissionDetailsClientCommission = allInCommissionDetailsClientCommission;
  }

  public CoinbaseBrokerageProxyCommonOrder costPlusCommissionDetailsClientCommission(String costPlusCommissionDetailsClientCommission) {
    this.costPlusCommissionDetailsClientCommission = costPlusCommissionDetailsClientCommission;
    return this;
  }

   /**
   * Get costPlusCommissionDetailsClientCommission
   * @return costPlusCommissionDetailsClientCommission
  **/
  @ApiModelProperty(value = "")
  public String getCostPlusCommissionDetailsClientCommission() {
    return costPlusCommissionDetailsClientCommission;
  }

  public void setCostPlusCommissionDetailsClientCommission(String costPlusCommissionDetailsClientCommission) {
    this.costPlusCommissionDetailsClientCommission = costPlusCommissionDetailsClientCommission;
  }

  public CoinbaseBrokerageProxyCommonOrder costPlusCommissionDetailsVenueCommission(String costPlusCommissionDetailsVenueCommission) {
    this.costPlusCommissionDetailsVenueCommission = costPlusCommissionDetailsVenueCommission;
    return this;
  }

   /**
   * Get costPlusCommissionDetailsVenueCommission
   * @return costPlusCommissionDetailsVenueCommission
  **/
  @ApiModelProperty(value = "")
  public String getCostPlusCommissionDetailsVenueCommission() {
    return costPlusCommissionDetailsVenueCommission;
  }

  public void setCostPlusCommissionDetailsVenueCommission(String costPlusCommissionDetailsVenueCommission) {
    this.costPlusCommissionDetailsVenueCommission = costPlusCommissionDetailsVenueCommission;
  }

  public CoinbaseBrokerageProxyCommonOrder commissionModel(CoinbaseBrokerageProxyCommonCommissionModel commissionModel) {
    this.commissionModel = commissionModel;
    return this;
  }

   /**
   * Get commissionModel
   * @return commissionModel
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonCommissionModel getCommissionModel() {
    return commissionModel;
  }

  public void setCommissionModel(CoinbaseBrokerageProxyCommonCommissionModel commissionModel) {
    this.commissionModel = commissionModel;
  }

  public CoinbaseBrokerageProxyCommonOrder allInCommissionDetailsCesCommission(String allInCommissionDetailsCesCommission) {
    this.allInCommissionDetailsCesCommission = allInCommissionDetailsCesCommission;
    return this;
  }

   /**
   * Get allInCommissionDetailsCesCommission
   * @return allInCommissionDetailsCesCommission
  **/
  @ApiModelProperty(value = "")
  public String getAllInCommissionDetailsCesCommission() {
    return allInCommissionDetailsCesCommission;
  }

  public void setAllInCommissionDetailsCesCommission(String allInCommissionDetailsCesCommission) {
    this.allInCommissionDetailsCesCommission = allInCommissionDetailsCesCommission;
  }

  public CoinbaseBrokerageProxyCommonOrder costPlusCommissionDetailsCesCommission(String costPlusCommissionDetailsCesCommission) {
    this.costPlusCommissionDetailsCesCommission = costPlusCommissionDetailsCesCommission;
    return this;
  }

   /**
   * Get costPlusCommissionDetailsCesCommission
   * @return costPlusCommissionDetailsCesCommission
  **/
  @ApiModelProperty(value = "")
  public String getCostPlusCommissionDetailsCesCommission() {
    return costPlusCommissionDetailsCesCommission;
  }

  public void setCostPlusCommissionDetailsCesCommission(String costPlusCommissionDetailsCesCommission) {
    this.costPlusCommissionDetailsCesCommission = costPlusCommissionDetailsCesCommission;
  }

  public CoinbaseBrokerageProxyCommonOrder productType(CoreProductType productType) {
    this.productType = productType;
    return this;
  }

   /**
   * Product type of this order&#39;s product
   * @return productType
  **/
  @ApiModelProperty(value = "Product type of this order's product")
  public CoreProductType getProductType() {
    return productType;
  }

  public void setProductType(CoreProductType productType) {
    this.productType = productType;
  }

  public CoinbaseBrokerageProxyCommonOrder productDetails(CoinbaseBrokerageProxyCommonProductDetails productDetails) {
    this.productDetails = productDetails;
    return this;
  }

   /**
   * Get productDetails
   * @return productDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonProductDetails getProductDetails() {
    return productDetails;
  }

  public void setProductDetails(CoinbaseBrokerageProxyCommonProductDetails productDetails) {
    this.productDetails = productDetails;
  }

  public CoinbaseBrokerageProxyCommonOrder soleVenueId(String soleVenueId) {
    this.soleVenueId = soleVenueId;
    return this;
  }

   /**
   * sole_venue_id of this order&#39;s product. (Empty for products that are not necessarily tied to a single venue.)
   * @return soleVenueId
  **/
  @ApiModelProperty(value = "sole_venue_id of this order's product. (Empty for products that are not necessarily tied to a single venue.)")
  public String getSoleVenueId() {
    return soleVenueId;
  }

  public void setSoleVenueId(String soleVenueId) {
    this.soleVenueId = soleVenueId;
  }

  public CoinbaseBrokerageProxyCommonOrder orderPlacementSource(CoreOrderPlacementSource orderPlacementSource) {
    this.orderPlacementSource = orderPlacementSource;
    return this;
  }

   /**
   * Placement source of this order
   * @return orderPlacementSource
  **/
  @ApiModelProperty(value = "Placement source of this order")
  public CoreOrderPlacementSource getOrderPlacementSource() {
    return orderPlacementSource;
  }

  public void setOrderPlacementSource(CoreOrderPlacementSource orderPlacementSource) {
    this.orderPlacementSource = orderPlacementSource;
  }

  public CoinbaseBrokerageProxyCommonOrder lastFillTime(OffsetDateTime lastFillTime) {
    this.lastFillTime = lastFillTime;
    return this;
  }

   /**
   * Time of the most recent fill for this order
   * @return lastFillTime
  **/
  @ApiModelProperty(value = "Time of the most recent fill for this order")
  public OffsetDateTime getLastFillTime() {
    return lastFillTime;
  }

  public void setLastFillTime(OffsetDateTime lastFillTime) {
    this.lastFillTime = lastFillTime;
  }

  public CoinbaseBrokerageProxyCommonOrder intxPortfolioId(String intxPortfolioId) {
    this.intxPortfolioId = intxPortfolioId;
    return this;
  }

   /**
   * Get intxPortfolioId
   * @return intxPortfolioId
  **/
  @ApiModelProperty(value = "")
  public String getIntxPortfolioId() {
    return intxPortfolioId;
  }

  public void setIntxPortfolioId(String intxPortfolioId) {
    this.intxPortfolioId = intxPortfolioId;
  }

  public CoinbaseBrokerageProxyCommonOrder rejectReason(CoinbaseBrokerageProxyCommonRejectReason rejectReason) {
    this.rejectReason = rejectReason;
    return this;
  }

   /**
   * Get rejectReason
   * @return rejectReason
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonRejectReason getRejectReason() {
    return rejectReason;
  }

  public void setRejectReason(CoinbaseBrokerageProxyCommonRejectReason rejectReason) {
    this.rejectReason = rejectReason;
  }

  public CoinbaseBrokerageProxyCommonOrder cancelReason(CoinbaseBrokerageProxyCommonCancelReason cancelReason) {
    this.cancelReason = cancelReason;
    return this;
  }

   /**
   * Get cancelReason
   * @return cancelReason
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonCancelReason getCancelReason() {
    return cancelReason;
  }

  public void setCancelReason(CoinbaseBrokerageProxyCommonCancelReason cancelReason) {
    this.cancelReason = cancelReason;
  }

  public CoinbaseBrokerageProxyCommonOrder isDustEligible(Boolean isDustEligible) {
    this.isDustEligible = isDustEligible;
    return this;
  }

   /**
   * Get isDustEligible
   * @return isDustEligible
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsDustEligible() {
    return isDustEligible;
  }

  public void setIsDustEligible(Boolean isDustEligible) {
    this.isDustEligible = isDustEligible;
  }

  public CoinbaseBrokerageProxyCommonOrder editHistory(List<CoinbaseBrokerageProxyCommonEdit> editHistory) {
    this.editHistory = editHistory;
    return this;
  }

  public CoinbaseBrokerageProxyCommonOrder addEditHistoryItem(CoinbaseBrokerageProxyCommonEdit editHistoryItem) {
    if (this.editHistory == null) {
      this.editHistory = new ArrayList<CoinbaseBrokerageProxyCommonEdit>();
    }
    this.editHistory.add(editHistoryItem);
    return this;
  }

   /**
   * An array of the latest 5 edits per order
   * @return editHistory
  **/
  @ApiModelProperty(value = "An array of the latest 5 edits per order")
  public List<CoinbaseBrokerageProxyCommonEdit> getEditHistory() {
    return editHistory;
  }

  public void setEditHistory(List<CoinbaseBrokerageProxyCommonEdit> editHistory) {
    this.editHistory = editHistory;
  }

  public CoinbaseBrokerageProxyCommonOrder marginScope(CoinbaseBrokerageProxyCommonMarginScope marginScope) {
    this.marginScope = marginScope;
    return this;
  }

   /**
   * Get marginScope
   * @return marginScope
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonMarginScope getMarginScope() {
    return marginScope;
  }

  public void setMarginScope(CoinbaseBrokerageProxyCommonMarginScope marginScope) {
    this.marginScope = marginScope;
  }

  public CoinbaseBrokerageProxyCommonOrder leverage(String leverage) {
    this.leverage = leverage;
    return this;
  }

   /**
   * Get leverage
   * @return leverage
  **/
  @ApiModelProperty(value = "")
  public String getLeverage() {
    return leverage;
  }

  public void setLeverage(String leverage) {
    this.leverage = leverage;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyCommonOrder coinbaseBrokerageProxyCommonOrder = (CoinbaseBrokerageProxyCommonOrder) o;
    return Objects.equals(this.orderId, coinbaseBrokerageProxyCommonOrder.orderId) &&
        Objects.equals(this.clientOrderId, coinbaseBrokerageProxyCommonOrder.clientOrderId) &&
        Objects.equals(this.portfolioId, coinbaseBrokerageProxyCommonOrder.portfolioId) &&
        Objects.equals(this.productId, coinbaseBrokerageProxyCommonOrder.productId) &&
        Objects.equals(this.userId, coinbaseBrokerageProxyCommonOrder.userId) &&
        Objects.equals(this.side, coinbaseBrokerageProxyCommonOrder.side) &&
        Objects.equals(this.orderConfiguration, coinbaseBrokerageProxyCommonOrder.orderConfiguration) &&
        Objects.equals(this.status, coinbaseBrokerageProxyCommonOrder.status) &&
        Objects.equals(this.timeInForce, coinbaseBrokerageProxyCommonOrder.timeInForce) &&
        Objects.equals(this.createdTime, coinbaseBrokerageProxyCommonOrder.createdTime) &&
        Objects.equals(this.completionPercentage, coinbaseBrokerageProxyCommonOrder.completionPercentage) &&
        Objects.equals(this.filledSize, coinbaseBrokerageProxyCommonOrder.filledSize) &&
        Objects.equals(this.filledValue, coinbaseBrokerageProxyCommonOrder.filledValue) &&
        Objects.equals(this.averageFilledPrice, coinbaseBrokerageProxyCommonOrder.averageFilledPrice) &&
        Objects.equals(this.numberOfFills, coinbaseBrokerageProxyCommonOrder.numberOfFills) &&
        Objects.equals(this.sizeInQuote, coinbaseBrokerageProxyCommonOrder.sizeInQuote) &&
        Objects.equals(this.pendingCancel, coinbaseBrokerageProxyCommonOrder.pendingCancel) &&
        Objects.equals(this.totalFees, coinbaseBrokerageProxyCommonOrder.totalFees) &&
        Objects.equals(this.sizeInclusiveOfFees, coinbaseBrokerageProxyCommonOrder.sizeInclusiveOfFees) &&
        Objects.equals(this.quoteQuantityRemaining, coinbaseBrokerageProxyCommonOrder.quoteQuantityRemaining) &&
        Objects.equals(this.baseQuantityRemaining, coinbaseBrokerageProxyCommonOrder.baseQuantityRemaining) &&
        Objects.equals(this.outstandingHoldAmount, coinbaseBrokerageProxyCommonOrder.outstandingHoldAmount) &&
        Objects.equals(this.metadata, coinbaseBrokerageProxyCommonOrder.metadata) &&
        Objects.equals(this.totalValueAfterFees, coinbaseBrokerageProxyCommonOrder.totalValueAfterFees) &&
        Objects.equals(this.displaySize, coinbaseBrokerageProxyCommonOrder.displaySize) &&
        Objects.equals(this.triggerStatus, coinbaseBrokerageProxyCommonOrder.triggerStatus) &&
        Objects.equals(this.allInCommissionDetailsClientCommission, coinbaseBrokerageProxyCommonOrder.allInCommissionDetailsClientCommission) &&
        Objects.equals(this.costPlusCommissionDetailsClientCommission, coinbaseBrokerageProxyCommonOrder.costPlusCommissionDetailsClientCommission) &&
        Objects.equals(this.costPlusCommissionDetailsVenueCommission, coinbaseBrokerageProxyCommonOrder.costPlusCommissionDetailsVenueCommission) &&
        Objects.equals(this.commissionModel, coinbaseBrokerageProxyCommonOrder.commissionModel) &&
        Objects.equals(this.allInCommissionDetailsCesCommission, coinbaseBrokerageProxyCommonOrder.allInCommissionDetailsCesCommission) &&
        Objects.equals(this.costPlusCommissionDetailsCesCommission, coinbaseBrokerageProxyCommonOrder.costPlusCommissionDetailsCesCommission) &&
        Objects.equals(this.productType, coinbaseBrokerageProxyCommonOrder.productType) &&
        Objects.equals(this.productDetails, coinbaseBrokerageProxyCommonOrder.productDetails) &&
        Objects.equals(this.soleVenueId, coinbaseBrokerageProxyCommonOrder.soleVenueId) &&
        Objects.equals(this.orderPlacementSource, coinbaseBrokerageProxyCommonOrder.orderPlacementSource) &&
        Objects.equals(this.lastFillTime, coinbaseBrokerageProxyCommonOrder.lastFillTime) &&
        Objects.equals(this.intxPortfolioId, coinbaseBrokerageProxyCommonOrder.intxPortfolioId) &&
        Objects.equals(this.rejectReason, coinbaseBrokerageProxyCommonOrder.rejectReason) &&
        Objects.equals(this.cancelReason, coinbaseBrokerageProxyCommonOrder.cancelReason) &&
        Objects.equals(this.isDustEligible, coinbaseBrokerageProxyCommonOrder.isDustEligible) &&
        Objects.equals(this.editHistory, coinbaseBrokerageProxyCommonOrder.editHistory) &&
        Objects.equals(this.marginScope, coinbaseBrokerageProxyCommonOrder.marginScope) &&
        Objects.equals(this.leverage, coinbaseBrokerageProxyCommonOrder.leverage);
  }

  @Override
  public int hashCode() {
    return Objects.hash(orderId, clientOrderId, portfolioId, productId, userId, side, orderConfiguration, status, timeInForce, createdTime, completionPercentage, filledSize, filledValue, averageFilledPrice, numberOfFills, sizeInQuote, pendingCancel, totalFees, sizeInclusiveOfFees, quoteQuantityRemaining, baseQuantityRemaining, outstandingHoldAmount, metadata, totalValueAfterFees, displaySize, triggerStatus, allInCommissionDetailsClientCommission, costPlusCommissionDetailsClientCommission, costPlusCommissionDetailsVenueCommission, commissionModel, allInCommissionDetailsCesCommission, costPlusCommissionDetailsCesCommission, productType, productDetails, soleVenueId, orderPlacementSource, lastFillTime, intxPortfolioId, rejectReason, cancelReason, isDustEligible, editHistory, marginScope, leverage);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyCommonOrder {\n");
    
    sb.append("    orderId: ").append(toIndentedString(orderId)).append("\n");
    sb.append("    clientOrderId: ").append(toIndentedString(clientOrderId)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    orderConfiguration: ").append(toIndentedString(orderConfiguration)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    timeInForce: ").append(toIndentedString(timeInForce)).append("\n");
    sb.append("    createdTime: ").append(toIndentedString(createdTime)).append("\n");
    sb.append("    completionPercentage: ").append(toIndentedString(completionPercentage)).append("\n");
    sb.append("    filledSize: ").append(toIndentedString(filledSize)).append("\n");
    sb.append("    filledValue: ").append(toIndentedString(filledValue)).append("\n");
    sb.append("    averageFilledPrice: ").append(toIndentedString(averageFilledPrice)).append("\n");
    sb.append("    numberOfFills: ").append(toIndentedString(numberOfFills)).append("\n");
    sb.append("    sizeInQuote: ").append(toIndentedString(sizeInQuote)).append("\n");
    sb.append("    pendingCancel: ").append(toIndentedString(pendingCancel)).append("\n");
    sb.append("    totalFees: ").append(toIndentedString(totalFees)).append("\n");
    sb.append("    sizeInclusiveOfFees: ").append(toIndentedString(sizeInclusiveOfFees)).append("\n");
    sb.append("    quoteQuantityRemaining: ").append(toIndentedString(quoteQuantityRemaining)).append("\n");
    sb.append("    baseQuantityRemaining: ").append(toIndentedString(baseQuantityRemaining)).append("\n");
    sb.append("    outstandingHoldAmount: ").append(toIndentedString(outstandingHoldAmount)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    totalValueAfterFees: ").append(toIndentedString(totalValueAfterFees)).append("\n");
    sb.append("    displaySize: ").append(toIndentedString(displaySize)).append("\n");
    sb.append("    triggerStatus: ").append(toIndentedString(triggerStatus)).append("\n");
    sb.append("    allInCommissionDetailsClientCommission: ").append(toIndentedString(allInCommissionDetailsClientCommission)).append("\n");
    sb.append("    costPlusCommissionDetailsClientCommission: ").append(toIndentedString(costPlusCommissionDetailsClientCommission)).append("\n");
    sb.append("    costPlusCommissionDetailsVenueCommission: ").append(toIndentedString(costPlusCommissionDetailsVenueCommission)).append("\n");
    sb.append("    commissionModel: ").append(toIndentedString(commissionModel)).append("\n");
    sb.append("    allInCommissionDetailsCesCommission: ").append(toIndentedString(allInCommissionDetailsCesCommission)).append("\n");
    sb.append("    costPlusCommissionDetailsCesCommission: ").append(toIndentedString(costPlusCommissionDetailsCesCommission)).append("\n");
    sb.append("    productType: ").append(toIndentedString(productType)).append("\n");
    sb.append("    productDetails: ").append(toIndentedString(productDetails)).append("\n");
    sb.append("    soleVenueId: ").append(toIndentedString(soleVenueId)).append("\n");
    sb.append("    orderPlacementSource: ").append(toIndentedString(orderPlacementSource)).append("\n");
    sb.append("    lastFillTime: ").append(toIndentedString(lastFillTime)).append("\n");
    sb.append("    intxPortfolioId: ").append(toIndentedString(intxPortfolioId)).append("\n");
    sb.append("    rejectReason: ").append(toIndentedString(rejectReason)).append("\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    isDustEligible: ").append(toIndentedString(isDustEligible)).append("\n");
    sb.append("    editHistory: ").append(toIndentedString(editHistory)).append("\n");
    sb.append("    marginScope: ").append(toIndentedString(marginScope)).append("\n");
    sb.append("    leverage: ").append(toIndentedString(leverage)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

