/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiDisplayUser;
import io.swagger.client.model.CoinbaseCustodyApiVideoUploadState;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseCustodyApiVideoUpload
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiVideoUpload {
  @SerializedName("id")
  private String id = null;

  @SerializedName("state")
  private CoinbaseCustodyApiVideoUploadState state = null;

  @SerializedName("transaction_id")
  private String transactionId = null;

  @SerializedName("uploaded_by_user")
  private CoinbaseCustodyApiDisplayUser uploadedByUser = null;

  @SerializedName("uploaded_at")
  private OffsetDateTime uploadedAt = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("security_code")
  private String securityCode = null;

  @SerializedName("signed_upload_url")
  private String signedUploadUrl = null;

  public CoinbaseCustodyApiVideoUpload id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Upload uuid
   * @return id
  **/
  @ApiModelProperty(value = "Upload uuid")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiVideoUpload state(CoinbaseCustodyApiVideoUploadState state) {
    this.state = state;
    return this;
  }

   /**
   * Upload status
   * @return state
  **/
  @ApiModelProperty(value = "Upload status")
  public CoinbaseCustodyApiVideoUploadState getState() {
    return state;
  }

  public void setState(CoinbaseCustodyApiVideoUploadState state) {
    this.state = state;
  }

  public CoinbaseCustodyApiVideoUpload transactionId(String transactionId) {
    this.transactionId = transactionId;
    return this;
  }

   /**
   * Get transactionId
   * @return transactionId
  **/
  @ApiModelProperty(value = "")
  public String getTransactionId() {
    return transactionId;
  }

  public void setTransactionId(String transactionId) {
    this.transactionId = transactionId;
  }

  public CoinbaseCustodyApiVideoUpload uploadedByUser(CoinbaseCustodyApiDisplayUser uploadedByUser) {
    this.uploadedByUser = uploadedByUser;
    return this;
  }

   /**
   * Get uploadedByUser
   * @return uploadedByUser
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiDisplayUser getUploadedByUser() {
    return uploadedByUser;
  }

  public void setUploadedByUser(CoinbaseCustodyApiDisplayUser uploadedByUser) {
    this.uploadedByUser = uploadedByUser;
  }

  public CoinbaseCustodyApiVideoUpload uploadedAt(OffsetDateTime uploadedAt) {
    this.uploadedAt = uploadedAt;
    return this;
  }

   /**
   * Time when the upload finished
   * @return uploadedAt
  **/
  @ApiModelProperty(value = "Time when the upload finished")
  public OffsetDateTime getUploadedAt() {
    return uploadedAt;
  }

  public void setUploadedAt(OffsetDateTime uploadedAt) {
    this.uploadedAt = uploadedAt;
  }

  public CoinbaseCustodyApiVideoUpload createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiVideoUpload updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CoinbaseCustodyApiVideoUpload securityCode(String securityCode) {
    this.securityCode = securityCode;
    return this;
  }

   /**
   * Used for verifying the authenticity of the video
   * @return securityCode
  **/
  @ApiModelProperty(value = "Used for verifying the authenticity of the video")
  public String getSecurityCode() {
    return securityCode;
  }

  public void setSecurityCode(String securityCode) {
    this.securityCode = securityCode;
  }

  public CoinbaseCustodyApiVideoUpload signedUploadUrl(String signedUploadUrl) {
    this.signedUploadUrl = signedUploadUrl;
    return this;
  }

   /**
   * Returned by CreateVideoUpload
   * @return signedUploadUrl
  **/
  @ApiModelProperty(value = "Returned by CreateVideoUpload")
  public String getSignedUploadUrl() {
    return signedUploadUrl;
  }

  public void setSignedUploadUrl(String signedUploadUrl) {
    this.signedUploadUrl = signedUploadUrl;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiVideoUpload coinbaseCustodyApiVideoUpload = (CoinbaseCustodyApiVideoUpload) o;
    return Objects.equals(this.id, coinbaseCustodyApiVideoUpload.id) &&
        Objects.equals(this.state, coinbaseCustodyApiVideoUpload.state) &&
        Objects.equals(this.transactionId, coinbaseCustodyApiVideoUpload.transactionId) &&
        Objects.equals(this.uploadedByUser, coinbaseCustodyApiVideoUpload.uploadedByUser) &&
        Objects.equals(this.uploadedAt, coinbaseCustodyApiVideoUpload.uploadedAt) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiVideoUpload.createdAt) &&
        Objects.equals(this.updatedAt, coinbaseCustodyApiVideoUpload.updatedAt) &&
        Objects.equals(this.securityCode, coinbaseCustodyApiVideoUpload.securityCode) &&
        Objects.equals(this.signedUploadUrl, coinbaseCustodyApiVideoUpload.signedUploadUrl);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, state, transactionId, uploadedByUser, uploadedAt, createdAt, updatedAt, securityCode, signedUploadUrl);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiVideoUpload {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    transactionId: ").append(toIndentedString(transactionId)).append("\n");
    sb.append("    uploadedByUser: ").append(toIndentedString(uploadedByUser)).append("\n");
    sb.append("    uploadedAt: ").append(toIndentedString(uploadedAt)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    securityCode: ").append(toIndentedString(securityCode)).append("\n");
    sb.append("    signedUploadUrl: ").append(toIndentedString(signedUploadUrl)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

