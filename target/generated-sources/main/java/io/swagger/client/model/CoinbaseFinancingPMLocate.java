/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingRateType;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseFinancingPMLocate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingPMLocate {
  @SerializedName("locate_id")
  private String locateId = null;

  @SerializedName("entity_id")
  private String entityId = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("requested_amount")
  private String requestedAmount = null;

  @SerializedName("status")
  private String status = null;

  @SerializedName("interest_rate")
  private String interestRate = null;

  @SerializedName("approved_amount")
  private String approvedAmount = null;

  @SerializedName("conversion_date")
  private OffsetDateTime conversionDate = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("requested_notional_amount")
  private String requestedNotionalAmount = null;

  @SerializedName("approved_notional_amount")
  private String approvedNotionalAmount = null;

  @SerializedName("asset_current_price")
  private String assetCurrentPrice = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("rate_type")
  private CoinbaseFinancingRateType rateType = null;

  public CoinbaseFinancingPMLocate locateId(String locateId) {
    this.locateId = locateId;
    return this;
  }

   /**
   * Get locateId
   * @return locateId
  **/
  @ApiModelProperty(value = "")
  public String getLocateId() {
    return locateId;
  }

  public void setLocateId(String locateId) {
    this.locateId = locateId;
  }

  public CoinbaseFinancingPMLocate entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @ApiModelProperty(value = "")
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public CoinbaseFinancingPMLocate portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseFinancingPMLocate symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CoinbaseFinancingPMLocate requestedAmount(String requestedAmount) {
    this.requestedAmount = requestedAmount;
    return this;
  }

   /**
   * Get requestedAmount
   * @return requestedAmount
  **/
  @ApiModelProperty(value = "")
  public String getRequestedAmount() {
    return requestedAmount;
  }

  public void setRequestedAmount(String requestedAmount) {
    this.requestedAmount = requestedAmount;
  }

  public CoinbaseFinancingPMLocate status(String status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public String getStatus() {
    return status;
  }

  public void setStatus(String status) {
    this.status = status;
  }

  public CoinbaseFinancingPMLocate interestRate(String interestRate) {
    this.interestRate = interestRate;
    return this;
  }

   /**
   * Get interestRate
   * @return interestRate
  **/
  @ApiModelProperty(value = "")
  public String getInterestRate() {
    return interestRate;
  }

  public void setInterestRate(String interestRate) {
    this.interestRate = interestRate;
  }

  public CoinbaseFinancingPMLocate approvedAmount(String approvedAmount) {
    this.approvedAmount = approvedAmount;
    return this;
  }

   /**
   * Get approvedAmount
   * @return approvedAmount
  **/
  @ApiModelProperty(value = "")
  public String getApprovedAmount() {
    return approvedAmount;
  }

  public void setApprovedAmount(String approvedAmount) {
    this.approvedAmount = approvedAmount;
  }

  public CoinbaseFinancingPMLocate conversionDate(OffsetDateTime conversionDate) {
    this.conversionDate = conversionDate;
    return this;
  }

   /**
   * Get conversionDate
   * @return conversionDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getConversionDate() {
    return conversionDate;
  }

  public void setConversionDate(OffsetDateTime conversionDate) {
    this.conversionDate = conversionDate;
  }

  public CoinbaseFinancingPMLocate createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseFinancingPMLocate requestedNotionalAmount(String requestedNotionalAmount) {
    this.requestedNotionalAmount = requestedNotionalAmount;
    return this;
  }

   /**
   * Get requestedNotionalAmount
   * @return requestedNotionalAmount
  **/
  @ApiModelProperty(value = "")
  public String getRequestedNotionalAmount() {
    return requestedNotionalAmount;
  }

  public void setRequestedNotionalAmount(String requestedNotionalAmount) {
    this.requestedNotionalAmount = requestedNotionalAmount;
  }

  public CoinbaseFinancingPMLocate approvedNotionalAmount(String approvedNotionalAmount) {
    this.approvedNotionalAmount = approvedNotionalAmount;
    return this;
  }

   /**
   * Get approvedNotionalAmount
   * @return approvedNotionalAmount
  **/
  @ApiModelProperty(value = "")
  public String getApprovedNotionalAmount() {
    return approvedNotionalAmount;
  }

  public void setApprovedNotionalAmount(String approvedNotionalAmount) {
    this.approvedNotionalAmount = approvedNotionalAmount;
  }

  public CoinbaseFinancingPMLocate assetCurrentPrice(String assetCurrentPrice) {
    this.assetCurrentPrice = assetCurrentPrice;
    return this;
  }

   /**
   * Get assetCurrentPrice
   * @return assetCurrentPrice
  **/
  @ApiModelProperty(value = "")
  public String getAssetCurrentPrice() {
    return assetCurrentPrice;
  }

  public void setAssetCurrentPrice(String assetCurrentPrice) {
    this.assetCurrentPrice = assetCurrentPrice;
  }

  public CoinbaseFinancingPMLocate updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CoinbaseFinancingPMLocate rateType(CoinbaseFinancingRateType rateType) {
    this.rateType = rateType;
    return this;
  }

   /**
   * Get rateType
   * @return rateType
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingRateType getRateType() {
    return rateType;
  }

  public void setRateType(CoinbaseFinancingRateType rateType) {
    this.rateType = rateType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingPMLocate coinbaseFinancingPMLocate = (CoinbaseFinancingPMLocate) o;
    return Objects.equals(this.locateId, coinbaseFinancingPMLocate.locateId) &&
        Objects.equals(this.entityId, coinbaseFinancingPMLocate.entityId) &&
        Objects.equals(this.portfolioId, coinbaseFinancingPMLocate.portfolioId) &&
        Objects.equals(this.symbol, coinbaseFinancingPMLocate.symbol) &&
        Objects.equals(this.requestedAmount, coinbaseFinancingPMLocate.requestedAmount) &&
        Objects.equals(this.status, coinbaseFinancingPMLocate.status) &&
        Objects.equals(this.interestRate, coinbaseFinancingPMLocate.interestRate) &&
        Objects.equals(this.approvedAmount, coinbaseFinancingPMLocate.approvedAmount) &&
        Objects.equals(this.conversionDate, coinbaseFinancingPMLocate.conversionDate) &&
        Objects.equals(this.createdAt, coinbaseFinancingPMLocate.createdAt) &&
        Objects.equals(this.requestedNotionalAmount, coinbaseFinancingPMLocate.requestedNotionalAmount) &&
        Objects.equals(this.approvedNotionalAmount, coinbaseFinancingPMLocate.approvedNotionalAmount) &&
        Objects.equals(this.assetCurrentPrice, coinbaseFinancingPMLocate.assetCurrentPrice) &&
        Objects.equals(this.updatedAt, coinbaseFinancingPMLocate.updatedAt) &&
        Objects.equals(this.rateType, coinbaseFinancingPMLocate.rateType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(locateId, entityId, portfolioId, symbol, requestedAmount, status, interestRate, approvedAmount, conversionDate, createdAt, requestedNotionalAmount, approvedNotionalAmount, assetCurrentPrice, updatedAt, rateType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingPMLocate {\n");
    
    sb.append("    locateId: ").append(toIndentedString(locateId)).append("\n");
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    requestedAmount: ").append(toIndentedString(requestedAmount)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    interestRate: ").append(toIndentedString(interestRate)).append("\n");
    sb.append("    approvedAmount: ").append(toIndentedString(approvedAmount)).append("\n");
    sb.append("    conversionDate: ").append(toIndentedString(conversionDate)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    requestedNotionalAmount: ").append(toIndentedString(requestedNotionalAmount)).append("\n");
    sb.append("    approvedNotionalAmount: ").append(toIndentedString(approvedNotionalAmount)).append("\n");
    sb.append("    assetCurrentPrice: ").append(toIndentedString(assetCurrentPrice)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    rateType: ").append(toIndentedString(rateType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

