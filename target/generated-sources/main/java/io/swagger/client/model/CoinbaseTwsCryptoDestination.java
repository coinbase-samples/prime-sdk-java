/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseTwsBlockchainAddress;
import io.swagger.client.model.CoinbaseTwsWalletAndBlockchainAddress;
import java.io.IOException;

/**
 * CoinbaseTwsCryptoDestination
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsCryptoDestination {
  @SerializedName("blockchain_address")
  private CoinbaseTwsBlockchainAddress blockchainAddress = null;

  @SerializedName("wallet_id")
  private String walletId = null;

  @SerializedName("trusted_address_id")
  private String trustedAddressId = null;

  @SerializedName("wallet_and_blockchain_address")
  private CoinbaseTwsWalletAndBlockchainAddress walletAndBlockchainAddress = null;

  @SerializedName("ctn_id")
  private String ctnId = null;

  public CoinbaseTwsCryptoDestination blockchainAddress(CoinbaseTwsBlockchainAddress blockchainAddress) {
    this.blockchainAddress = blockchainAddress;
    return this;
  }

   /**
   * Crypto destination to a on-chain blockchain address
   * @return blockchainAddress
  **/
  @ApiModelProperty(value = "Crypto destination to a on-chain blockchain address")
  public CoinbaseTwsBlockchainAddress getBlockchainAddress() {
    return blockchainAddress;
  }

  public void setBlockchainAddress(CoinbaseTwsBlockchainAddress blockchainAddress) {
    this.blockchainAddress = blockchainAddress;
  }

  public CoinbaseTwsCryptoDestination walletId(String walletId) {
    this.walletId = walletId;
    return this;
  }

   /**
   * Crypto destination to another prime wallet
   * @return walletId
  **/
  @ApiModelProperty(value = "Crypto destination to another prime wallet")
  public String getWalletId() {
    return walletId;
  }

  public void setWalletId(String walletId) {
    this.walletId = walletId;
  }

  public CoinbaseTwsCryptoDestination trustedAddressId(String trustedAddressId) {
    this.trustedAddressId = trustedAddressId;
    return this;
  }

   /**
   * Crypto destination to a trusted address
   * @return trustedAddressId
  **/
  @ApiModelProperty(value = "Crypto destination to a trusted address")
  public String getTrustedAddressId() {
    return trustedAddressId;
  }

  public void setTrustedAddressId(String trustedAddressId) {
    this.trustedAddressId = trustedAddressId;
  }

  public CoinbaseTwsCryptoDestination walletAndBlockchainAddress(CoinbaseTwsWalletAndBlockchainAddress walletAndBlockchainAddress) {
    this.walletAndBlockchainAddress = walletAndBlockchainAddress;
    return this;
  }

   /**
   * Crypto destination to a another prime wallet using the specified address
   * @return walletAndBlockchainAddress
  **/
  @ApiModelProperty(value = "Crypto destination to a another prime wallet using the specified address")
  public CoinbaseTwsWalletAndBlockchainAddress getWalletAndBlockchainAddress() {
    return walletAndBlockchainAddress;
  }

  public void setWalletAndBlockchainAddress(CoinbaseTwsWalletAndBlockchainAddress walletAndBlockchainAddress) {
    this.walletAndBlockchainAddress = walletAndBlockchainAddress;
  }

  public CoinbaseTwsCryptoDestination ctnId(String ctnId) {
    this.ctnId = ctnId;
    return this;
  }

   /**
   * Crypto destination to a ctn id
   * @return ctnId
  **/
  @ApiModelProperty(value = "Crypto destination to a ctn id")
  public String getCtnId() {
    return ctnId;
  }

  public void setCtnId(String ctnId) {
    this.ctnId = ctnId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsCryptoDestination coinbaseTwsCryptoDestination = (CoinbaseTwsCryptoDestination) o;
    return Objects.equals(this.blockchainAddress, coinbaseTwsCryptoDestination.blockchainAddress) &&
        Objects.equals(this.walletId, coinbaseTwsCryptoDestination.walletId) &&
        Objects.equals(this.trustedAddressId, coinbaseTwsCryptoDestination.trustedAddressId) &&
        Objects.equals(this.walletAndBlockchainAddress, coinbaseTwsCryptoDestination.walletAndBlockchainAddress) &&
        Objects.equals(this.ctnId, coinbaseTwsCryptoDestination.ctnId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(blockchainAddress, walletId, trustedAddressId, walletAndBlockchainAddress, ctnId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsCryptoDestination {\n");
    
    sb.append("    blockchainAddress: ").append(toIndentedString(blockchainAddress)).append("\n");
    sb.append("    walletId: ").append(toIndentedString(walletId)).append("\n");
    sb.append("    trustedAddressId: ").append(toIndentedString(trustedAddressId)).append("\n");
    sb.append("    walletAndBlockchainAddress: ").append(toIndentedString(walletAndBlockchainAddress)).append("\n");
    sb.append("    ctnId: ").append(toIndentedString(ctnId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

