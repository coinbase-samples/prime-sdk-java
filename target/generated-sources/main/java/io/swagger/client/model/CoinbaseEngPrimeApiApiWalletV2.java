/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAddress;
import io.swagger.client.model.CoinbaseEngPrimeApiApiCurrency;
import io.swagger.client.model.CoinbaseEngPrimeApiApiStakingInfo;
import io.swagger.client.model.CoinbaseEngPrimeApiApiVestingInfo;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWalletAction;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWalletBalance;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWalletState;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWalletType;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3Info;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiWalletV2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiWalletV2 {
  @SerializedName("id")
  private String id = null;

  @SerializedName("backend_id")
  private String backendId = null;

  @SerializedName("type")
  private CoinbaseEngPrimeApiApiWalletType type = null;

  @SerializedName("state")
  private CoinbaseEngPrimeApiApiWalletState state = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("available_actions")
  private List<CoinbaseEngPrimeApiApiWalletAction> availableActions = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("balance")
  private CoinbaseEngPrimeApiApiWalletBalance balance = null;

  @SerializedName("currency")
  private CoinbaseEngPrimeApiApiCurrency currency = null;

  @SerializedName("staking_info")
  private CoinbaseEngPrimeApiApiStakingInfo stakingInfo = null;

  @SerializedName("vesting_info")
  private CoinbaseEngPrimeApiApiVestingInfo vestingInfo = null;

  @SerializedName("blockchain_address")
  private CoinbaseEngPrimeApiApiAddress blockchainAddress = null;

  @SerializedName("web3_info")
  private CoinbaseEngPrimeApiApiWeb3Info web3Info = null;

  public CoinbaseEngPrimeApiApiWalletV2 id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseEngPrimeApiApiWalletV2 backendId(String backendId) {
    this.backendId = backendId;
    return this;
  }

   /**
   * Get backendId
   * @return backendId
  **/
  @ApiModelProperty(value = "")
  public String getBackendId() {
    return backendId;
  }

  public void setBackendId(String backendId) {
    this.backendId = backendId;
  }

  public CoinbaseEngPrimeApiApiWalletV2 type(CoinbaseEngPrimeApiApiWalletType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeApiApiWalletType getType() {
    return type;
  }

  public void setType(CoinbaseEngPrimeApiApiWalletType type) {
    this.type = type;
  }

  public CoinbaseEngPrimeApiApiWalletV2 state(CoinbaseEngPrimeApiApiWalletState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeApiApiWalletState getState() {
    return state;
  }

  public void setState(CoinbaseEngPrimeApiApiWalletState state) {
    this.state = state;
  }

  public CoinbaseEngPrimeApiApiWalletV2 portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseEngPrimeApiApiWalletV2 name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseEngPrimeApiApiWalletV2 availableActions(List<CoinbaseEngPrimeApiApiWalletAction> availableActions) {
    this.availableActions = availableActions;
    return this;
  }

  public CoinbaseEngPrimeApiApiWalletV2 addAvailableActionsItem(CoinbaseEngPrimeApiApiWalletAction availableActionsItem) {
    if (this.availableActions == null) {
      this.availableActions = new ArrayList<CoinbaseEngPrimeApiApiWalletAction>();
    }
    this.availableActions.add(availableActionsItem);
    return this;
  }

   /**
   * Get availableActions
   * @return availableActions
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiWalletAction> getAvailableActions() {
    return availableActions;
  }

  public void setAvailableActions(List<CoinbaseEngPrimeApiApiWalletAction> availableActions) {
    this.availableActions = availableActions;
  }

  public CoinbaseEngPrimeApiApiWalletV2 createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseEngPrimeApiApiWalletV2 balance(CoinbaseEngPrimeApiApiWalletBalance balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWalletBalance getBalance() {
    return balance;
  }

  public void setBalance(CoinbaseEngPrimeApiApiWalletBalance balance) {
    this.balance = balance;
  }

  public CoinbaseEngPrimeApiApiWalletV2 currency(CoinbaseEngPrimeApiApiCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiCurrency getCurrency() {
    return currency;
  }

  public void setCurrency(CoinbaseEngPrimeApiApiCurrency currency) {
    this.currency = currency;
  }

  public CoinbaseEngPrimeApiApiWalletV2 stakingInfo(CoinbaseEngPrimeApiApiStakingInfo stakingInfo) {
    this.stakingInfo = stakingInfo;
    return this;
  }

   /**
   * Get stakingInfo
   * @return stakingInfo
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiStakingInfo getStakingInfo() {
    return stakingInfo;
  }

  public void setStakingInfo(CoinbaseEngPrimeApiApiStakingInfo stakingInfo) {
    this.stakingInfo = stakingInfo;
  }

  public CoinbaseEngPrimeApiApiWalletV2 vestingInfo(CoinbaseEngPrimeApiApiVestingInfo vestingInfo) {
    this.vestingInfo = vestingInfo;
    return this;
  }

   /**
   * Get vestingInfo
   * @return vestingInfo
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiVestingInfo getVestingInfo() {
    return vestingInfo;
  }

  public void setVestingInfo(CoinbaseEngPrimeApiApiVestingInfo vestingInfo) {
    this.vestingInfo = vestingInfo;
  }

  public CoinbaseEngPrimeApiApiWalletV2 blockchainAddress(CoinbaseEngPrimeApiApiAddress blockchainAddress) {
    this.blockchainAddress = blockchainAddress;
    return this;
  }

   /**
   * Get blockchainAddress
   * @return blockchainAddress
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiAddress getBlockchainAddress() {
    return blockchainAddress;
  }

  public void setBlockchainAddress(CoinbaseEngPrimeApiApiAddress blockchainAddress) {
    this.blockchainAddress = blockchainAddress;
  }

  public CoinbaseEngPrimeApiApiWalletV2 web3Info(CoinbaseEngPrimeApiApiWeb3Info web3Info) {
    this.web3Info = web3Info;
    return this;
  }

   /**
   * Get web3Info
   * @return web3Info
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWeb3Info getWeb3Info() {
    return web3Info;
  }

  public void setWeb3Info(CoinbaseEngPrimeApiApiWeb3Info web3Info) {
    this.web3Info = web3Info;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiWalletV2 coinbaseEngPrimeApiApiWalletV2 = (CoinbaseEngPrimeApiApiWalletV2) o;
    return Objects.equals(this.id, coinbaseEngPrimeApiApiWalletV2.id) &&
        Objects.equals(this.backendId, coinbaseEngPrimeApiApiWalletV2.backendId) &&
        Objects.equals(this.type, coinbaseEngPrimeApiApiWalletV2.type) &&
        Objects.equals(this.state, coinbaseEngPrimeApiApiWalletV2.state) &&
        Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiWalletV2.portfolioId) &&
        Objects.equals(this.name, coinbaseEngPrimeApiApiWalletV2.name) &&
        Objects.equals(this.availableActions, coinbaseEngPrimeApiApiWalletV2.availableActions) &&
        Objects.equals(this.createdAt, coinbaseEngPrimeApiApiWalletV2.createdAt) &&
        Objects.equals(this.balance, coinbaseEngPrimeApiApiWalletV2.balance) &&
        Objects.equals(this.currency, coinbaseEngPrimeApiApiWalletV2.currency) &&
        Objects.equals(this.stakingInfo, coinbaseEngPrimeApiApiWalletV2.stakingInfo) &&
        Objects.equals(this.vestingInfo, coinbaseEngPrimeApiApiWalletV2.vestingInfo) &&
        Objects.equals(this.blockchainAddress, coinbaseEngPrimeApiApiWalletV2.blockchainAddress) &&
        Objects.equals(this.web3Info, coinbaseEngPrimeApiApiWalletV2.web3Info);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, backendId, type, state, portfolioId, name, availableActions, createdAt, balance, currency, stakingInfo, vestingInfo, blockchainAddress, web3Info);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiWalletV2 {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    backendId: ").append(toIndentedString(backendId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    availableActions: ").append(toIndentedString(availableActions)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    stakingInfo: ").append(toIndentedString(stakingInfo)).append("\n");
    sb.append("    vestingInfo: ").append(toIndentedString(vestingInfo)).append("\n");
    sb.append("    blockchainAddress: ").append(toIndentedString(blockchainAddress)).append("\n");
    sb.append("    web3Info: ").append(toIndentedString(web3Info)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

