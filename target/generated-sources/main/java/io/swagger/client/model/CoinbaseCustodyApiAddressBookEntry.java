/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiAddressBookType;
import io.swagger.client.model.CoinbaseCustodyApiDisplayUser;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseCustodyApiAddressBookEntry
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiAddressBookEntry {
  @SerializedName("id")
  private String id = null;

  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("address")
  private String address = null;

  @SerializedName("account_identifier")
  private String accountIdentifier = null;

  @SerializedName("account_identifier_name")
  private String accountIdentifierName = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("explorer_link")
  private String explorerLink = null;

  @SerializedName("last_used_at")
  private OffsetDateTime lastUsedAt = null;

  @SerializedName("added_at")
  private OffsetDateTime addedAt = null;

  @SerializedName("added_by")
  private CoinbaseCustodyApiDisplayUser addedBy = null;

  @SerializedName("type")
  private CoinbaseCustodyApiAddressBookType type = null;

  @SerializedName("counterparty_id")
  private String counterpartyId = null;

  public CoinbaseCustodyApiAddressBookEntry id(String id) {
    this.id = id;
    return this;
  }

   /**
   * UUID identifying this address book entry
   * @return id
  **/
  @ApiModelProperty(required = true, value = "UUID identifying this address book entry")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiAddressBookEntry currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Currency symbol
   * @return currencySymbol
  **/
  @ApiModelProperty(value = "Currency symbol")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CoinbaseCustodyApiAddressBookEntry name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name for this address book entry
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name for this address book entry")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseCustodyApiAddressBookEntry address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Cryptocurrency address
   * @return address
  **/
  @ApiModelProperty(value = "Cryptocurrency address")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public CoinbaseCustodyApiAddressBookEntry accountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
    return this;
  }

   /**
   * Memo or destination tag for currencies which support them
   * @return accountIdentifier
  **/
  @ApiModelProperty(value = "Memo or destination tag for currencies which support them")
  public String getAccountIdentifier() {
    return accountIdentifier;
  }

  public void setAccountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
  }

  public CoinbaseCustodyApiAddressBookEntry accountIdentifierName(String accountIdentifierName) {
    this.accountIdentifierName = accountIdentifierName;
    return this;
  }

   /**
   * Name of the account identifier. For instance Destination Tag
   * @return accountIdentifierName
  **/
  @ApiModelProperty(value = "Name of the account identifier. For instance Destination Tag")
  public String getAccountIdentifierName() {
    return accountIdentifierName;
  }

  public void setAccountIdentifierName(String accountIdentifierName) {
    this.accountIdentifierName = accountIdentifierName;
  }

  public CoinbaseCustodyApiAddressBookEntry state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State of this address book entry
   * @return state
  **/
  @ApiModelProperty(required = true, value = "State of this address book entry")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public CoinbaseCustodyApiAddressBookEntry explorerLink(String explorerLink) {
    this.explorerLink = explorerLink;
    return this;
  }

   /**
   * Link to a blockchain explorer
   * @return explorerLink
  **/
  @ApiModelProperty(value = "Link to a blockchain explorer")
  public String getExplorerLink() {
    return explorerLink;
  }

  public void setExplorerLink(String explorerLink) {
    this.explorerLink = explorerLink;
  }

  public CoinbaseCustodyApiAddressBookEntry lastUsedAt(OffsetDateTime lastUsedAt) {
    this.lastUsedAt = lastUsedAt;
    return this;
  }

   /**
   * When this entry was last used for a transaction
   * @return lastUsedAt
  **/
  @ApiModelProperty(value = "When this entry was last used for a transaction")
  public OffsetDateTime getLastUsedAt() {
    return lastUsedAt;
  }

  public void setLastUsedAt(OffsetDateTime lastUsedAt) {
    this.lastUsedAt = lastUsedAt;
  }

  public CoinbaseCustodyApiAddressBookEntry addedAt(OffsetDateTime addedAt) {
    this.addedAt = addedAt;
    return this;
  }

   /**
   * When this entry was added to the address book
   * @return addedAt
  **/
  @ApiModelProperty(value = "When this entry was added to the address book")
  public OffsetDateTime getAddedAt() {
    return addedAt;
  }

  public void setAddedAt(OffsetDateTime addedAt) {
    this.addedAt = addedAt;
  }

  public CoinbaseCustodyApiAddressBookEntry addedBy(CoinbaseCustodyApiDisplayUser addedBy) {
    this.addedBy = addedBy;
    return this;
  }

   /**
   * User who created this address book entry
   * @return addedBy
  **/
  @ApiModelProperty(required = true, value = "User who created this address book entry")
  public CoinbaseCustodyApiDisplayUser getAddedBy() {
    return addedBy;
  }

  public void setAddedBy(CoinbaseCustodyApiDisplayUser addedBy) {
    this.addedBy = addedBy;
  }

  public CoinbaseCustodyApiAddressBookEntry type(CoinbaseCustodyApiAddressBookType type) {
    this.type = type;
    return this;
  }

   /**
   * Type of address book entry
   * @return type
  **/
  @ApiModelProperty(value = "Type of address book entry")
  public CoinbaseCustodyApiAddressBookType getType() {
    return type;
  }

  public void setType(CoinbaseCustodyApiAddressBookType type) {
    this.type = type;
  }

  public CoinbaseCustodyApiAddressBookEntry counterpartyId(String counterpartyId) {
    this.counterpartyId = counterpartyId;
    return this;
  }

   /**
   * counterparty id
   * @return counterpartyId
  **/
  @ApiModelProperty(value = "counterparty id")
  public String getCounterpartyId() {
    return counterpartyId;
  }

  public void setCounterpartyId(String counterpartyId) {
    this.counterpartyId = counterpartyId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiAddressBookEntry coinbaseCustodyApiAddressBookEntry = (CoinbaseCustodyApiAddressBookEntry) o;
    return Objects.equals(this.id, coinbaseCustodyApiAddressBookEntry.id) &&
        Objects.equals(this.currencySymbol, coinbaseCustodyApiAddressBookEntry.currencySymbol) &&
        Objects.equals(this.name, coinbaseCustodyApiAddressBookEntry.name) &&
        Objects.equals(this.address, coinbaseCustodyApiAddressBookEntry.address) &&
        Objects.equals(this.accountIdentifier, coinbaseCustodyApiAddressBookEntry.accountIdentifier) &&
        Objects.equals(this.accountIdentifierName, coinbaseCustodyApiAddressBookEntry.accountIdentifierName) &&
        Objects.equals(this.state, coinbaseCustodyApiAddressBookEntry.state) &&
        Objects.equals(this.explorerLink, coinbaseCustodyApiAddressBookEntry.explorerLink) &&
        Objects.equals(this.lastUsedAt, coinbaseCustodyApiAddressBookEntry.lastUsedAt) &&
        Objects.equals(this.addedAt, coinbaseCustodyApiAddressBookEntry.addedAt) &&
        Objects.equals(this.addedBy, coinbaseCustodyApiAddressBookEntry.addedBy) &&
        Objects.equals(this.type, coinbaseCustodyApiAddressBookEntry.type) &&
        Objects.equals(this.counterpartyId, coinbaseCustodyApiAddressBookEntry.counterpartyId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, currencySymbol, name, address, accountIdentifier, accountIdentifierName, state, explorerLink, lastUsedAt, addedAt, addedBy, type, counterpartyId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiAddressBookEntry {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    accountIdentifier: ").append(toIndentedString(accountIdentifier)).append("\n");
    sb.append("    accountIdentifierName: ").append(toIndentedString(accountIdentifierName)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    explorerLink: ").append(toIndentedString(explorerLink)).append("\n");
    sb.append("    lastUsedAt: ").append(toIndentedString(lastUsedAt)).append("\n");
    sb.append("    addedAt: ").append(toIndentedString(addedAt)).append("\n");
    sb.append("    addedBy: ").append(toIndentedString(addedBy)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    counterpartyId: ").append(toIndentedString(counterpartyId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

