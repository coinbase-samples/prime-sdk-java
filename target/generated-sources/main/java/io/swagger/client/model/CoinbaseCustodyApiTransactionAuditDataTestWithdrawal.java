/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiTransactionAuditDataCoinbaseTransactionType;
import java.io.IOException;

/**
 * CoinbaseCustodyApiTransactionAuditDataTestWithdrawal
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiTransactionAuditDataTestWithdrawal {
  @SerializedName("id")
  private String id = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("tx_link")
  private String txLink = null;

  @SerializedName("address_link")
  private String addressLink = null;

  @SerializedName("destination")
  private String destination = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("type")
  private CoinbaseCustodyApiTransactionAuditDataCoinbaseTransactionType type = null;

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal txLink(String txLink) {
    this.txLink = txLink;
    return this;
  }

   /**
   * Get txLink
   * @return txLink
  **/
  @ApiModelProperty(value = "")
  public String getTxLink() {
    return txLink;
  }

  public void setTxLink(String txLink) {
    this.txLink = txLink;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal addressLink(String addressLink) {
    this.addressLink = addressLink;
    return this;
  }

   /**
   * Get addressLink
   * @return addressLink
  **/
  @ApiModelProperty(value = "")
  public String getAddressLink() {
    return addressLink;
  }

  public void setAddressLink(String addressLink) {
    this.addressLink = addressLink;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal destination(String destination) {
    this.destination = destination;
    return this;
  }

   /**
   * Get destination
   * @return destination
  **/
  @ApiModelProperty(value = "")
  public String getDestination() {
    return destination;
  }

  public void setDestination(String destination) {
    this.destination = destination;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal state(String state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(value = "")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public CoinbaseCustodyApiTransactionAuditDataTestWithdrawal type(CoinbaseCustodyApiTransactionAuditDataCoinbaseTransactionType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransactionAuditDataCoinbaseTransactionType getType() {
    return type;
  }

  public void setType(CoinbaseCustodyApiTransactionAuditDataCoinbaseTransactionType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiTransactionAuditDataTestWithdrawal coinbaseCustodyApiTransactionAuditDataTestWithdrawal = (CoinbaseCustodyApiTransactionAuditDataTestWithdrawal) o;
    return Objects.equals(this.id, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.id) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.createdAt) &&
        Objects.equals(this.updatedAt, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.updatedAt) &&
        Objects.equals(this.currency, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.currency) &&
        Objects.equals(this.txLink, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.txLink) &&
        Objects.equals(this.addressLink, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.addressLink) &&
        Objects.equals(this.destination, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.destination) &&
        Objects.equals(this.amount, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.amount) &&
        Objects.equals(this.state, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.state) &&
        Objects.equals(this.type, coinbaseCustodyApiTransactionAuditDataTestWithdrawal.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, createdAt, updatedAt, currency, txLink, addressLink, destination, amount, state, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiTransactionAuditDataTestWithdrawal {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    txLink: ").append(toIndentedString(txLink)).append("\n");
    sb.append("    addressLink: ").append(toIndentedString(addressLink)).append("\n");
    sb.append("    destination: ").append(toIndentedString(destination)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

