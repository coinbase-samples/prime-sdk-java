/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseTwsCreateWalletOption;
import io.swagger.client.model.CoinbaseTwsWalletType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiCreateWalletV2Request
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiCreateWalletV2Request {
  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("currency_symbols")
  private List<String> currencySymbols = null;

  @SerializedName("wallet_type")
  private CoinbaseTwsWalletType walletType = null;

  @SerializedName("idempotency_key")
  private String idempotencyKey = null;

  @SerializedName("option")
  private CoinbaseTwsCreateWalletOption option = null;

  @SerializedName("organization_id")
  private String organizationId = null;

  public CoinbaseEngPrimeApiApiCreateWalletV2Request portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseEngPrimeApiApiCreateWalletV2Request name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseEngPrimeApiApiCreateWalletV2Request currencySymbols(List<String> currencySymbols) {
    this.currencySymbols = currencySymbols;
    return this;
  }

  public CoinbaseEngPrimeApiApiCreateWalletV2Request addCurrencySymbolsItem(String currencySymbolsItem) {
    if (this.currencySymbols == null) {
      this.currencySymbols = new ArrayList<String>();
    }
    this.currencySymbols.add(currencySymbolsItem);
    return this;
  }

   /**
   * Get currencySymbols
   * @return currencySymbols
  **/
  @ApiModelProperty(value = "")
  public List<String> getCurrencySymbols() {
    return currencySymbols;
  }

  public void setCurrencySymbols(List<String> currencySymbols) {
    this.currencySymbols = currencySymbols;
  }

  public CoinbaseEngPrimeApiApiCreateWalletV2Request walletType(CoinbaseTwsWalletType walletType) {
    this.walletType = walletType;
    return this;
  }

   /**
   * Get walletType
   * @return walletType
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseTwsWalletType getWalletType() {
    return walletType;
  }

  public void setWalletType(CoinbaseTwsWalletType walletType) {
    this.walletType = walletType;
  }

  public CoinbaseEngPrimeApiApiCreateWalletV2Request idempotencyKey(String idempotencyKey) {
    this.idempotencyKey = idempotencyKey;
    return this;
  }

   /**
   * Get idempotencyKey
   * @return idempotencyKey
  **/
  @ApiModelProperty(required = true, value = "")
  public String getIdempotencyKey() {
    return idempotencyKey;
  }

  public void setIdempotencyKey(String idempotencyKey) {
    this.idempotencyKey = idempotencyKey;
  }

  public CoinbaseEngPrimeApiApiCreateWalletV2Request option(CoinbaseTwsCreateWalletOption option) {
    this.option = option;
    return this;
  }

   /**
   * Get option
   * @return option
  **/
  @ApiModelProperty(value = "")
  public CoinbaseTwsCreateWalletOption getOption() {
    return option;
  }

  public void setOption(CoinbaseTwsCreateWalletOption option) {
    this.option = option;
  }

  public CoinbaseEngPrimeApiApiCreateWalletV2Request organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Get organizationId
   * @return organizationId
  **/
  @ApiModelProperty(value = "")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiCreateWalletV2Request coinbaseEngPrimeApiApiCreateWalletV2Request = (CoinbaseEngPrimeApiApiCreateWalletV2Request) o;
    return Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiCreateWalletV2Request.portfolioId) &&
        Objects.equals(this.name, coinbaseEngPrimeApiApiCreateWalletV2Request.name) &&
        Objects.equals(this.currencySymbols, coinbaseEngPrimeApiApiCreateWalletV2Request.currencySymbols) &&
        Objects.equals(this.walletType, coinbaseEngPrimeApiApiCreateWalletV2Request.walletType) &&
        Objects.equals(this.idempotencyKey, coinbaseEngPrimeApiApiCreateWalletV2Request.idempotencyKey) &&
        Objects.equals(this.option, coinbaseEngPrimeApiApiCreateWalletV2Request.option) &&
        Objects.equals(this.organizationId, coinbaseEngPrimeApiApiCreateWalletV2Request.organizationId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioId, name, currencySymbols, walletType, idempotencyKey, option, organizationId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiCreateWalletV2Request {\n");
    
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    currencySymbols: ").append(toIndentedString(currencySymbols)).append("\n");
    sb.append("    walletType: ").append(toIndentedString(walletType)).append("\n");
    sb.append("    idempotencyKey: ").append(toIndentedString(idempotencyKey)).append("\n");
    sb.append("    option: ").append(toIndentedString(option)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

