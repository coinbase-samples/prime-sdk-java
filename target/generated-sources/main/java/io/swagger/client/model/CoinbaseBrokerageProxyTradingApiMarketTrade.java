/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonOrderSide;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseBrokerageProxyTradingApiMarketTrade
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyTradingApiMarketTrade {
  @SerializedName("trade_id")
  private String tradeId = null;

  @SerializedName("product_id")
  private String productId = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("size")
  private String size = null;

  @SerializedName("time")
  private OffsetDateTime time = null;

  @SerializedName("side")
  private CoinbaseBrokerageProxyCommonOrderSide side = null;

  @SerializedName("exchange")
  private String exchange = null;

  public CoinbaseBrokerageProxyTradingApiMarketTrade tradeId(String tradeId) {
    this.tradeId = tradeId;
    return this;
  }

   /**
   * Get tradeId
   * @return tradeId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTradeId() {
    return tradeId;
  }

  public void setTradeId(String tradeId) {
    this.tradeId = tradeId;
  }

  public CoinbaseBrokerageProxyTradingApiMarketTrade productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * Get productId
   * @return productId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public CoinbaseBrokerageProxyTradingApiMarketTrade price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CoinbaseBrokerageProxyTradingApiMarketTrade size(String size) {
    this.size = size;
    return this;
  }

   /**
   * Get size
   * @return size
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSize() {
    return size;
  }

  public void setSize(String size) {
    this.size = size;
  }

  public CoinbaseBrokerageProxyTradingApiMarketTrade time(OffsetDateTime time) {
    this.time = time;
    return this;
  }

   /**
   * Get time
   * @return time
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getTime() {
    return time;
  }

  public void setTime(OffsetDateTime time) {
    this.time = time;
  }

  public CoinbaseBrokerageProxyTradingApiMarketTrade side(CoinbaseBrokerageProxyCommonOrderSide side) {
    this.side = side;
    return this;
  }

   /**
   * Get side
   * @return side
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseBrokerageProxyCommonOrderSide getSide() {
    return side;
  }

  public void setSide(CoinbaseBrokerageProxyCommonOrderSide side) {
    this.side = side;
  }

  public CoinbaseBrokerageProxyTradingApiMarketTrade exchange(String exchange) {
    this.exchange = exchange;
    return this;
  }

   /**
   * Get exchange
   * @return exchange
  **/
  @ApiModelProperty(required = true, value = "")
  public String getExchange() {
    return exchange;
  }

  public void setExchange(String exchange) {
    this.exchange = exchange;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyTradingApiMarketTrade coinbaseBrokerageProxyTradingApiMarketTrade = (CoinbaseBrokerageProxyTradingApiMarketTrade) o;
    return Objects.equals(this.tradeId, coinbaseBrokerageProxyTradingApiMarketTrade.tradeId) &&
        Objects.equals(this.productId, coinbaseBrokerageProxyTradingApiMarketTrade.productId) &&
        Objects.equals(this.price, coinbaseBrokerageProxyTradingApiMarketTrade.price) &&
        Objects.equals(this.size, coinbaseBrokerageProxyTradingApiMarketTrade.size) &&
        Objects.equals(this.time, coinbaseBrokerageProxyTradingApiMarketTrade.time) &&
        Objects.equals(this.side, coinbaseBrokerageProxyTradingApiMarketTrade.side) &&
        Objects.equals(this.exchange, coinbaseBrokerageProxyTradingApiMarketTrade.exchange);
  }

  @Override
  public int hashCode() {
    return Objects.hash(tradeId, productId, price, size, time, side, exchange);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyTradingApiMarketTrade {\n");
    
    sb.append("    tradeId: ").append(toIndentedString(tradeId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    size: ").append(toIndentedString(size)).append("\n");
    sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    exchange: ").append(toIndentedString(exchange)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

