/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseFinancingLocateFiltersWithDate
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingLocateFiltersWithDate {
  @SerializedName("statuses")
  private List<String> statuses = null;

  @SerializedName("start_conversion_date")
  private String startConversionDate = null;

  @SerializedName("end_conversion_date")
  private String endConversionDate = null;

  public CoinbaseFinancingLocateFiltersWithDate statuses(List<String> statuses) {
    this.statuses = statuses;
    return this;
  }

  public CoinbaseFinancingLocateFiltersWithDate addStatusesItem(String statusesItem) {
    if (this.statuses == null) {
      this.statuses = new ArrayList<String>();
    }
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @ApiModelProperty(value = "")
  public List<String> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<String> statuses) {
    this.statuses = statuses;
  }

  public CoinbaseFinancingLocateFiltersWithDate startConversionDate(String startConversionDate) {
    this.startConversionDate = startConversionDate;
    return this;
  }

   /**
   * Get startConversionDate
   * @return startConversionDate
  **/
  @ApiModelProperty(value = "")
  public String getStartConversionDate() {
    return startConversionDate;
  }

  public void setStartConversionDate(String startConversionDate) {
    this.startConversionDate = startConversionDate;
  }

  public CoinbaseFinancingLocateFiltersWithDate endConversionDate(String endConversionDate) {
    this.endConversionDate = endConversionDate;
    return this;
  }

   /**
   * Get endConversionDate
   * @return endConversionDate
  **/
  @ApiModelProperty(value = "")
  public String getEndConversionDate() {
    return endConversionDate;
  }

  public void setEndConversionDate(String endConversionDate) {
    this.endConversionDate = endConversionDate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingLocateFiltersWithDate coinbaseFinancingLocateFiltersWithDate = (CoinbaseFinancingLocateFiltersWithDate) o;
    return Objects.equals(this.statuses, coinbaseFinancingLocateFiltersWithDate.statuses) &&
        Objects.equals(this.startConversionDate, coinbaseFinancingLocateFiltersWithDate.startConversionDate) &&
        Objects.equals(this.endConversionDate, coinbaseFinancingLocateFiltersWithDate.endConversionDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(statuses, startConversionDate, endConversionDate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingLocateFiltersWithDate {\n");
    
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    startConversionDate: ").append(toIndentedString(startConversionDate)).append("\n");
    sb.append("    endConversionDate: ").append(toIndentedString(endConversionDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

