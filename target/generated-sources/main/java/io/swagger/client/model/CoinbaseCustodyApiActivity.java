/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiActivityCurrency;
import io.swagger.client.model.CoinbaseCustodyApiActivityState;
import io.swagger.client.model.CoinbaseCustodyApiActivityTimeRemaining;
import io.swagger.client.model.CoinbaseCustodyApiActivityTimelineEvent;
import io.swagger.client.model.CoinbaseCustodyApiActivityUser;
import io.swagger.client.model.CoinbaseCustodyApiAdminChangeRequestAuditData;
import io.swagger.client.model.CoinbaseCustodyApiAdminChangeRequestAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiApiKeyChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiApiKeyChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiAuditableState;
import io.swagger.client.model.CoinbaseCustodyApiAuditableType;
import io.swagger.client.model.CoinbaseCustodyApiBillingAddressChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiBillingAddressChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiBillingPreferenceChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiBillingPreferenceChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiDocumentSignatureAuditData;
import io.swagger.client.model.CoinbaseCustodyApiDocumentSignatureAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiEmailListChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiEmailListChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiGovernanceVoteAuditData;
import io.swagger.client.model.CoinbaseCustodyApiInvitationAuditData;
import io.swagger.client.model.CoinbaseCustodyApiPaymentMethodChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiPaymentMethodChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiRedoPlanAuditData;
import io.swagger.client.model.CoinbaseCustodyApiRedoPlanAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiSecondaryAuditableType;
import io.swagger.client.model.CoinbaseCustodyApiSettingsChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiSettingsChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiSmartContractReleaseAuditData;
import io.swagger.client.model.CoinbaseCustodyApiStandardAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiTransactionAuditData;
import io.swagger.client.model.CoinbaseCustodyApiTransactionAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeRequestAuditData;
import io.swagger.client.model.CoinbaseCustodyApiWalletChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiWalletChangeAuditValue;
import io.swagger.client.model.CoinbaseCustodyApiWithdrawalAddressChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiWithdrawalAddressChangeAuditValue;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseCustodyApiActivity
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiActivity {
  @SerializedName("id")
  private String id = null;

  @SerializedName("auditable_type")
  private CoinbaseCustodyApiAuditableType auditableType = null;

  @SerializedName("auditable_id")
  private String auditableId = null;

  @SerializedName("auditable_state")
  private CoinbaseCustodyApiAuditableState auditableState = null;

  @SerializedName("state")
  private CoinbaseCustodyApiActivityState state = null;

  @SerializedName("user")
  private CoinbaseCustodyApiActivityUser user = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("human_last_updated")
  private String humanLastUpdated = null;

  @SerializedName("secondary_auditable_type")
  private CoinbaseCustodyApiSecondaryAuditableType secondaryAuditableType = null;

  @SerializedName("time_remaining")
  private CoinbaseCustodyApiActivityTimeRemaining timeRemaining = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("approved_at")
  private String approvedAt = null;

  @SerializedName("expired_at")
  private String expiredAt = null;

  @SerializedName("timeline_events")
  private List<CoinbaseCustodyApiActivityTimelineEvent> timelineEvents = new ArrayList<CoinbaseCustodyApiActivityTimelineEvent>();

  @SerializedName("currency")
  private CoinbaseCustodyApiActivityCurrency currency = null;

  @SerializedName("action")
  private String action = null;

  @SerializedName("standard_value")
  private CoinbaseCustodyApiStandardAuditValue standardValue = null;

  @SerializedName("wallet_change_value")
  private CoinbaseCustodyApiWalletChangeAuditValue walletChangeValue = null;

  @SerializedName("user_change_value")
  private CoinbaseCustodyApiUserChangeAuditValue userChangeValue = null;

  @SerializedName("settings_change_value")
  private CoinbaseCustodyApiSettingsChangeAuditValue settingsChangeValue = null;

  @SerializedName("redo_plan_value")
  private CoinbaseCustodyApiRedoPlanAuditValue redoPlanValue = null;

  @SerializedName("withdrawal_address_change_value")
  private CoinbaseCustodyApiWithdrawalAddressChangeAuditValue withdrawalAddressChangeValue = null;

  @SerializedName("transaction_value")
  private CoinbaseCustodyApiTransactionAuditValue transactionValue = null;

  @SerializedName("email_list_change_value")
  private CoinbaseCustodyApiEmailListChangeAuditValue emailListChangeValue = null;

  @SerializedName("document_signature_value")
  private CoinbaseCustodyApiDocumentSignatureAuditValue documentSignatureValue = null;

  @SerializedName("billing_preference_change_value")
  private CoinbaseCustodyApiBillingPreferenceChangeAuditValue billingPreferenceChangeValue = null;

  @SerializedName("billing_address_change_value")
  private CoinbaseCustodyApiBillingAddressChangeAuditValue billingAddressChangeValue = null;

  @SerializedName("api_key_change_value")
  private CoinbaseCustodyApiApiKeyChangeAuditValue apiKeyChangeValue = null;

  @SerializedName("admin_change_request_value")
  private CoinbaseCustodyApiAdminChangeRequestAuditValue adminChangeRequestValue = null;

  @SerializedName("payment_method_change_value")
  private CoinbaseCustodyApiPaymentMethodChangeAuditValue paymentMethodChangeValue = null;

  @SerializedName("wallet_change_data")
  private CoinbaseCustodyApiWalletChangeAuditData walletChangeData = null;

  @SerializedName("user_change_data")
  private CoinbaseCustodyApiUserChangeAuditData userChangeData = null;

  @SerializedName("smart_contract_release_data")
  private CoinbaseCustodyApiSmartContractReleaseAuditData smartContractReleaseData = null;

  @SerializedName("settings_change_data")
  private CoinbaseCustodyApiSettingsChangeAuditData settingsChangeData = null;

  @SerializedName("redo_plan_data")
  private CoinbaseCustodyApiRedoPlanAuditData redoPlanData = null;

  @SerializedName("withdrawal_address_change_data")
  private CoinbaseCustodyApiWithdrawalAddressChangeAuditData withdrawalAddressChangeData = null;

  @SerializedName("transaction_data")
  private CoinbaseCustodyApiTransactionAuditData transactionData = null;

  @SerializedName("invitation_data")
  private CoinbaseCustodyApiInvitationAuditData invitationData = null;

  @SerializedName("governance_vote_data")
  private CoinbaseCustodyApiGovernanceVoteAuditData governanceVoteData = null;

  @SerializedName("email_list_change_data")
  private CoinbaseCustodyApiEmailListChangeAuditData emailListChangeData = null;

  @SerializedName("document_signature_data")
  private CoinbaseCustodyApiDocumentSignatureAuditData documentSignatureData = null;

  @SerializedName("billing_preference_change_data")
  private CoinbaseCustodyApiBillingPreferenceChangeAuditData billingPreferenceChangeData = null;

  @SerializedName("billing_address_change_data")
  private CoinbaseCustodyApiBillingAddressChangeAuditData billingAddressChangeData = null;

  @SerializedName("api_key_change_data")
  private CoinbaseCustodyApiApiKeyChangeAuditData apiKeyChangeData = null;

  @SerializedName("admin_change_request_data")
  private CoinbaseCustodyApiAdminChangeRequestAuditData adminChangeRequestData = null;

  @SerializedName("payment_method_change_data")
  private CoinbaseCustodyApiPaymentMethodChangeAuditData paymentMethodChangeData = null;

  @SerializedName("user_change_request_data")
  private CoinbaseCustodyApiUserChangeRequestAuditData userChangeRequestData = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  @SerializedName("approve_by")
  private String approveBy = null;

  public CoinbaseCustodyApiActivity id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiActivity auditableType(CoinbaseCustodyApiAuditableType auditableType) {
    this.auditableType = auditableType;
    return this;
  }

   /**
   * Get auditableType
   * @return auditableType
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiAuditableType getAuditableType() {
    return auditableType;
  }

  public void setAuditableType(CoinbaseCustodyApiAuditableType auditableType) {
    this.auditableType = auditableType;
  }

  public CoinbaseCustodyApiActivity auditableId(String auditableId) {
    this.auditableId = auditableId;
    return this;
  }

   /**
   * Get auditableId
   * @return auditableId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAuditableId() {
    return auditableId;
  }

  public void setAuditableId(String auditableId) {
    this.auditableId = auditableId;
  }

  public CoinbaseCustodyApiActivity auditableState(CoinbaseCustodyApiAuditableState auditableState) {
    this.auditableState = auditableState;
    return this;
  }

   /**
   * Get auditableState
   * @return auditableState
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiAuditableState getAuditableState() {
    return auditableState;
  }

  public void setAuditableState(CoinbaseCustodyApiAuditableState auditableState) {
    this.auditableState = auditableState;
  }

  public CoinbaseCustodyApiActivity state(CoinbaseCustodyApiActivityState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiActivityState getState() {
    return state;
  }

  public void setState(CoinbaseCustodyApiActivityState state) {
    this.state = state;
  }

  public CoinbaseCustodyApiActivity user(CoinbaseCustodyApiActivityUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiActivityUser getUser() {
    return user;
  }

  public void setUser(CoinbaseCustodyApiActivityUser user) {
    this.user = user;
  }

  public CoinbaseCustodyApiActivity createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiActivity humanLastUpdated(String humanLastUpdated) {
    this.humanLastUpdated = humanLastUpdated;
    return this;
  }

   /**
   * Get humanLastUpdated
   * @return humanLastUpdated
  **/
  @ApiModelProperty(required = true, value = "")
  public String getHumanLastUpdated() {
    return humanLastUpdated;
  }

  public void setHumanLastUpdated(String humanLastUpdated) {
    this.humanLastUpdated = humanLastUpdated;
  }

  public CoinbaseCustodyApiActivity secondaryAuditableType(CoinbaseCustodyApiSecondaryAuditableType secondaryAuditableType) {
    this.secondaryAuditableType = secondaryAuditableType;
    return this;
  }

   /**
   * Get secondaryAuditableType
   * @return secondaryAuditableType
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiSecondaryAuditableType getSecondaryAuditableType() {
    return secondaryAuditableType;
  }

  public void setSecondaryAuditableType(CoinbaseCustodyApiSecondaryAuditableType secondaryAuditableType) {
    this.secondaryAuditableType = secondaryAuditableType;
  }

  public CoinbaseCustodyApiActivity timeRemaining(CoinbaseCustodyApiActivityTimeRemaining timeRemaining) {
    this.timeRemaining = timeRemaining;
    return this;
  }

   /**
   * Get timeRemaining
   * @return timeRemaining
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiActivityTimeRemaining getTimeRemaining() {
    return timeRemaining;
  }

  public void setTimeRemaining(CoinbaseCustodyApiActivityTimeRemaining timeRemaining) {
    this.timeRemaining = timeRemaining;
  }

  public CoinbaseCustodyApiActivity title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Get title
   * @return title
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public CoinbaseCustodyApiActivity approvedAt(String approvedAt) {
    this.approvedAt = approvedAt;
    return this;
  }

   /**
   * Get approvedAt
   * @return approvedAt
  **/
  @ApiModelProperty(required = true, value = "")
  public String getApprovedAt() {
    return approvedAt;
  }

  public void setApprovedAt(String approvedAt) {
    this.approvedAt = approvedAt;
  }

  public CoinbaseCustodyApiActivity expiredAt(String expiredAt) {
    this.expiredAt = expiredAt;
    return this;
  }

   /**
   * Get expiredAt
   * @return expiredAt
  **/
  @ApiModelProperty(required = true, value = "")
  public String getExpiredAt() {
    return expiredAt;
  }

  public void setExpiredAt(String expiredAt) {
    this.expiredAt = expiredAt;
  }

  public CoinbaseCustodyApiActivity timelineEvents(List<CoinbaseCustodyApiActivityTimelineEvent> timelineEvents) {
    this.timelineEvents = timelineEvents;
    return this;
  }

  public CoinbaseCustodyApiActivity addTimelineEventsItem(CoinbaseCustodyApiActivityTimelineEvent timelineEventsItem) {
    this.timelineEvents.add(timelineEventsItem);
    return this;
  }

   /**
   * Get timelineEvents
   * @return timelineEvents
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseCustodyApiActivityTimelineEvent> getTimelineEvents() {
    return timelineEvents;
  }

  public void setTimelineEvents(List<CoinbaseCustodyApiActivityTimelineEvent> timelineEvents) {
    this.timelineEvents = timelineEvents;
  }

  public CoinbaseCustodyApiActivity currency(CoinbaseCustodyApiActivityCurrency currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiActivityCurrency getCurrency() {
    return currency;
  }

  public void setCurrency(CoinbaseCustodyApiActivityCurrency currency) {
    this.currency = currency;
  }

  public CoinbaseCustodyApiActivity action(String action) {
    this.action = action;
    return this;
  }

   /**
   * Get action
   * @return action
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAction() {
    return action;
  }

  public void setAction(String action) {
    this.action = action;
  }

  public CoinbaseCustodyApiActivity standardValue(CoinbaseCustodyApiStandardAuditValue standardValue) {
    this.standardValue = standardValue;
    return this;
  }

   /**
   * Get standardValue
   * @return standardValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiStandardAuditValue getStandardValue() {
    return standardValue;
  }

  public void setStandardValue(CoinbaseCustodyApiStandardAuditValue standardValue) {
    this.standardValue = standardValue;
  }

  public CoinbaseCustodyApiActivity walletChangeValue(CoinbaseCustodyApiWalletChangeAuditValue walletChangeValue) {
    this.walletChangeValue = walletChangeValue;
    return this;
  }

   /**
   * Get walletChangeValue
   * @return walletChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiWalletChangeAuditValue getWalletChangeValue() {
    return walletChangeValue;
  }

  public void setWalletChangeValue(CoinbaseCustodyApiWalletChangeAuditValue walletChangeValue) {
    this.walletChangeValue = walletChangeValue;
  }

  public CoinbaseCustodyApiActivity userChangeValue(CoinbaseCustodyApiUserChangeAuditValue userChangeValue) {
    this.userChangeValue = userChangeValue;
    return this;
  }

   /**
   * Get userChangeValue
   * @return userChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeAuditValue getUserChangeValue() {
    return userChangeValue;
  }

  public void setUserChangeValue(CoinbaseCustodyApiUserChangeAuditValue userChangeValue) {
    this.userChangeValue = userChangeValue;
  }

  public CoinbaseCustodyApiActivity settingsChangeValue(CoinbaseCustodyApiSettingsChangeAuditValue settingsChangeValue) {
    this.settingsChangeValue = settingsChangeValue;
    return this;
  }

   /**
   * Get settingsChangeValue
   * @return settingsChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiSettingsChangeAuditValue getSettingsChangeValue() {
    return settingsChangeValue;
  }

  public void setSettingsChangeValue(CoinbaseCustodyApiSettingsChangeAuditValue settingsChangeValue) {
    this.settingsChangeValue = settingsChangeValue;
  }

  public CoinbaseCustodyApiActivity redoPlanValue(CoinbaseCustodyApiRedoPlanAuditValue redoPlanValue) {
    this.redoPlanValue = redoPlanValue;
    return this;
  }

   /**
   * Get redoPlanValue
   * @return redoPlanValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiRedoPlanAuditValue getRedoPlanValue() {
    return redoPlanValue;
  }

  public void setRedoPlanValue(CoinbaseCustodyApiRedoPlanAuditValue redoPlanValue) {
    this.redoPlanValue = redoPlanValue;
  }

  public CoinbaseCustodyApiActivity withdrawalAddressChangeValue(CoinbaseCustodyApiWithdrawalAddressChangeAuditValue withdrawalAddressChangeValue) {
    this.withdrawalAddressChangeValue = withdrawalAddressChangeValue;
    return this;
  }

   /**
   * Get withdrawalAddressChangeValue
   * @return withdrawalAddressChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiWithdrawalAddressChangeAuditValue getWithdrawalAddressChangeValue() {
    return withdrawalAddressChangeValue;
  }

  public void setWithdrawalAddressChangeValue(CoinbaseCustodyApiWithdrawalAddressChangeAuditValue withdrawalAddressChangeValue) {
    this.withdrawalAddressChangeValue = withdrawalAddressChangeValue;
  }

  public CoinbaseCustodyApiActivity transactionValue(CoinbaseCustodyApiTransactionAuditValue transactionValue) {
    this.transactionValue = transactionValue;
    return this;
  }

   /**
   * Get transactionValue
   * @return transactionValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransactionAuditValue getTransactionValue() {
    return transactionValue;
  }

  public void setTransactionValue(CoinbaseCustodyApiTransactionAuditValue transactionValue) {
    this.transactionValue = transactionValue;
  }

  public CoinbaseCustodyApiActivity emailListChangeValue(CoinbaseCustodyApiEmailListChangeAuditValue emailListChangeValue) {
    this.emailListChangeValue = emailListChangeValue;
    return this;
  }

   /**
   * Get emailListChangeValue
   * @return emailListChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiEmailListChangeAuditValue getEmailListChangeValue() {
    return emailListChangeValue;
  }

  public void setEmailListChangeValue(CoinbaseCustodyApiEmailListChangeAuditValue emailListChangeValue) {
    this.emailListChangeValue = emailListChangeValue;
  }

  public CoinbaseCustodyApiActivity documentSignatureValue(CoinbaseCustodyApiDocumentSignatureAuditValue documentSignatureValue) {
    this.documentSignatureValue = documentSignatureValue;
    return this;
  }

   /**
   * Get documentSignatureValue
   * @return documentSignatureValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiDocumentSignatureAuditValue getDocumentSignatureValue() {
    return documentSignatureValue;
  }

  public void setDocumentSignatureValue(CoinbaseCustodyApiDocumentSignatureAuditValue documentSignatureValue) {
    this.documentSignatureValue = documentSignatureValue;
  }

  public CoinbaseCustodyApiActivity billingPreferenceChangeValue(CoinbaseCustodyApiBillingPreferenceChangeAuditValue billingPreferenceChangeValue) {
    this.billingPreferenceChangeValue = billingPreferenceChangeValue;
    return this;
  }

   /**
   * Get billingPreferenceChangeValue
   * @return billingPreferenceChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiBillingPreferenceChangeAuditValue getBillingPreferenceChangeValue() {
    return billingPreferenceChangeValue;
  }

  public void setBillingPreferenceChangeValue(CoinbaseCustodyApiBillingPreferenceChangeAuditValue billingPreferenceChangeValue) {
    this.billingPreferenceChangeValue = billingPreferenceChangeValue;
  }

  public CoinbaseCustodyApiActivity billingAddressChangeValue(CoinbaseCustodyApiBillingAddressChangeAuditValue billingAddressChangeValue) {
    this.billingAddressChangeValue = billingAddressChangeValue;
    return this;
  }

   /**
   * Get billingAddressChangeValue
   * @return billingAddressChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiBillingAddressChangeAuditValue getBillingAddressChangeValue() {
    return billingAddressChangeValue;
  }

  public void setBillingAddressChangeValue(CoinbaseCustodyApiBillingAddressChangeAuditValue billingAddressChangeValue) {
    this.billingAddressChangeValue = billingAddressChangeValue;
  }

  public CoinbaseCustodyApiActivity apiKeyChangeValue(CoinbaseCustodyApiApiKeyChangeAuditValue apiKeyChangeValue) {
    this.apiKeyChangeValue = apiKeyChangeValue;
    return this;
  }

   /**
   * Get apiKeyChangeValue
   * @return apiKeyChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiApiKeyChangeAuditValue getApiKeyChangeValue() {
    return apiKeyChangeValue;
  }

  public void setApiKeyChangeValue(CoinbaseCustodyApiApiKeyChangeAuditValue apiKeyChangeValue) {
    this.apiKeyChangeValue = apiKeyChangeValue;
  }

  public CoinbaseCustodyApiActivity adminChangeRequestValue(CoinbaseCustodyApiAdminChangeRequestAuditValue adminChangeRequestValue) {
    this.adminChangeRequestValue = adminChangeRequestValue;
    return this;
  }

   /**
   * Get adminChangeRequestValue
   * @return adminChangeRequestValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiAdminChangeRequestAuditValue getAdminChangeRequestValue() {
    return adminChangeRequestValue;
  }

  public void setAdminChangeRequestValue(CoinbaseCustodyApiAdminChangeRequestAuditValue adminChangeRequestValue) {
    this.adminChangeRequestValue = adminChangeRequestValue;
  }

  public CoinbaseCustodyApiActivity paymentMethodChangeValue(CoinbaseCustodyApiPaymentMethodChangeAuditValue paymentMethodChangeValue) {
    this.paymentMethodChangeValue = paymentMethodChangeValue;
    return this;
  }

   /**
   * Get paymentMethodChangeValue
   * @return paymentMethodChangeValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiPaymentMethodChangeAuditValue getPaymentMethodChangeValue() {
    return paymentMethodChangeValue;
  }

  public void setPaymentMethodChangeValue(CoinbaseCustodyApiPaymentMethodChangeAuditValue paymentMethodChangeValue) {
    this.paymentMethodChangeValue = paymentMethodChangeValue;
  }

  public CoinbaseCustodyApiActivity walletChangeData(CoinbaseCustodyApiWalletChangeAuditData walletChangeData) {
    this.walletChangeData = walletChangeData;
    return this;
  }

   /**
   * Get walletChangeData
   * @return walletChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiWalletChangeAuditData getWalletChangeData() {
    return walletChangeData;
  }

  public void setWalletChangeData(CoinbaseCustodyApiWalletChangeAuditData walletChangeData) {
    this.walletChangeData = walletChangeData;
  }

  public CoinbaseCustodyApiActivity userChangeData(CoinbaseCustodyApiUserChangeAuditData userChangeData) {
    this.userChangeData = userChangeData;
    return this;
  }

   /**
   * Get userChangeData
   * @return userChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeAuditData getUserChangeData() {
    return userChangeData;
  }

  public void setUserChangeData(CoinbaseCustodyApiUserChangeAuditData userChangeData) {
    this.userChangeData = userChangeData;
  }

  public CoinbaseCustodyApiActivity smartContractReleaseData(CoinbaseCustodyApiSmartContractReleaseAuditData smartContractReleaseData) {
    this.smartContractReleaseData = smartContractReleaseData;
    return this;
  }

   /**
   * Get smartContractReleaseData
   * @return smartContractReleaseData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiSmartContractReleaseAuditData getSmartContractReleaseData() {
    return smartContractReleaseData;
  }

  public void setSmartContractReleaseData(CoinbaseCustodyApiSmartContractReleaseAuditData smartContractReleaseData) {
    this.smartContractReleaseData = smartContractReleaseData;
  }

  public CoinbaseCustodyApiActivity settingsChangeData(CoinbaseCustodyApiSettingsChangeAuditData settingsChangeData) {
    this.settingsChangeData = settingsChangeData;
    return this;
  }

   /**
   * Get settingsChangeData
   * @return settingsChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiSettingsChangeAuditData getSettingsChangeData() {
    return settingsChangeData;
  }

  public void setSettingsChangeData(CoinbaseCustodyApiSettingsChangeAuditData settingsChangeData) {
    this.settingsChangeData = settingsChangeData;
  }

  public CoinbaseCustodyApiActivity redoPlanData(CoinbaseCustodyApiRedoPlanAuditData redoPlanData) {
    this.redoPlanData = redoPlanData;
    return this;
  }

   /**
   * Get redoPlanData
   * @return redoPlanData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiRedoPlanAuditData getRedoPlanData() {
    return redoPlanData;
  }

  public void setRedoPlanData(CoinbaseCustodyApiRedoPlanAuditData redoPlanData) {
    this.redoPlanData = redoPlanData;
  }

  public CoinbaseCustodyApiActivity withdrawalAddressChangeData(CoinbaseCustodyApiWithdrawalAddressChangeAuditData withdrawalAddressChangeData) {
    this.withdrawalAddressChangeData = withdrawalAddressChangeData;
    return this;
  }

   /**
   * Get withdrawalAddressChangeData
   * @return withdrawalAddressChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiWithdrawalAddressChangeAuditData getWithdrawalAddressChangeData() {
    return withdrawalAddressChangeData;
  }

  public void setWithdrawalAddressChangeData(CoinbaseCustodyApiWithdrawalAddressChangeAuditData withdrawalAddressChangeData) {
    this.withdrawalAddressChangeData = withdrawalAddressChangeData;
  }

  public CoinbaseCustodyApiActivity transactionData(CoinbaseCustodyApiTransactionAuditData transactionData) {
    this.transactionData = transactionData;
    return this;
  }

   /**
   * Get transactionData
   * @return transactionData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransactionAuditData getTransactionData() {
    return transactionData;
  }

  public void setTransactionData(CoinbaseCustodyApiTransactionAuditData transactionData) {
    this.transactionData = transactionData;
  }

  public CoinbaseCustodyApiActivity invitationData(CoinbaseCustodyApiInvitationAuditData invitationData) {
    this.invitationData = invitationData;
    return this;
  }

   /**
   * Get invitationData
   * @return invitationData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiInvitationAuditData getInvitationData() {
    return invitationData;
  }

  public void setInvitationData(CoinbaseCustodyApiInvitationAuditData invitationData) {
    this.invitationData = invitationData;
  }

  public CoinbaseCustodyApiActivity governanceVoteData(CoinbaseCustodyApiGovernanceVoteAuditData governanceVoteData) {
    this.governanceVoteData = governanceVoteData;
    return this;
  }

   /**
   * Get governanceVoteData
   * @return governanceVoteData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiGovernanceVoteAuditData getGovernanceVoteData() {
    return governanceVoteData;
  }

  public void setGovernanceVoteData(CoinbaseCustodyApiGovernanceVoteAuditData governanceVoteData) {
    this.governanceVoteData = governanceVoteData;
  }

  public CoinbaseCustodyApiActivity emailListChangeData(CoinbaseCustodyApiEmailListChangeAuditData emailListChangeData) {
    this.emailListChangeData = emailListChangeData;
    return this;
  }

   /**
   * Get emailListChangeData
   * @return emailListChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiEmailListChangeAuditData getEmailListChangeData() {
    return emailListChangeData;
  }

  public void setEmailListChangeData(CoinbaseCustodyApiEmailListChangeAuditData emailListChangeData) {
    this.emailListChangeData = emailListChangeData;
  }

  public CoinbaseCustodyApiActivity documentSignatureData(CoinbaseCustodyApiDocumentSignatureAuditData documentSignatureData) {
    this.documentSignatureData = documentSignatureData;
    return this;
  }

   /**
   * Get documentSignatureData
   * @return documentSignatureData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiDocumentSignatureAuditData getDocumentSignatureData() {
    return documentSignatureData;
  }

  public void setDocumentSignatureData(CoinbaseCustodyApiDocumentSignatureAuditData documentSignatureData) {
    this.documentSignatureData = documentSignatureData;
  }

  public CoinbaseCustodyApiActivity billingPreferenceChangeData(CoinbaseCustodyApiBillingPreferenceChangeAuditData billingPreferenceChangeData) {
    this.billingPreferenceChangeData = billingPreferenceChangeData;
    return this;
  }

   /**
   * Get billingPreferenceChangeData
   * @return billingPreferenceChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiBillingPreferenceChangeAuditData getBillingPreferenceChangeData() {
    return billingPreferenceChangeData;
  }

  public void setBillingPreferenceChangeData(CoinbaseCustodyApiBillingPreferenceChangeAuditData billingPreferenceChangeData) {
    this.billingPreferenceChangeData = billingPreferenceChangeData;
  }

  public CoinbaseCustodyApiActivity billingAddressChangeData(CoinbaseCustodyApiBillingAddressChangeAuditData billingAddressChangeData) {
    this.billingAddressChangeData = billingAddressChangeData;
    return this;
  }

   /**
   * Get billingAddressChangeData
   * @return billingAddressChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiBillingAddressChangeAuditData getBillingAddressChangeData() {
    return billingAddressChangeData;
  }

  public void setBillingAddressChangeData(CoinbaseCustodyApiBillingAddressChangeAuditData billingAddressChangeData) {
    this.billingAddressChangeData = billingAddressChangeData;
  }

  public CoinbaseCustodyApiActivity apiKeyChangeData(CoinbaseCustodyApiApiKeyChangeAuditData apiKeyChangeData) {
    this.apiKeyChangeData = apiKeyChangeData;
    return this;
  }

   /**
   * Get apiKeyChangeData
   * @return apiKeyChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiApiKeyChangeAuditData getApiKeyChangeData() {
    return apiKeyChangeData;
  }

  public void setApiKeyChangeData(CoinbaseCustodyApiApiKeyChangeAuditData apiKeyChangeData) {
    this.apiKeyChangeData = apiKeyChangeData;
  }

  public CoinbaseCustodyApiActivity adminChangeRequestData(CoinbaseCustodyApiAdminChangeRequestAuditData adminChangeRequestData) {
    this.adminChangeRequestData = adminChangeRequestData;
    return this;
  }

   /**
   * Get adminChangeRequestData
   * @return adminChangeRequestData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiAdminChangeRequestAuditData getAdminChangeRequestData() {
    return adminChangeRequestData;
  }

  public void setAdminChangeRequestData(CoinbaseCustodyApiAdminChangeRequestAuditData adminChangeRequestData) {
    this.adminChangeRequestData = adminChangeRequestData;
  }

  public CoinbaseCustodyApiActivity paymentMethodChangeData(CoinbaseCustodyApiPaymentMethodChangeAuditData paymentMethodChangeData) {
    this.paymentMethodChangeData = paymentMethodChangeData;
    return this;
  }

   /**
   * Get paymentMethodChangeData
   * @return paymentMethodChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiPaymentMethodChangeAuditData getPaymentMethodChangeData() {
    return paymentMethodChangeData;
  }

  public void setPaymentMethodChangeData(CoinbaseCustodyApiPaymentMethodChangeAuditData paymentMethodChangeData) {
    this.paymentMethodChangeData = paymentMethodChangeData;
  }

  public CoinbaseCustodyApiActivity userChangeRequestData(CoinbaseCustodyApiUserChangeRequestAuditData userChangeRequestData) {
    this.userChangeRequestData = userChangeRequestData;
    return this;
  }

   /**
   * Get userChangeRequestData
   * @return userChangeRequestData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeRequestAuditData getUserChangeRequestData() {
    return userChangeRequestData;
  }

  public void setUserChangeRequestData(CoinbaseCustodyApiUserChangeRequestAuditData userChangeRequestData) {
    this.userChangeRequestData = userChangeRequestData;
  }

  public CoinbaseCustodyApiActivity timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public CoinbaseCustodyApiActivity approveBy(String approveBy) {
    this.approveBy = approveBy;
    return this;
  }

   /**
   * Get approveBy
   * @return approveBy
  **/
  @ApiModelProperty(value = "")
  public String getApproveBy() {
    return approveBy;
  }

  public void setApproveBy(String approveBy) {
    this.approveBy = approveBy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiActivity coinbaseCustodyApiActivity = (CoinbaseCustodyApiActivity) o;
    return Objects.equals(this.id, coinbaseCustodyApiActivity.id) &&
        Objects.equals(this.auditableType, coinbaseCustodyApiActivity.auditableType) &&
        Objects.equals(this.auditableId, coinbaseCustodyApiActivity.auditableId) &&
        Objects.equals(this.auditableState, coinbaseCustodyApiActivity.auditableState) &&
        Objects.equals(this.state, coinbaseCustodyApiActivity.state) &&
        Objects.equals(this.user, coinbaseCustodyApiActivity.user) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiActivity.createdAt) &&
        Objects.equals(this.humanLastUpdated, coinbaseCustodyApiActivity.humanLastUpdated) &&
        Objects.equals(this.secondaryAuditableType, coinbaseCustodyApiActivity.secondaryAuditableType) &&
        Objects.equals(this.timeRemaining, coinbaseCustodyApiActivity.timeRemaining) &&
        Objects.equals(this.title, coinbaseCustodyApiActivity.title) &&
        Objects.equals(this.approvedAt, coinbaseCustodyApiActivity.approvedAt) &&
        Objects.equals(this.expiredAt, coinbaseCustodyApiActivity.expiredAt) &&
        Objects.equals(this.timelineEvents, coinbaseCustodyApiActivity.timelineEvents) &&
        Objects.equals(this.currency, coinbaseCustodyApiActivity.currency) &&
        Objects.equals(this.action, coinbaseCustodyApiActivity.action) &&
        Objects.equals(this.standardValue, coinbaseCustodyApiActivity.standardValue) &&
        Objects.equals(this.walletChangeValue, coinbaseCustodyApiActivity.walletChangeValue) &&
        Objects.equals(this.userChangeValue, coinbaseCustodyApiActivity.userChangeValue) &&
        Objects.equals(this.settingsChangeValue, coinbaseCustodyApiActivity.settingsChangeValue) &&
        Objects.equals(this.redoPlanValue, coinbaseCustodyApiActivity.redoPlanValue) &&
        Objects.equals(this.withdrawalAddressChangeValue, coinbaseCustodyApiActivity.withdrawalAddressChangeValue) &&
        Objects.equals(this.transactionValue, coinbaseCustodyApiActivity.transactionValue) &&
        Objects.equals(this.emailListChangeValue, coinbaseCustodyApiActivity.emailListChangeValue) &&
        Objects.equals(this.documentSignatureValue, coinbaseCustodyApiActivity.documentSignatureValue) &&
        Objects.equals(this.billingPreferenceChangeValue, coinbaseCustodyApiActivity.billingPreferenceChangeValue) &&
        Objects.equals(this.billingAddressChangeValue, coinbaseCustodyApiActivity.billingAddressChangeValue) &&
        Objects.equals(this.apiKeyChangeValue, coinbaseCustodyApiActivity.apiKeyChangeValue) &&
        Objects.equals(this.adminChangeRequestValue, coinbaseCustodyApiActivity.adminChangeRequestValue) &&
        Objects.equals(this.paymentMethodChangeValue, coinbaseCustodyApiActivity.paymentMethodChangeValue) &&
        Objects.equals(this.walletChangeData, coinbaseCustodyApiActivity.walletChangeData) &&
        Objects.equals(this.userChangeData, coinbaseCustodyApiActivity.userChangeData) &&
        Objects.equals(this.smartContractReleaseData, coinbaseCustodyApiActivity.smartContractReleaseData) &&
        Objects.equals(this.settingsChangeData, coinbaseCustodyApiActivity.settingsChangeData) &&
        Objects.equals(this.redoPlanData, coinbaseCustodyApiActivity.redoPlanData) &&
        Objects.equals(this.withdrawalAddressChangeData, coinbaseCustodyApiActivity.withdrawalAddressChangeData) &&
        Objects.equals(this.transactionData, coinbaseCustodyApiActivity.transactionData) &&
        Objects.equals(this.invitationData, coinbaseCustodyApiActivity.invitationData) &&
        Objects.equals(this.governanceVoteData, coinbaseCustodyApiActivity.governanceVoteData) &&
        Objects.equals(this.emailListChangeData, coinbaseCustodyApiActivity.emailListChangeData) &&
        Objects.equals(this.documentSignatureData, coinbaseCustodyApiActivity.documentSignatureData) &&
        Objects.equals(this.billingPreferenceChangeData, coinbaseCustodyApiActivity.billingPreferenceChangeData) &&
        Objects.equals(this.billingAddressChangeData, coinbaseCustodyApiActivity.billingAddressChangeData) &&
        Objects.equals(this.apiKeyChangeData, coinbaseCustodyApiActivity.apiKeyChangeData) &&
        Objects.equals(this.adminChangeRequestData, coinbaseCustodyApiActivity.adminChangeRequestData) &&
        Objects.equals(this.paymentMethodChangeData, coinbaseCustodyApiActivity.paymentMethodChangeData) &&
        Objects.equals(this.userChangeRequestData, coinbaseCustodyApiActivity.userChangeRequestData) &&
        Objects.equals(this.timestamp, coinbaseCustodyApiActivity.timestamp) &&
        Objects.equals(this.approveBy, coinbaseCustodyApiActivity.approveBy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, auditableType, auditableId, auditableState, state, user, createdAt, humanLastUpdated, secondaryAuditableType, timeRemaining, title, approvedAt, expiredAt, timelineEvents, currency, action, standardValue, walletChangeValue, userChangeValue, settingsChangeValue, redoPlanValue, withdrawalAddressChangeValue, transactionValue, emailListChangeValue, documentSignatureValue, billingPreferenceChangeValue, billingAddressChangeValue, apiKeyChangeValue, adminChangeRequestValue, paymentMethodChangeValue, walletChangeData, userChangeData, smartContractReleaseData, settingsChangeData, redoPlanData, withdrawalAddressChangeData, transactionData, invitationData, governanceVoteData, emailListChangeData, documentSignatureData, billingPreferenceChangeData, billingAddressChangeData, apiKeyChangeData, adminChangeRequestData, paymentMethodChangeData, userChangeRequestData, timestamp, approveBy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiActivity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    auditableType: ").append(toIndentedString(auditableType)).append("\n");
    sb.append("    auditableId: ").append(toIndentedString(auditableId)).append("\n");
    sb.append("    auditableState: ").append(toIndentedString(auditableState)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    humanLastUpdated: ").append(toIndentedString(humanLastUpdated)).append("\n");
    sb.append("    secondaryAuditableType: ").append(toIndentedString(secondaryAuditableType)).append("\n");
    sb.append("    timeRemaining: ").append(toIndentedString(timeRemaining)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    approvedAt: ").append(toIndentedString(approvedAt)).append("\n");
    sb.append("    expiredAt: ").append(toIndentedString(expiredAt)).append("\n");
    sb.append("    timelineEvents: ").append(toIndentedString(timelineEvents)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    action: ").append(toIndentedString(action)).append("\n");
    sb.append("    standardValue: ").append(toIndentedString(standardValue)).append("\n");
    sb.append("    walletChangeValue: ").append(toIndentedString(walletChangeValue)).append("\n");
    sb.append("    userChangeValue: ").append(toIndentedString(userChangeValue)).append("\n");
    sb.append("    settingsChangeValue: ").append(toIndentedString(settingsChangeValue)).append("\n");
    sb.append("    redoPlanValue: ").append(toIndentedString(redoPlanValue)).append("\n");
    sb.append("    withdrawalAddressChangeValue: ").append(toIndentedString(withdrawalAddressChangeValue)).append("\n");
    sb.append("    transactionValue: ").append(toIndentedString(transactionValue)).append("\n");
    sb.append("    emailListChangeValue: ").append(toIndentedString(emailListChangeValue)).append("\n");
    sb.append("    documentSignatureValue: ").append(toIndentedString(documentSignatureValue)).append("\n");
    sb.append("    billingPreferenceChangeValue: ").append(toIndentedString(billingPreferenceChangeValue)).append("\n");
    sb.append("    billingAddressChangeValue: ").append(toIndentedString(billingAddressChangeValue)).append("\n");
    sb.append("    apiKeyChangeValue: ").append(toIndentedString(apiKeyChangeValue)).append("\n");
    sb.append("    adminChangeRequestValue: ").append(toIndentedString(adminChangeRequestValue)).append("\n");
    sb.append("    paymentMethodChangeValue: ").append(toIndentedString(paymentMethodChangeValue)).append("\n");
    sb.append("    walletChangeData: ").append(toIndentedString(walletChangeData)).append("\n");
    sb.append("    userChangeData: ").append(toIndentedString(userChangeData)).append("\n");
    sb.append("    smartContractReleaseData: ").append(toIndentedString(smartContractReleaseData)).append("\n");
    sb.append("    settingsChangeData: ").append(toIndentedString(settingsChangeData)).append("\n");
    sb.append("    redoPlanData: ").append(toIndentedString(redoPlanData)).append("\n");
    sb.append("    withdrawalAddressChangeData: ").append(toIndentedString(withdrawalAddressChangeData)).append("\n");
    sb.append("    transactionData: ").append(toIndentedString(transactionData)).append("\n");
    sb.append("    invitationData: ").append(toIndentedString(invitationData)).append("\n");
    sb.append("    governanceVoteData: ").append(toIndentedString(governanceVoteData)).append("\n");
    sb.append("    emailListChangeData: ").append(toIndentedString(emailListChangeData)).append("\n");
    sb.append("    documentSignatureData: ").append(toIndentedString(documentSignatureData)).append("\n");
    sb.append("    billingPreferenceChangeData: ").append(toIndentedString(billingPreferenceChangeData)).append("\n");
    sb.append("    billingAddressChangeData: ").append(toIndentedString(billingAddressChangeData)).append("\n");
    sb.append("    apiKeyChangeData: ").append(toIndentedString(apiKeyChangeData)).append("\n");
    sb.append("    adminChangeRequestData: ").append(toIndentedString(adminChangeRequestData)).append("\n");
    sb.append("    paymentMethodChangeData: ").append(toIndentedString(paymentMethodChangeData)).append("\n");
    sb.append("    userChangeRequestData: ").append(toIndentedString(userChangeRequestData)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    approveBy: ").append(toIndentedString(approveBy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

