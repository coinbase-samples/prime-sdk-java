/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAssociation;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3Device;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiDeviceGroup
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiDeviceGroup {
  @SerializedName("id")
  private String id = null;

  @SerializedName("devices")
  private List<CoinbaseEngPrimeApiApiWeb3Device> devices = null;

  @SerializedName("associations")
  private List<CoinbaseEngPrimeApiApiAssociation> associations = null;

  public CoinbaseEngPrimeApiApiDeviceGroup id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseEngPrimeApiApiDeviceGroup devices(List<CoinbaseEngPrimeApiApiWeb3Device> devices) {
    this.devices = devices;
    return this;
  }

  public CoinbaseEngPrimeApiApiDeviceGroup addDevicesItem(CoinbaseEngPrimeApiApiWeb3Device devicesItem) {
    if (this.devices == null) {
      this.devices = new ArrayList<CoinbaseEngPrimeApiApiWeb3Device>();
    }
    this.devices.add(devicesItem);
    return this;
  }

   /**
   * Get devices
   * @return devices
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiWeb3Device> getDevices() {
    return devices;
  }

  public void setDevices(List<CoinbaseEngPrimeApiApiWeb3Device> devices) {
    this.devices = devices;
  }

  public CoinbaseEngPrimeApiApiDeviceGroup associations(List<CoinbaseEngPrimeApiApiAssociation> associations) {
    this.associations = associations;
    return this;
  }

  public CoinbaseEngPrimeApiApiDeviceGroup addAssociationsItem(CoinbaseEngPrimeApiApiAssociation associationsItem) {
    if (this.associations == null) {
      this.associations = new ArrayList<CoinbaseEngPrimeApiApiAssociation>();
    }
    this.associations.add(associationsItem);
    return this;
  }

   /**
   * Get associations
   * @return associations
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiAssociation> getAssociations() {
    return associations;
  }

  public void setAssociations(List<CoinbaseEngPrimeApiApiAssociation> associations) {
    this.associations = associations;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiDeviceGroup coinbaseEngPrimeApiApiDeviceGroup = (CoinbaseEngPrimeApiApiDeviceGroup) o;
    return Objects.equals(this.id, coinbaseEngPrimeApiApiDeviceGroup.id) &&
        Objects.equals(this.devices, coinbaseEngPrimeApiApiDeviceGroup.devices) &&
        Objects.equals(this.associations, coinbaseEngPrimeApiApiDeviceGroup.associations);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, devices, associations);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiDeviceGroup {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    devices: ").append(toIndentedString(devices)).append("\n");
    sb.append("    associations: ").append(toIndentedString(associations)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

