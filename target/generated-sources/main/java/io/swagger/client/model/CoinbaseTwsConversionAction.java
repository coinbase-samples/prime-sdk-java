/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseTwsConversionAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsConversionAction {
  @SerializedName("source_asset")
  private String sourceAsset = null;

  @SerializedName("destination_asset")
  private String destinationAsset = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("destination_wallet_id")
  private String destinationWalletId = null;

  public CoinbaseTwsConversionAction sourceAsset(String sourceAsset) {
    this.sourceAsset = sourceAsset;
    return this;
  }

   /**
   * Source asset for conversion
   * @return sourceAsset
  **/
  @ApiModelProperty(value = "Source asset for conversion")
  public String getSourceAsset() {
    return sourceAsset;
  }

  public void setSourceAsset(String sourceAsset) {
    this.sourceAsset = sourceAsset;
  }

  public CoinbaseTwsConversionAction destinationAsset(String destinationAsset) {
    this.destinationAsset = destinationAsset;
    return this;
  }

   /**
   * Destination asset for conversion
   * @return destinationAsset
  **/
  @ApiModelProperty(value = "Destination asset for conversion")
  public String getDestinationAsset() {
    return destinationAsset;
  }

  public void setDestinationAsset(String destinationAsset) {
    this.destinationAsset = destinationAsset;
  }

  public CoinbaseTwsConversionAction amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Conversion amount
   * @return amount
  **/
  @ApiModelProperty(value = "Conversion amount")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseTwsConversionAction destinationWalletId(String destinationWalletId) {
    this.destinationWalletId = destinationWalletId;
    return this;
  }

   /**
   * Destination wallet for conversion
   * @return destinationWalletId
  **/
  @ApiModelProperty(value = "Destination wallet for conversion")
  public String getDestinationWalletId() {
    return destinationWalletId;
  }

  public void setDestinationWalletId(String destinationWalletId) {
    this.destinationWalletId = destinationWalletId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsConversionAction coinbaseTwsConversionAction = (CoinbaseTwsConversionAction) o;
    return Objects.equals(this.sourceAsset, coinbaseTwsConversionAction.sourceAsset) &&
        Objects.equals(this.destinationAsset, coinbaseTwsConversionAction.destinationAsset) &&
        Objects.equals(this.amount, coinbaseTwsConversionAction.amount) &&
        Objects.equals(this.destinationWalletId, coinbaseTwsConversionAction.destinationWalletId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceAsset, destinationAsset, amount, destinationWalletId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsConversionAction {\n");
    
    sb.append("    sourceAsset: ").append(toIndentedString(sourceAsset)).append("\n");
    sb.append("    destinationAsset: ").append(toIndentedString(destinationAsset)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    destinationWalletId: ").append(toIndentedString(destinationWalletId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

