/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiAccountMetadata;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiActivityCategory;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiActivitySecondaryType;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiActivityStatus;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiActivityType;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiAllocationMetadata;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiConsensusMetadata;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiHierarchyType;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiOrderExecutionMetadata;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiTimeline;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiTransactionMetadata;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiUserAction;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiUserChangeMetadata;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiUserInformation;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeActivityApiActivity
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeActivityApiActivity {
  @SerializedName("id")
  private String id = null;

  @SerializedName("reference_id")
  private String referenceId = null;

  @SerializedName("category")
  private CoinbaseEngPrimeActivityApiActivityCategory category = null;

  @SerializedName("type")
  private CoinbaseEngPrimeActivityApiActivityType type = null;

  @SerializedName("secondary_type")
  private CoinbaseEngPrimeActivityApiActivitySecondaryType secondaryType = null;

  @SerializedName("status")
  private CoinbaseEngPrimeActivityApiActivityStatus status = null;

  @SerializedName("created_by_user_id")
  private String createdByUserId = null;

  @SerializedName("title")
  private String title = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("currency_symbols")
  private List<String> currencySymbols = new ArrayList<String>();

  @SerializedName("internal")
  private Boolean internal = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("user_actions")
  private List<CoinbaseEngPrimeActivityApiUserAction> userActions = new ArrayList<CoinbaseEngPrimeActivityApiUserAction>();

  @SerializedName("order_execution_metadata")
  private CoinbaseEngPrimeActivityApiOrderExecutionMetadata orderExecutionMetadata = null;

  @SerializedName("consensus_metadata")
  private CoinbaseEngPrimeActivityApiConsensusMetadata consensusMetadata = null;

  @SerializedName("transaction_metadata")
  private CoinbaseEngPrimeActivityApiTransactionMetadata transactionMetadata = null;

  @SerializedName("account_metadata")
  private CoinbaseEngPrimeActivityApiAccountMetadata accountMetadata = null;

  @SerializedName("allocation_metadata")
  private CoinbaseEngPrimeActivityApiAllocationMetadata allocationMetadata = null;

  @SerializedName("user_change_metadata")
  private CoinbaseEngPrimeActivityApiUserChangeMetadata userChangeMetadata = null;

  @SerializedName("organization_id")
  private String organizationId = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("reference_type")
  private String referenceType = null;

  @SerializedName("status_updated_at")
  private String statusUpdatedAt = null;

  @SerializedName("created_by_user_info")
  private CoinbaseEngPrimeActivityApiUserInformation createdByUserInfo = null;

  @SerializedName("timelines")
  private List<CoinbaseEngPrimeActivityApiTimeline> timelines = null;

  @SerializedName("hierarchy_type")
  private CoinbaseEngPrimeActivityApiHierarchyType hierarchyType = null;

  public CoinbaseEngPrimeActivityApiActivity id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Activity ID.
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Activity ID.")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseEngPrimeActivityApiActivity referenceId(String referenceId) {
    this.referenceId = referenceId;
    return this;
  }

   /**
   * ID of the model the Activity was generated for.
   * @return referenceId
  **/
  @ApiModelProperty(required = true, value = "ID of the model the Activity was generated for.")
  public String getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }

  public CoinbaseEngPrimeActivityApiActivity category(CoinbaseEngPrimeActivityApiActivityCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Activity Category.
   * @return category
  **/
  @ApiModelProperty(required = true, value = "Activity Category.")
  public CoinbaseEngPrimeActivityApiActivityCategory getCategory() {
    return category;
  }

  public void setCategory(CoinbaseEngPrimeActivityApiActivityCategory category) {
    this.category = category;
  }

  public CoinbaseEngPrimeActivityApiActivity type(CoinbaseEngPrimeActivityApiActivityType type) {
    this.type = type;
    return this;
  }

   /**
   * Activity Type.
   * @return type
  **/
  @ApiModelProperty(required = true, value = "Activity Type.")
  public CoinbaseEngPrimeActivityApiActivityType getType() {
    return type;
  }

  public void setType(CoinbaseEngPrimeActivityApiActivityType type) {
    this.type = type;
  }

  public CoinbaseEngPrimeActivityApiActivity secondaryType(CoinbaseEngPrimeActivityApiActivitySecondaryType secondaryType) {
    this.secondaryType = secondaryType;
    return this;
  }

   /**
   * Type used specifically for trades indicating buy or sell.
   * @return secondaryType
  **/
  @ApiModelProperty(value = "Type used specifically for trades indicating buy or sell.")
  public CoinbaseEngPrimeActivityApiActivitySecondaryType getSecondaryType() {
    return secondaryType;
  }

  public void setSecondaryType(CoinbaseEngPrimeActivityApiActivitySecondaryType secondaryType) {
    this.secondaryType = secondaryType;
  }

  public CoinbaseEngPrimeActivityApiActivity status(CoinbaseEngPrimeActivityApiActivityStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Activity Status.
   * @return status
  **/
  @ApiModelProperty(required = true, value = "Activity Status.")
  public CoinbaseEngPrimeActivityApiActivityStatus getStatus() {
    return status;
  }

  public void setStatus(CoinbaseEngPrimeActivityApiActivityStatus status) {
    this.status = status;
  }

  public CoinbaseEngPrimeActivityApiActivity createdByUserId(String createdByUserId) {
    this.createdByUserId = createdByUserId;
    return this;
  }

   /**
   * @deprecated ID of the user who created the Activity.
   * @return createdByUserId
  **/
  @ApiModelProperty(required = true, value = "@deprecated ID of the user who created the Activity.")
  public String getCreatedByUserId() {
    return createdByUserId;
  }

  public void setCreatedByUserId(String createdByUserId) {
    this.createdByUserId = createdByUserId;
  }

  public CoinbaseEngPrimeActivityApiActivity title(String title) {
    this.title = title;
    return this;
  }

   /**
   * Title of the Activity.
   * @return title
  **/
  @ApiModelProperty(required = true, value = "Title of the Activity.")
  public String getTitle() {
    return title;
  }

  public void setTitle(String title) {
    this.title = title;
  }

  public CoinbaseEngPrimeActivityApiActivity description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of the Activity.
   * @return description
  **/
  @ApiModelProperty(required = true, value = "Description of the Activity.")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CoinbaseEngPrimeActivityApiActivity currencySymbols(List<String> currencySymbols) {
    this.currencySymbols = currencySymbols;
    return this;
  }

  public CoinbaseEngPrimeActivityApiActivity addCurrencySymbolsItem(String currencySymbolsItem) {
    this.currencySymbols.add(currencySymbolsItem);
    return this;
  }

   /**
   * Currency symbols related to the Activity.
   * @return currencySymbols
  **/
  @ApiModelProperty(required = true, value = "Currency symbols related to the Activity.")
  public List<String> getCurrencySymbols() {
    return currencySymbols;
  }

  public void setCurrencySymbols(List<String> currencySymbols) {
    this.currencySymbols = currencySymbols;
  }

  public CoinbaseEngPrimeActivityApiActivity internal(Boolean internal) {
    this.internal = internal;
    return this;
  }

   /**
   * Whether the Activity is an internal activity.
   * @return internal
  **/
  @ApiModelProperty(value = "Whether the Activity is an internal activity.")
  public Boolean isInternal() {
    return internal;
  }

  public void setInternal(Boolean internal) {
    this.internal = internal;
  }

  public CoinbaseEngPrimeActivityApiActivity createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Timestamp for when the Activity was created.
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "Timestamp for when the Activity was created.")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseEngPrimeActivityApiActivity userActions(List<CoinbaseEngPrimeActivityApiUserAction> userActions) {
    this.userActions = userActions;
    return this;
  }

  public CoinbaseEngPrimeActivityApiActivity addUserActionsItem(CoinbaseEngPrimeActivityApiUserAction userActionsItem) {
    this.userActions.add(userActionsItem);
    return this;
  }

   /**
   * Actions related to the Activity.
   * @return userActions
  **/
  @ApiModelProperty(required = true, value = "Actions related to the Activity.")
  public List<CoinbaseEngPrimeActivityApiUserAction> getUserActions() {
    return userActions;
  }

  public void setUserActions(List<CoinbaseEngPrimeActivityApiUserAction> userActions) {
    this.userActions = userActions;
  }

  public CoinbaseEngPrimeActivityApiActivity orderExecutionMetadata(CoinbaseEngPrimeActivityApiOrderExecutionMetadata orderExecutionMetadata) {
    this.orderExecutionMetadata = orderExecutionMetadata;
    return this;
  }

   /**
   * Trade related metadata.
   * @return orderExecutionMetadata
  **/
  @ApiModelProperty(value = "Trade related metadata.")
  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata getOrderExecutionMetadata() {
    return orderExecutionMetadata;
  }

  public void setOrderExecutionMetadata(CoinbaseEngPrimeActivityApiOrderExecutionMetadata orderExecutionMetadata) {
    this.orderExecutionMetadata = orderExecutionMetadata;
  }

  public CoinbaseEngPrimeActivityApiActivity consensusMetadata(CoinbaseEngPrimeActivityApiConsensusMetadata consensusMetadata) {
    this.consensusMetadata = consensusMetadata;
    return this;
  }

   /**
   * Consensus related metadata.
   * @return consensusMetadata
  **/
  @ApiModelProperty(value = "Consensus related metadata.")
  public CoinbaseEngPrimeActivityApiConsensusMetadata getConsensusMetadata() {
    return consensusMetadata;
  }

  public void setConsensusMetadata(CoinbaseEngPrimeActivityApiConsensusMetadata consensusMetadata) {
    this.consensusMetadata = consensusMetadata;
  }

  public CoinbaseEngPrimeActivityApiActivity transactionMetadata(CoinbaseEngPrimeActivityApiTransactionMetadata transactionMetadata) {
    this.transactionMetadata = transactionMetadata;
    return this;
  }

   /**
   * Transaction activity related metadata.
   * @return transactionMetadata
  **/
  @ApiModelProperty(value = "Transaction activity related metadata.")
  public CoinbaseEngPrimeActivityApiTransactionMetadata getTransactionMetadata() {
    return transactionMetadata;
  }

  public void setTransactionMetadata(CoinbaseEngPrimeActivityApiTransactionMetadata transactionMetadata) {
    this.transactionMetadata = transactionMetadata;
  }

  public CoinbaseEngPrimeActivityApiActivity accountMetadata(CoinbaseEngPrimeActivityApiAccountMetadata accountMetadata) {
    this.accountMetadata = accountMetadata;
    return this;
  }

   /**
   * Account activity related metadata.
   * @return accountMetadata
  **/
  @ApiModelProperty(value = "Account activity related metadata.")
  public CoinbaseEngPrimeActivityApiAccountMetadata getAccountMetadata() {
    return accountMetadata;
  }

  public void setAccountMetadata(CoinbaseEngPrimeActivityApiAccountMetadata accountMetadata) {
    this.accountMetadata = accountMetadata;
  }

  public CoinbaseEngPrimeActivityApiActivity allocationMetadata(CoinbaseEngPrimeActivityApiAllocationMetadata allocationMetadata) {
    this.allocationMetadata = allocationMetadata;
    return this;
  }

   /**
   * Allocation activity related metadata.
   * @return allocationMetadata
  **/
  @ApiModelProperty(value = "Allocation activity related metadata.")
  public CoinbaseEngPrimeActivityApiAllocationMetadata getAllocationMetadata() {
    return allocationMetadata;
  }

  public void setAllocationMetadata(CoinbaseEngPrimeActivityApiAllocationMetadata allocationMetadata) {
    this.allocationMetadata = allocationMetadata;
  }

  public CoinbaseEngPrimeActivityApiActivity userChangeMetadata(CoinbaseEngPrimeActivityApiUserChangeMetadata userChangeMetadata) {
    this.userChangeMetadata = userChangeMetadata;
    return this;
  }

   /**
   * User change activity related metadata.
   * @return userChangeMetadata
  **/
  @ApiModelProperty(value = "User change activity related metadata.")
  public CoinbaseEngPrimeActivityApiUserChangeMetadata getUserChangeMetadata() {
    return userChangeMetadata;
  }

  public void setUserChangeMetadata(CoinbaseEngPrimeActivityApiUserChangeMetadata userChangeMetadata) {
    this.userChangeMetadata = userChangeMetadata;
  }

  public CoinbaseEngPrimeActivityApiActivity organizationId(String organizationId) {
    this.organizationId = organizationId;
    return this;
  }

   /**
   * Organization ID of the Activity.
   * @return organizationId
  **/
  @ApiModelProperty(value = "Organization ID of the Activity.")
  public String getOrganizationId() {
    return organizationId;
  }

  public void setOrganizationId(String organizationId) {
    this.organizationId = organizationId;
  }

  public CoinbaseEngPrimeActivityApiActivity portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Portfolio ID of the Activity.
   * @return portfolioId
  **/
  @ApiModelProperty(value = "Portfolio ID of the Activity.")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseEngPrimeActivityApiActivity referenceType(String referenceType) {
    this.referenceType = referenceType;
    return this;
  }

   /**
   * The model class for the Activity
   * @return referenceType
  **/
  @ApiModelProperty(required = true, value = "The model class for the Activity")
  public String getReferenceType() {
    return referenceType;
  }

  public void setReferenceType(String referenceType) {
    this.referenceType = referenceType;
  }

  public CoinbaseEngPrimeActivityApiActivity statusUpdatedAt(String statusUpdatedAt) {
    this.statusUpdatedAt = statusUpdatedAt;
    return this;
  }

   /**
   * Timestamp for when the ActivityStatus has changed.
   * @return statusUpdatedAt
  **/
  @ApiModelProperty(required = true, value = "Timestamp for when the ActivityStatus has changed.")
  public String getStatusUpdatedAt() {
    return statusUpdatedAt;
  }

  public void setStatusUpdatedAt(String statusUpdatedAt) {
    this.statusUpdatedAt = statusUpdatedAt;
  }

  public CoinbaseEngPrimeActivityApiActivity createdByUserInfo(CoinbaseEngPrimeActivityApiUserInformation createdByUserInfo) {
    this.createdByUserInfo = createdByUserInfo;
    return this;
  }

   /**
   * Info for the user who created the activity
   * @return createdByUserInfo
  **/
  @ApiModelProperty(value = "Info for the user who created the activity")
  public CoinbaseEngPrimeActivityApiUserInformation getCreatedByUserInfo() {
    return createdByUserInfo;
  }

  public void setCreatedByUserInfo(CoinbaseEngPrimeActivityApiUserInformation createdByUserInfo) {
    this.createdByUserInfo = createdByUserInfo;
  }

  public CoinbaseEngPrimeActivityApiActivity timelines(List<CoinbaseEngPrimeActivityApiTimeline> timelines) {
    this.timelines = timelines;
    return this;
  }

  public CoinbaseEngPrimeActivityApiActivity addTimelinesItem(CoinbaseEngPrimeActivityApiTimeline timelinesItem) {
    if (this.timelines == null) {
      this.timelines = new ArrayList<CoinbaseEngPrimeActivityApiTimeline>();
    }
    this.timelines.add(timelinesItem);
    return this;
  }

   /**
   * Timelines related to the Activity.
   * @return timelines
  **/
  @ApiModelProperty(value = "Timelines related to the Activity.")
  public List<CoinbaseEngPrimeActivityApiTimeline> getTimelines() {
    return timelines;
  }

  public void setTimelines(List<CoinbaseEngPrimeActivityApiTimeline> timelines) {
    this.timelines = timelines;
  }

  public CoinbaseEngPrimeActivityApiActivity hierarchyType(CoinbaseEngPrimeActivityApiHierarchyType hierarchyType) {
    this.hierarchyType = hierarchyType;
    return this;
  }

   /**
   * Hierarchy type for an Activity.
   * @return hierarchyType
  **/
  @ApiModelProperty(value = "Hierarchy type for an Activity.")
  public CoinbaseEngPrimeActivityApiHierarchyType getHierarchyType() {
    return hierarchyType;
  }

  public void setHierarchyType(CoinbaseEngPrimeActivityApiHierarchyType hierarchyType) {
    this.hierarchyType = hierarchyType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeActivityApiActivity coinbaseEngPrimeActivityApiActivity = (CoinbaseEngPrimeActivityApiActivity) o;
    return Objects.equals(this.id, coinbaseEngPrimeActivityApiActivity.id) &&
        Objects.equals(this.referenceId, coinbaseEngPrimeActivityApiActivity.referenceId) &&
        Objects.equals(this.category, coinbaseEngPrimeActivityApiActivity.category) &&
        Objects.equals(this.type, coinbaseEngPrimeActivityApiActivity.type) &&
        Objects.equals(this.secondaryType, coinbaseEngPrimeActivityApiActivity.secondaryType) &&
        Objects.equals(this.status, coinbaseEngPrimeActivityApiActivity.status) &&
        Objects.equals(this.createdByUserId, coinbaseEngPrimeActivityApiActivity.createdByUserId) &&
        Objects.equals(this.title, coinbaseEngPrimeActivityApiActivity.title) &&
        Objects.equals(this.description, coinbaseEngPrimeActivityApiActivity.description) &&
        Objects.equals(this.currencySymbols, coinbaseEngPrimeActivityApiActivity.currencySymbols) &&
        Objects.equals(this.internal, coinbaseEngPrimeActivityApiActivity.internal) &&
        Objects.equals(this.createdAt, coinbaseEngPrimeActivityApiActivity.createdAt) &&
        Objects.equals(this.userActions, coinbaseEngPrimeActivityApiActivity.userActions) &&
        Objects.equals(this.orderExecutionMetadata, coinbaseEngPrimeActivityApiActivity.orderExecutionMetadata) &&
        Objects.equals(this.consensusMetadata, coinbaseEngPrimeActivityApiActivity.consensusMetadata) &&
        Objects.equals(this.transactionMetadata, coinbaseEngPrimeActivityApiActivity.transactionMetadata) &&
        Objects.equals(this.accountMetadata, coinbaseEngPrimeActivityApiActivity.accountMetadata) &&
        Objects.equals(this.allocationMetadata, coinbaseEngPrimeActivityApiActivity.allocationMetadata) &&
        Objects.equals(this.userChangeMetadata, coinbaseEngPrimeActivityApiActivity.userChangeMetadata) &&
        Objects.equals(this.organizationId, coinbaseEngPrimeActivityApiActivity.organizationId) &&
        Objects.equals(this.portfolioId, coinbaseEngPrimeActivityApiActivity.portfolioId) &&
        Objects.equals(this.referenceType, coinbaseEngPrimeActivityApiActivity.referenceType) &&
        Objects.equals(this.statusUpdatedAt, coinbaseEngPrimeActivityApiActivity.statusUpdatedAt) &&
        Objects.equals(this.createdByUserInfo, coinbaseEngPrimeActivityApiActivity.createdByUserInfo) &&
        Objects.equals(this.timelines, coinbaseEngPrimeActivityApiActivity.timelines) &&
        Objects.equals(this.hierarchyType, coinbaseEngPrimeActivityApiActivity.hierarchyType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, referenceId, category, type, secondaryType, status, createdByUserId, title, description, currencySymbols, internal, createdAt, userActions, orderExecutionMetadata, consensusMetadata, transactionMetadata, accountMetadata, allocationMetadata, userChangeMetadata, organizationId, portfolioId, referenceType, statusUpdatedAt, createdByUserInfo, timelines, hierarchyType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeActivityApiActivity {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    secondaryType: ").append(toIndentedString(secondaryType)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    createdByUserId: ").append(toIndentedString(createdByUserId)).append("\n");
    sb.append("    title: ").append(toIndentedString(title)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    currencySymbols: ").append(toIndentedString(currencySymbols)).append("\n");
    sb.append("    internal: ").append(toIndentedString(internal)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    userActions: ").append(toIndentedString(userActions)).append("\n");
    sb.append("    orderExecutionMetadata: ").append(toIndentedString(orderExecutionMetadata)).append("\n");
    sb.append("    consensusMetadata: ").append(toIndentedString(consensusMetadata)).append("\n");
    sb.append("    transactionMetadata: ").append(toIndentedString(transactionMetadata)).append("\n");
    sb.append("    accountMetadata: ").append(toIndentedString(accountMetadata)).append("\n");
    sb.append("    allocationMetadata: ").append(toIndentedString(allocationMetadata)).append("\n");
    sb.append("    userChangeMetadata: ").append(toIndentedString(userChangeMetadata)).append("\n");
    sb.append("    organizationId: ").append(toIndentedString(organizationId)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    referenceType: ").append(toIndentedString(referenceType)).append("\n");
    sb.append("    statusUpdatedAt: ").append(toIndentedString(statusUpdatedAt)).append("\n");
    sb.append("    createdByUserInfo: ").append(toIndentedString(createdByUserInfo)).append("\n");
    sb.append("    timelines: ").append(toIndentedString(timelines)).append("\n");
    sb.append("    hierarchyType: ").append(toIndentedString(hierarchyType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

