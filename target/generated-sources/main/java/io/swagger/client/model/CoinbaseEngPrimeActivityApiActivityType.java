/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import io.swagger.annotations.ApiModel;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * - ACTIVITY_TYPE_PRINCIPAL_OUT: Lending specific activity types  - ACTIVITY_TYPE_BLOCK_TRADE: Block trades  - ACTIVITY_TYPE_USER_CHANGE_REQUEST_NO_PAS: No pas integration for user change request  - ACTIVITY_TYPE_SHORT_COLLATERAL_TRANSFER_WITHDRAWAL: Short Collateral Transfer Types
 */
@JsonAdapter(CoinbaseEngPrimeActivityApiActivityType.Adapter.class)
public enum CoinbaseEngPrimeActivityApiActivityType {
  
  UNSPECIFIED("ACTIVITY_TYPE_UNSPECIFIED"),
  
  LIMIT_ORDER("ACTIVITY_TYPE_LIMIT_ORDER"),
  
  MARKET_ORDER("ACTIVITY_TYPE_MARKET_ORDER"),
  
  TWAP_ORDER("ACTIVITY_TYPE_TWAP_ORDER"),
  
  VWAP_ORDER("ACTIVITY_TYPE_VWAP_ORDER"),
  
  STOP_LIMIT_ORDER("ACTIVITY_TYPE_STOP_LIMIT_ORDER"),
  
  DEPOSIT("ACTIVITY_TYPE_DEPOSIT"),
  
  WITHDRAWAL("ACTIVITY_TYPE_WITHDRAWAL"),
  
  CREATE_WALLET("ACTIVITY_TYPE_CREATE_WALLET"),
  
  REMOVE_WALLET("ACTIVITY_TYPE_REMOVE_WALLET"),
  
  UPDATE_WALLET("ACTIVITY_TYPE_UPDATE_WALLET"),
  
  CAST_VOTE("ACTIVITY_TYPE_CAST_VOTE"),
  
  ENABLE_VOTING("ACTIVITY_TYPE_ENABLE_VOTING"),
  
  STAKE("ACTIVITY_TYPE_STAKE"),
  
  UNSTAKE("ACTIVITY_TYPE_UNSTAKE"),
  
  CHANGE_VALIDATOR("ACTIVITY_TYPE_CHANGE_VALIDATOR"),
  
  RESTAKE("ACTIVITY_TYPE_RESTAKE"),
  
  ADDRESS_BOOK("ACTIVITY_TYPE_ADDRESS_BOOK"),
  
  TEAM_MEMBERS("ACTIVITY_TYPE_TEAM_MEMBERS"),
  
  BILLING("ACTIVITY_TYPE_BILLING"),
  
  SECURITY("ACTIVITY_TYPE_SECURITY"),
  
  API("ACTIVITY_TYPE_API"),
  
  SETTINGS("ACTIVITY_TYPE_SETTINGS"),
  
  SMART_CONTRACT("ACTIVITY_TYPE_SMART_CONTRACT"),
  
  PRINCIPAL_OUT("ACTIVITY_TYPE_PRINCIPAL_OUT"),
  
  PRINCIPAL_IN("ACTIVITY_TYPE_PRINCIPAL_IN"),
  
  COLLATERAL_OUT("ACTIVITY_TYPE_COLLATERAL_OUT"),
  
  COLLATERAL_IN("ACTIVITY_TYPE_COLLATERAL_IN"),
  
  INTEREST_OUT("ACTIVITY_TYPE_INTEREST_OUT"),
  
  INTEREST_IN("ACTIVITY_TYPE_INTEREST_IN"),
  
  ALLOCATION_IN("ACTIVITY_TYPE_ALLOCATION_IN"),
  
  ALLOCATION_OUT("ACTIVITY_TYPE_ALLOCATION_OUT"),
  
  ALLOCATION_IN_REVERSAL("ACTIVITY_TYPE_ALLOCATION_IN_REVERSAL"),
  
  ALLOCATION_OUT_REVERSAL("ACTIVITY_TYPE_ALLOCATION_OUT_REVERSAL"),
  
  CONVERSION("ACTIVITY_TYPE_CONVERSION"),
  
  BLOCK_TRADE("ACTIVITY_TYPE_BLOCK_TRADE"),
  
  USER_CHANGE_REQUEST_NO_PAS("ACTIVITY_TYPE_USER_CHANGE_REQUEST_NO_PAS"),
  
  WEB3_TRANSACTION("ACTIVITY_TYPE_WEB3_TRANSACTION"),
  
  REWARD("ACTIVITY_TYPE_REWARD"),
  
  WEB3_MESSAGE("ACTIVITY_TYPE_WEB3_MESSAGE"),
  
  WEB3_ADD_SIGNER("ACTIVITY_TYPE_WEB3_ADD_SIGNER"),
  
  WEB3_CLONE_KEYS("ACTIVITY_TYPE_WEB3_CLONE_KEYS"),
  
  WEB3_ONBOARDING("ACTIVITY_TYPE_WEB3_ONBOARDING"),
  
  WEB3_RECREATE_BACKUP("ACTIVITY_TYPE_WEB3_RECREATE_BACKUP"),
  
  MATCH_TRANSFER_DEPOSIT("ACTIVITY_TYPE_MATCH_TRANSFER_DEPOSIT"),
  
  MATCH_TRANSFER_WITHDRAWAL("ACTIVITY_TYPE_MATCH_TRANSFER_WITHDRAWAL"),
  
  WEB3_DEVICE_RECOVERY("ACTIVITY_TYPE_WEB3_DEVICE_RECOVERY"),
  
  STAKING_CRYPTO_REBATE("ACTIVITY_TYPE_STAKING_CRYPTO_REBATE"),
  
  SHORT_COLLATERAL_TRANSFER_WITHDRAWAL("ACTIVITY_TYPE_SHORT_COLLATERAL_TRANSFER_WITHDRAWAL"),
  
  SHORT_COLLATERAL_TRANSFER_RETURN("ACTIVITY_TYPE_SHORT_COLLATERAL_TRANSFER_RETURN"),
  
  WEB3_DEPOSIT_TRANSACTION("ACTIVITY_TYPE_WEB3_DEPOSIT_TRANSACTION"),
  
  ADVANCED_TRANSFER("ACTIVITY_TYPE_ADVANCED_TRANSFER"),
  
  WEB3_UPLOAD_SECURITY_KEY("ACTIVITY_TYPE_WEB3_UPLOAD_SECURITY_KEY"),
  
  WEB3_KEY_EXPORT("ACTIVITY_TYPE_WEB3_KEY_EXPORT"),
  
  WEB3_ARCHIVE_SECURITY_KEY("ACTIVITY_TYPE_WEB3_ARCHIVE_SECURITY_KEY");

  private String value;

  CoinbaseEngPrimeActivityApiActivityType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbaseEngPrimeActivityApiActivityType fromValue(String text) {
    for (CoinbaseEngPrimeActivityApiActivityType b : CoinbaseEngPrimeActivityApiActivityType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbaseEngPrimeActivityApiActivityType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbaseEngPrimeActivityApiActivityType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbaseEngPrimeActivityApiActivityType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbaseEngPrimeActivityApiActivityType.fromValue(String.valueOf(value));
    }
  }
}

