/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria {
  @SerializedName("authenticator_attachment")
  private String authenticatorAttachment = null;

  @SerializedName("requires_resident_key")
  private Boolean requiresResidentKey = null;

  @SerializedName("user_verification_requirement")
  private String userVerificationRequirement = null;

  public CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria authenticatorAttachment(String authenticatorAttachment) {
    this.authenticatorAttachment = authenticatorAttachment;
    return this;
  }

   /**
   * Get authenticatorAttachment
   * @return authenticatorAttachment
  **/
  @ApiModelProperty(value = "")
  public String getAuthenticatorAttachment() {
    return authenticatorAttachment;
  }

  public void setAuthenticatorAttachment(String authenticatorAttachment) {
    this.authenticatorAttachment = authenticatorAttachment;
  }

  public CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria requiresResidentKey(Boolean requiresResidentKey) {
    this.requiresResidentKey = requiresResidentKey;
    return this;
  }

   /**
   * Get requiresResidentKey
   * @return requiresResidentKey
  **/
  @ApiModelProperty(value = "")
  public Boolean isRequiresResidentKey() {
    return requiresResidentKey;
  }

  public void setRequiresResidentKey(Boolean requiresResidentKey) {
    this.requiresResidentKey = requiresResidentKey;
  }

  public CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria userVerificationRequirement(String userVerificationRequirement) {
    this.userVerificationRequirement = userVerificationRequirement;
    return this;
  }

   /**
   * Get userVerificationRequirement
   * @return userVerificationRequirement
  **/
  @ApiModelProperty(value = "")
  public String getUserVerificationRequirement() {
    return userVerificationRequirement;
  }

  public void setUserVerificationRequirement(String userVerificationRequirement) {
    this.userVerificationRequirement = userVerificationRequirement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria coinbaseEngPrimeApiApiAuthenticatorSelectionCriteria = (CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria) o;
    return Objects.equals(this.authenticatorAttachment, coinbaseEngPrimeApiApiAuthenticatorSelectionCriteria.authenticatorAttachment) &&
        Objects.equals(this.requiresResidentKey, coinbaseEngPrimeApiApiAuthenticatorSelectionCriteria.requiresResidentKey) &&
        Objects.equals(this.userVerificationRequirement, coinbaseEngPrimeApiApiAuthenticatorSelectionCriteria.userVerificationRequirement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(authenticatorAttachment, requiresResidentKey, userVerificationRequirement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria {\n");
    
    sb.append("    authenticatorAttachment: ").append(toIndentedString(authenticatorAttachment)).append("\n");
    sb.append("    requiresResidentKey: ").append(toIndentedString(requiresResidentKey)).append("\n");
    sb.append("    userVerificationRequirement: ").append(toIndentedString(userVerificationRequirement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

