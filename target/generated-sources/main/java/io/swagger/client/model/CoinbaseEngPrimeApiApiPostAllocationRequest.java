/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAllocationLeg;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderSide;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiPostAllocationRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPostAllocationRequest {
  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("allocation_id")
  private String allocationId = null;

  @SerializedName("source_portfolio_id")
  private String sourcePortfolioId = null;

  @SerializedName("product_id")
  private String productId = null;

  @SerializedName("side")
  private CoinbaseEngPrimeApiApiOrderSide side = null;

  @SerializedName("base_size")
  private String baseSize = null;

  @SerializedName("quote_size")
  private String quoteSize = null;

  @SerializedName("commission")
  private String commission = null;

  @SerializedName("order_ids")
  private List<String> orderIds = null;

  @SerializedName("allocation_legs")
  private List<CoinbaseEngPrimeApiApiAllocationLeg> allocationLegs = null;

  @SerializedName("client_netting_id")
  private String clientNettingId = null;

  public CoinbaseEngPrimeApiApiPostAllocationRequest portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * The ID of the portfolio of the allocation
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "The ID of the portfolio of the allocation")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest allocationId(String allocationId) {
    this.allocationId = allocationId;
    return this;
  }

   /**
   * The ID of the allocation
   * @return allocationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the allocation")
  public String getAllocationId() {
    return allocationId;
  }

  public void setAllocationId(String allocationId) {
    this.allocationId = allocationId;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest sourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
    return this;
  }

   /**
   * The source portfolio id for the allocation
   * @return sourcePortfolioId
  **/
  @ApiModelProperty(value = "The source portfolio id for the allocation")
  public String getSourcePortfolioId() {
    return sourcePortfolioId;
  }

  public void setSourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * The side for the allocation
   * @return productId
  **/
  @ApiModelProperty(value = "The side for the allocation")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest side(CoinbaseEngPrimeApiApiOrderSide side) {
    this.side = side;
    return this;
  }

   /**
   * The order side for the allocation (BUY / SELL)
   * @return side
  **/
  @ApiModelProperty(value = "The order side for the allocation (BUY / SELL)")
  public CoinbaseEngPrimeApiApiOrderSide getSide() {
    return side;
  }

  public void setSide(CoinbaseEngPrimeApiApiOrderSide side) {
    this.side = side;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest baseSize(String baseSize) {
    this.baseSize = baseSize;
    return this;
  }

   /**
   * The total base size for the allocation
   * @return baseSize
  **/
  @ApiModelProperty(value = "The total base size for the allocation")
  public String getBaseSize() {
    return baseSize;
  }

  public void setBaseSize(String baseSize) {
    this.baseSize = baseSize;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest quoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
    return this;
  }

   /**
   * The total quote size for the allocation
   * @return quoteSize
  **/
  @ApiModelProperty(value = "The total quote size for the allocation")
  public String getQuoteSize() {
    return quoteSize;
  }

  public void setQuoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest commission(String commission) {
    this.commission = commission;
    return this;
  }

   /**
   * The total commission for the allocation
   * @return commission
  **/
  @ApiModelProperty(value = "The total commission for the allocation")
  public String getCommission() {
    return commission;
  }

  public void setCommission(String commission) {
    this.commission = commission;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest orderIds(List<String> orderIds) {
    this.orderIds = orderIds;
    return this;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest addOrderIdsItem(String orderIdsItem) {
    if (this.orderIds == null) {
      this.orderIds = new ArrayList<String>();
    }
    this.orderIds.add(orderIdsItem);
    return this;
  }

   /**
   * The list of order ids in the allocation
   * @return orderIds
  **/
  @ApiModelProperty(value = "The list of order ids in the allocation")
  public List<String> getOrderIds() {
    return orderIds;
  }

  public void setOrderIds(List<String> orderIds) {
    this.orderIds = orderIds;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest allocationLegs(List<CoinbaseEngPrimeApiApiAllocationLeg> allocationLegs) {
    this.allocationLegs = allocationLegs;
    return this;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest addAllocationLegsItem(CoinbaseEngPrimeApiApiAllocationLeg allocationLegsItem) {
    if (this.allocationLegs == null) {
      this.allocationLegs = new ArrayList<CoinbaseEngPrimeApiApiAllocationLeg>();
    }
    this.allocationLegs.add(allocationLegsItem);
    return this;
  }

   /**
   * The list of allocation_legs for the allocation
   * @return allocationLegs
  **/
  @ApiModelProperty(value = "The list of allocation_legs for the allocation")
  public List<CoinbaseEngPrimeApiApiAllocationLeg> getAllocationLegs() {
    return allocationLegs;
  }

  public void setAllocationLegs(List<CoinbaseEngPrimeApiApiAllocationLeg> allocationLegs) {
    this.allocationLegs = allocationLegs;
  }

  public CoinbaseEngPrimeApiApiPostAllocationRequest clientNettingId(String clientNettingId) {
    this.clientNettingId = clientNettingId;
    return this;
  }

   /**
   * The user id of the net allocation
   * @return clientNettingId
  **/
  @ApiModelProperty(value = "The user id of the net allocation")
  public String getClientNettingId() {
    return clientNettingId;
  }

  public void setClientNettingId(String clientNettingId) {
    this.clientNettingId = clientNettingId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPostAllocationRequest coinbaseEngPrimeApiApiPostAllocationRequest = (CoinbaseEngPrimeApiApiPostAllocationRequest) o;
    return Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiPostAllocationRequest.portfolioId) &&
        Objects.equals(this.allocationId, coinbaseEngPrimeApiApiPostAllocationRequest.allocationId) &&
        Objects.equals(this.sourcePortfolioId, coinbaseEngPrimeApiApiPostAllocationRequest.sourcePortfolioId) &&
        Objects.equals(this.productId, coinbaseEngPrimeApiApiPostAllocationRequest.productId) &&
        Objects.equals(this.side, coinbaseEngPrimeApiApiPostAllocationRequest.side) &&
        Objects.equals(this.baseSize, coinbaseEngPrimeApiApiPostAllocationRequest.baseSize) &&
        Objects.equals(this.quoteSize, coinbaseEngPrimeApiApiPostAllocationRequest.quoteSize) &&
        Objects.equals(this.commission, coinbaseEngPrimeApiApiPostAllocationRequest.commission) &&
        Objects.equals(this.orderIds, coinbaseEngPrimeApiApiPostAllocationRequest.orderIds) &&
        Objects.equals(this.allocationLegs, coinbaseEngPrimeApiApiPostAllocationRequest.allocationLegs) &&
        Objects.equals(this.clientNettingId, coinbaseEngPrimeApiApiPostAllocationRequest.clientNettingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioId, allocationId, sourcePortfolioId, productId, side, baseSize, quoteSize, commission, orderIds, allocationLegs, clientNettingId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPostAllocationRequest {\n");
    
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    allocationId: ").append(toIndentedString(allocationId)).append("\n");
    sb.append("    sourcePortfolioId: ").append(toIndentedString(sourcePortfolioId)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    baseSize: ").append(toIndentedString(baseSize)).append("\n");
    sb.append("    quoteSize: ").append(toIndentedString(quoteSize)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
    sb.append("    allocationLegs: ").append(toIndentedString(allocationLegs)).append("\n");
    sb.append("    clientNettingId: ").append(toIndentedString(clientNettingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

