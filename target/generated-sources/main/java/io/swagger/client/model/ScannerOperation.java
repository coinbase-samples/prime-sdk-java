/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ScannerAttribute;
import io.swagger.client.model.ScannerBalanceApprovalOperation;
import io.swagger.client.model.ScannerBalanceTransferOperation;
import io.swagger.client.model.ScannerContractOwnershipTransferOperation;
import io.swagger.client.model.ScannerItemApprovalAllOperation;
import io.swagger.client.model.ScannerItemApprovalOperation;
import io.swagger.client.model.ScannerItemTransferOperation;
import io.swagger.client.model.ScannerOperationType;
import io.swagger.client.model.ScannerValidity;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * ScannerOperation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class ScannerOperation {
  @SerializedName("operation_type")
  private ScannerOperationType operationType = null;

  @SerializedName("balance_transfer")
  private ScannerBalanceTransferOperation balanceTransfer = null;

  @SerializedName("balance_approval")
  private ScannerBalanceApprovalOperation balanceApproval = null;

  @SerializedName("contract_ownership_transfer")
  private ScannerContractOwnershipTransferOperation contractOwnershipTransfer = null;

  @SerializedName("item_transfer")
  private ScannerItemTransferOperation itemTransfer = null;

  @SerializedName("item_approval")
  private ScannerItemApprovalOperation itemApproval = null;

  @SerializedName("item_approval_all")
  private ScannerItemApprovalAllOperation itemApprovalAll = null;

  @SerializedName("validity")
  private ScannerValidity validity = null;

  @SerializedName("attributes")
  private List<ScannerAttribute> attributes = null;

  public ScannerOperation operationType(ScannerOperationType operationType) {
    this.operationType = operationType;
    return this;
  }

   /**
   * Get operationType
   * @return operationType
  **/
  @ApiModelProperty(value = "")
  public ScannerOperationType getOperationType() {
    return operationType;
  }

  public void setOperationType(ScannerOperationType operationType) {
    this.operationType = operationType;
  }

  public ScannerOperation balanceTransfer(ScannerBalanceTransferOperation balanceTransfer) {
    this.balanceTransfer = balanceTransfer;
    return this;
  }

   /**
   * Get balanceTransfer
   * @return balanceTransfer
  **/
  @ApiModelProperty(value = "")
  public ScannerBalanceTransferOperation getBalanceTransfer() {
    return balanceTransfer;
  }

  public void setBalanceTransfer(ScannerBalanceTransferOperation balanceTransfer) {
    this.balanceTransfer = balanceTransfer;
  }

  public ScannerOperation balanceApproval(ScannerBalanceApprovalOperation balanceApproval) {
    this.balanceApproval = balanceApproval;
    return this;
  }

   /**
   * Get balanceApproval
   * @return balanceApproval
  **/
  @ApiModelProperty(value = "")
  public ScannerBalanceApprovalOperation getBalanceApproval() {
    return balanceApproval;
  }

  public void setBalanceApproval(ScannerBalanceApprovalOperation balanceApproval) {
    this.balanceApproval = balanceApproval;
  }

  public ScannerOperation contractOwnershipTransfer(ScannerContractOwnershipTransferOperation contractOwnershipTransfer) {
    this.contractOwnershipTransfer = contractOwnershipTransfer;
    return this;
  }

   /**
   * Get contractOwnershipTransfer
   * @return contractOwnershipTransfer
  **/
  @ApiModelProperty(value = "")
  public ScannerContractOwnershipTransferOperation getContractOwnershipTransfer() {
    return contractOwnershipTransfer;
  }

  public void setContractOwnershipTransfer(ScannerContractOwnershipTransferOperation contractOwnershipTransfer) {
    this.contractOwnershipTransfer = contractOwnershipTransfer;
  }

  public ScannerOperation itemTransfer(ScannerItemTransferOperation itemTransfer) {
    this.itemTransfer = itemTransfer;
    return this;
  }

   /**
   * Get itemTransfer
   * @return itemTransfer
  **/
  @ApiModelProperty(value = "")
  public ScannerItemTransferOperation getItemTransfer() {
    return itemTransfer;
  }

  public void setItemTransfer(ScannerItemTransferOperation itemTransfer) {
    this.itemTransfer = itemTransfer;
  }

  public ScannerOperation itemApproval(ScannerItemApprovalOperation itemApproval) {
    this.itemApproval = itemApproval;
    return this;
  }

   /**
   * Get itemApproval
   * @return itemApproval
  **/
  @ApiModelProperty(value = "")
  public ScannerItemApprovalOperation getItemApproval() {
    return itemApproval;
  }

  public void setItemApproval(ScannerItemApprovalOperation itemApproval) {
    this.itemApproval = itemApproval;
  }

  public ScannerOperation itemApprovalAll(ScannerItemApprovalAllOperation itemApprovalAll) {
    this.itemApprovalAll = itemApprovalAll;
    return this;
  }

   /**
   * Get itemApprovalAll
   * @return itemApprovalAll
  **/
  @ApiModelProperty(value = "")
  public ScannerItemApprovalAllOperation getItemApprovalAll() {
    return itemApprovalAll;
  }

  public void setItemApprovalAll(ScannerItemApprovalAllOperation itemApprovalAll) {
    this.itemApprovalAll = itemApprovalAll;
  }

  public ScannerOperation validity(ScannerValidity validity) {
    this.validity = validity;
    return this;
  }

   /**
   * Get validity
   * @return validity
  **/
  @ApiModelProperty(value = "")
  public ScannerValidity getValidity() {
    return validity;
  }

  public void setValidity(ScannerValidity validity) {
    this.validity = validity;
  }

  public ScannerOperation attributes(List<ScannerAttribute> attributes) {
    this.attributes = attributes;
    return this;
  }

  public ScannerOperation addAttributesItem(ScannerAttribute attributesItem) {
    if (this.attributes == null) {
      this.attributes = new ArrayList<ScannerAttribute>();
    }
    this.attributes.add(attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public List<ScannerAttribute> getAttributes() {
    return attributes;
  }

  public void setAttributes(List<ScannerAttribute> attributes) {
    this.attributes = attributes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScannerOperation scannerOperation = (ScannerOperation) o;
    return Objects.equals(this.operationType, scannerOperation.operationType) &&
        Objects.equals(this.balanceTransfer, scannerOperation.balanceTransfer) &&
        Objects.equals(this.balanceApproval, scannerOperation.balanceApproval) &&
        Objects.equals(this.contractOwnershipTransfer, scannerOperation.contractOwnershipTransfer) &&
        Objects.equals(this.itemTransfer, scannerOperation.itemTransfer) &&
        Objects.equals(this.itemApproval, scannerOperation.itemApproval) &&
        Objects.equals(this.itemApprovalAll, scannerOperation.itemApprovalAll) &&
        Objects.equals(this.validity, scannerOperation.validity) &&
        Objects.equals(this.attributes, scannerOperation.attributes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(operationType, balanceTransfer, balanceApproval, contractOwnershipTransfer, itemTransfer, itemApproval, itemApprovalAll, validity, attributes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScannerOperation {\n");
    
    sb.append("    operationType: ").append(toIndentedString(operationType)).append("\n");
    sb.append("    balanceTransfer: ").append(toIndentedString(balanceTransfer)).append("\n");
    sb.append("    balanceApproval: ").append(toIndentedString(balanceApproval)).append("\n");
    sb.append("    contractOwnershipTransfer: ").append(toIndentedString(contractOwnershipTransfer)).append("\n");
    sb.append("    itemTransfer: ").append(toIndentedString(itemTransfer)).append("\n");
    sb.append("    itemApproval: ").append(toIndentedString(itemApproval)).append("\n");
    sb.append("    itemApprovalAll: ").append(toIndentedString(itemApprovalAll)).append("\n");
    sb.append("    validity: ").append(toIndentedString(validity)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

