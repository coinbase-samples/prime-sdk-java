/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiWalletChangeCategory;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseCustodyApiWalletChangeAuditValue
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiWalletChangeAuditValue {
  @SerializedName("num_all_approvers")
  private Integer numAllApprovers = null;

  @SerializedName("category")
  private CoinbaseCustodyApiWalletChangeCategory category = null;

  @SerializedName("all_user_ids")
  private List<String> allUserIds = null;

  @SerializedName("approved_user_ids")
  private List<String> approvedUserIds = null;

  @SerializedName("rejected_user_ids")
  private List<String> rejectedUserIds = null;

  @SerializedName("num_approvals_required")
  private Integer numApprovalsRequired = null;

  public CoinbaseCustodyApiWalletChangeAuditValue numAllApprovers(Integer numAllApprovers) {
    this.numAllApprovers = numAllApprovers;
    return this;
  }

   /**
   * Get numAllApprovers
   * @return numAllApprovers
  **/
  @ApiModelProperty(value = "")
  public Integer getNumAllApprovers() {
    return numAllApprovers;
  }

  public void setNumAllApprovers(Integer numAllApprovers) {
    this.numAllApprovers = numAllApprovers;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue category(CoinbaseCustodyApiWalletChangeCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiWalletChangeCategory getCategory() {
    return category;
  }

  public void setCategory(CoinbaseCustodyApiWalletChangeCategory category) {
    this.category = category;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue allUserIds(List<String> allUserIds) {
    this.allUserIds = allUserIds;
    return this;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue addAllUserIdsItem(String allUserIdsItem) {
    if (this.allUserIds == null) {
      this.allUserIds = new ArrayList<String>();
    }
    this.allUserIds.add(allUserIdsItem);
    return this;
  }

   /**
   * Get allUserIds
   * @return allUserIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getAllUserIds() {
    return allUserIds;
  }

  public void setAllUserIds(List<String> allUserIds) {
    this.allUserIds = allUserIds;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue approvedUserIds(List<String> approvedUserIds) {
    this.approvedUserIds = approvedUserIds;
    return this;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue addApprovedUserIdsItem(String approvedUserIdsItem) {
    if (this.approvedUserIds == null) {
      this.approvedUserIds = new ArrayList<String>();
    }
    this.approvedUserIds.add(approvedUserIdsItem);
    return this;
  }

   /**
   * Get approvedUserIds
   * @return approvedUserIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getApprovedUserIds() {
    return approvedUserIds;
  }

  public void setApprovedUserIds(List<String> approvedUserIds) {
    this.approvedUserIds = approvedUserIds;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue rejectedUserIds(List<String> rejectedUserIds) {
    this.rejectedUserIds = rejectedUserIds;
    return this;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue addRejectedUserIdsItem(String rejectedUserIdsItem) {
    if (this.rejectedUserIds == null) {
      this.rejectedUserIds = new ArrayList<String>();
    }
    this.rejectedUserIds.add(rejectedUserIdsItem);
    return this;
  }

   /**
   * Get rejectedUserIds
   * @return rejectedUserIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getRejectedUserIds() {
    return rejectedUserIds;
  }

  public void setRejectedUserIds(List<String> rejectedUserIds) {
    this.rejectedUserIds = rejectedUserIds;
  }

  public CoinbaseCustodyApiWalletChangeAuditValue numApprovalsRequired(Integer numApprovalsRequired) {
    this.numApprovalsRequired = numApprovalsRequired;
    return this;
  }

   /**
   * Get numApprovalsRequired
   * @return numApprovalsRequired
  **/
  @ApiModelProperty(value = "")
  public Integer getNumApprovalsRequired() {
    return numApprovalsRequired;
  }

  public void setNumApprovalsRequired(Integer numApprovalsRequired) {
    this.numApprovalsRequired = numApprovalsRequired;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiWalletChangeAuditValue coinbaseCustodyApiWalletChangeAuditValue = (CoinbaseCustodyApiWalletChangeAuditValue) o;
    return Objects.equals(this.numAllApprovers, coinbaseCustodyApiWalletChangeAuditValue.numAllApprovers) &&
        Objects.equals(this.category, coinbaseCustodyApiWalletChangeAuditValue.category) &&
        Objects.equals(this.allUserIds, coinbaseCustodyApiWalletChangeAuditValue.allUserIds) &&
        Objects.equals(this.approvedUserIds, coinbaseCustodyApiWalletChangeAuditValue.approvedUserIds) &&
        Objects.equals(this.rejectedUserIds, coinbaseCustodyApiWalletChangeAuditValue.rejectedUserIds) &&
        Objects.equals(this.numApprovalsRequired, coinbaseCustodyApiWalletChangeAuditValue.numApprovalsRequired);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numAllApprovers, category, allUserIds, approvedUserIds, rejectedUserIds, numApprovalsRequired);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiWalletChangeAuditValue {\n");
    
    sb.append("    numAllApprovers: ").append(toIndentedString(numAllApprovers)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    allUserIds: ").append(toIndentedString(allUserIds)).append("\n");
    sb.append("    approvedUserIds: ").append(toIndentedString(approvedUserIds)).append("\n");
    sb.append("    rejectedUserIds: ").append(toIndentedString(rejectedUserIds)).append("\n");
    sb.append("    numApprovalsRequired: ").append(toIndentedString(numApprovalsRequired)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

