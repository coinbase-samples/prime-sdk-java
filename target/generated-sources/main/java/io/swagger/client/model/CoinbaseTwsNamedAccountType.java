/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets coinbase.tws.NamedAccountType
 */
@JsonAdapter(CoinbaseTwsNamedAccountType.Adapter.class)
public enum CoinbaseTwsNamedAccountType {
  
  UNSPECIFIED("NAMED_ACCOUNT_TYPE_UNSPECIFIED"),
  
  FBO("NAMED_ACCOUNT_TYPE_FBO"),
  
  SUSPENSE("NAMED_ACCOUNT_TYPE_SUSPENSE"),
  
  VENUE_PRO("NAMED_ACCOUNT_TYPE_VENUE_PRO"),
  
  INSTITUTIONAL_VENUE_FEE("NAMED_ACCOUNT_TYPE_INSTITUTIONAL_VENUE_FEE"),
  
  INSTITUTIONAL_COMMISSION("NAMED_ACCOUNT_TYPE_INSTITUTIONAL_COMMISSION"),
  
  VENUE_B2C2("NAMED_ACCOUNT_TYPE_VENUE_B2C2"),
  
  INSTITUTIONAL_ERROR("NAMED_ACCOUNT_TYPE_INSTITUTIONAL_ERROR"),
  
  VENUE_DUST("NAMED_ACCOUNT_TYPE_VENUE_DUST"),
  
  PASSTHROUGH_FEES("NAMED_ACCOUNT_TYPE_PASSTHROUGH_FEES"),
  
  NETWORK_FEES("NAMED_ACCOUNT_TYPE_NETWORK_FEES"),
  
  IN_TRANSIT("NAMED_ACCOUNT_TYPE_IN_TRANSIT"),
  
  CENTRAL_LOAN_BOOK("NAMED_ACCOUNT_TYPE_CENTRAL_LOAN_BOOK"),
  
  CORPORATE_OPERATING("NAMED_ACCOUNT_TYPE_CORPORATE_OPERATING"),
  
  VENUE_BITSTAMP("NAMED_ACCOUNT_TYPE_VENUE_BITSTAMP"),
  
  VENUE_CUMBERLAND("NAMED_ACCOUNT_TYPE_VENUE_CUMBERLAND"),
  
  LMS_CB_CREDIT_PRINCIPAL("NAMED_ACCOUNT_TYPE_LMS_CB_CREDIT_PRINCIPAL"),
  
  LMS_CB_CREDIT_COLLATERAL("NAMED_ACCOUNT_TYPE_LMS_CB_CREDIT_COLLATERAL"),
  
  LMS_CB_CREDIT_INTEREST_REVENUE("NAMED_ACCOUNT_TYPE_LMS_CB_CREDIT_INTEREST_REVENUE"),
  
  LMS_CB_CREDIT_INTEREST_EXPENSE("NAMED_ACCOUNT_TYPE_LMS_CB_CREDIT_INTEREST_EXPENSE"),
  
  LMS_CCI_PRINCIPAL("NAMED_ACCOUNT_TYPE_LMS_CCI_PRINCIPAL"),
  
  LMS_CCI_COLLATERAL("NAMED_ACCOUNT_TYPE_LMS_CCI_COLLATERAL"),
  
  LMS_CCI_INTEREST_REVENUE("NAMED_ACCOUNT_TYPE_LMS_CCI_INTEREST_REVENUE"),
  
  LMS_CCI_INTEREST_EXPENSE("NAMED_ACCOUNT_TYPE_LMS_CCI_INTEREST_EXPENSE"),
  
  VENUE_KRAKEN("NAMED_ACCOUNT_TYPE_VENUE_KRAKEN"),
  
  VENUE_FTX("NAMED_ACCOUNT_TYPE_VENUE_FTX"),
  
  CENTRAL_TRADE_FINANCE_BOOK("NAMED_ACCOUNT_TYPE_CENTRAL_TRADE_FINANCE_BOOK"),
  
  VENUE_JANESTREET("NAMED_ACCOUNT_TYPE_VENUE_JANESTREET"),
  
  PRIME_ERRORS("NAMED_ACCOUNT_TYPE_PRIME_ERRORS"),
  
  STAKING_AND_INFLATION_REVENUE("NAMED_ACCOUNT_TYPE_STAKING_AND_INFLATION_REVENUE"),
  
  PRIME_TRADING_BALANCE("NAMED_ACCOUNT_TYPE_PRIME_TRADING_BALANCE"),
  
  PRIME_OPERATING_INVENTORY("NAMED_ACCOUNT_TYPE_PRIME_OPERATING_INVENTORY");

  private String value;

  CoinbaseTwsNamedAccountType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbaseTwsNamedAccountType fromValue(String text) {
    for (CoinbaseTwsNamedAccountType b : CoinbaseTwsNamedAccountType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbaseTwsNamedAccountType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbaseTwsNamedAccountType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbaseTwsNamedAccountType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbaseTwsNamedAccountType.fromValue(String.valueOf(value));
    }
  }
}

