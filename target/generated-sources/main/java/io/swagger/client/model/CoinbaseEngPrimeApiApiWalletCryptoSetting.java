/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAssetVisibilityStatus;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiWalletCryptoSetting
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiWalletCryptoSetting {
  @SerializedName("network")
  private String network = null;

  @SerializedName("contract_address")
  private String contractAddress = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("status")
  private CoinbaseEngPrimeApiApiAssetVisibilityStatus status = null;

  public CoinbaseEngPrimeApiApiWalletCryptoSetting network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(value = "")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public CoinbaseEngPrimeApiApiWalletCryptoSetting contractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
    return this;
  }

   /**
   * Get contractAddress
   * @return contractAddress
  **/
  @ApiModelProperty(value = "")
  public String getContractAddress() {
    return contractAddress;
  }

  public void setContractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
  }

  public CoinbaseEngPrimeApiApiWalletCryptoSetting symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CoinbaseEngPrimeApiApiWalletCryptoSetting status(CoinbaseEngPrimeApiApiAssetVisibilityStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiAssetVisibilityStatus getStatus() {
    return status;
  }

  public void setStatus(CoinbaseEngPrimeApiApiAssetVisibilityStatus status) {
    this.status = status;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiWalletCryptoSetting coinbaseEngPrimeApiApiWalletCryptoSetting = (CoinbaseEngPrimeApiApiWalletCryptoSetting) o;
    return Objects.equals(this.network, coinbaseEngPrimeApiApiWalletCryptoSetting.network) &&
        Objects.equals(this.contractAddress, coinbaseEngPrimeApiApiWalletCryptoSetting.contractAddress) &&
        Objects.equals(this.symbol, coinbaseEngPrimeApiApiWalletCryptoSetting.symbol) &&
        Objects.equals(this.status, coinbaseEngPrimeApiApiWalletCryptoSetting.status);
  }

  @Override
  public int hashCode() {
    return Objects.hash(network, contractAddress, symbol, status);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiWalletCryptoSetting {\n");
    
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    contractAddress: ").append(toIndentedString(contractAddress)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

