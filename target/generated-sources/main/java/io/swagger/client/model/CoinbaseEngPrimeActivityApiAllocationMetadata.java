/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeActivityApiAllocationMetadata
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeActivityApiAllocationMetadata {
  @SerializedName("total_base_size")
  private String totalBaseSize = null;

  @SerializedName("total_quote_size")
  private String totalQuoteSize = null;

  @SerializedName("average_price")
  private String averagePrice = null;

  @SerializedName("root_id")
  private String rootId = null;

  @SerializedName("order_ids")
  private List<String> orderIds = new ArrayList<String>();

  @SerializedName("portfolio_ids")
  private List<String> portfolioIds = null;

  @SerializedName("self_allocated_base_size")
  private String selfAllocatedBaseSize = null;

  @SerializedName("self_allocated_quote_size")
  private String selfAllocatedQuoteSize = null;

  @SerializedName("self_allocated_percentage")
  private String selfAllocatedPercentage = null;

  @SerializedName("allocated_base_size")
  private String allocatedBaseSize = null;

  @SerializedName("allocated_quote_size")
  private String allocatedQuoteSize = null;

  @SerializedName("allocated_commission")
  private String allocatedCommission = null;

  @SerializedName("source_portfolio_id")
  private String sourcePortfolioId = null;

  @SerializedName("allocation_leg_ids")
  private List<String> allocationLegIds = new ArrayList<String>();

  @SerializedName("reversed_allocation_id")
  private String reversedAllocationId = null;

  @SerializedName("source_portfolio_ids")
  private List<String> sourcePortfolioIds = null;

  @SerializedName("destination_portfolio_ids")
  private List<String> destinationPortfolioIds = null;

  @SerializedName("allocation_netting_id")
  private String allocationNettingId = null;

  @SerializedName("client_netting_id")
  private String clientNettingId = null;

  public CoinbaseEngPrimeActivityApiAllocationMetadata totalBaseSize(String totalBaseSize) {
    this.totalBaseSize = totalBaseSize;
    return this;
  }

   /**
   * The total base size of order being allocated
   * @return totalBaseSize
  **/
  @ApiModelProperty(required = true, value = "The total base size of order being allocated")
  public String getTotalBaseSize() {
    return totalBaseSize;
  }

  public void setTotalBaseSize(String totalBaseSize) {
    this.totalBaseSize = totalBaseSize;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata totalQuoteSize(String totalQuoteSize) {
    this.totalQuoteSize = totalQuoteSize;
    return this;
  }

   /**
   * The total quote size of order being allocated
   * @return totalQuoteSize
  **/
  @ApiModelProperty(required = true, value = "The total quote size of order being allocated")
  public String getTotalQuoteSize() {
    return totalQuoteSize;
  }

  public void setTotalQuoteSize(String totalQuoteSize) {
    this.totalQuoteSize = totalQuoteSize;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata averagePrice(String averagePrice) {
    this.averagePrice = averagePrice;
    return this;
  }

   /**
   * The average price of the allocations
   * @return averagePrice
  **/
  @ApiModelProperty(required = true, value = "The average price of the allocations")
  public String getAveragePrice() {
    return averagePrice;
  }

  public void setAveragePrice(String averagePrice) {
    this.averagePrice = averagePrice;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata rootId(String rootId) {
    this.rootId = rootId;
    return this;
  }

   /**
   * The root id of the allocation
   * @return rootId
  **/
  @ApiModelProperty(required = true, value = "The root id of the allocation")
  public String getRootId() {
    return rootId;
  }

  public void setRootId(String rootId) {
    this.rootId = rootId;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata orderIds(List<String> orderIds) {
    this.orderIds = orderIds;
    return this;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata addOrderIdsItem(String orderIdsItem) {
    this.orderIds.add(orderIdsItem);
    return this;
  }

   /**
   * The order ids of the allocation
   * @return orderIds
  **/
  @ApiModelProperty(required = true, value = "The order ids of the allocation")
  public List<String> getOrderIds() {
    return orderIds;
  }

  public void setOrderIds(List<String> orderIds) {
    this.orderIds = orderIds;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata portfolioIds(List<String> portfolioIds) {
    this.portfolioIds = portfolioIds;
    return this;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata addPortfolioIdsItem(String portfolioIdsItem) {
    if (this.portfolioIds == null) {
      this.portfolioIds = new ArrayList<String>();
    }
    this.portfolioIds.add(portfolioIdsItem);
    return this;
  }

   /**
   * The portfolios ids of the allocation
   * @return portfolioIds
  **/
  @ApiModelProperty(value = "The portfolios ids of the allocation")
  public List<String> getPortfolioIds() {
    return portfolioIds;
  }

  public void setPortfolioIds(List<String> portfolioIds) {
    this.portfolioIds = portfolioIds;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata selfAllocatedBaseSize(String selfAllocatedBaseSize) {
    this.selfAllocatedBaseSize = selfAllocatedBaseSize;
    return this;
  }

   /**
   * The self allocated or remainder base size of the allocation
   * @return selfAllocatedBaseSize
  **/
  @ApiModelProperty(value = "The self allocated or remainder base size of the allocation")
  public String getSelfAllocatedBaseSize() {
    return selfAllocatedBaseSize;
  }

  public void setSelfAllocatedBaseSize(String selfAllocatedBaseSize) {
    this.selfAllocatedBaseSize = selfAllocatedBaseSize;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata selfAllocatedQuoteSize(String selfAllocatedQuoteSize) {
    this.selfAllocatedQuoteSize = selfAllocatedQuoteSize;
    return this;
  }

   /**
   * The self allocated or remainder quote size of the allocation
   * @return selfAllocatedQuoteSize
  **/
  @ApiModelProperty(value = "The self allocated or remainder quote size of the allocation")
  public String getSelfAllocatedQuoteSize() {
    return selfAllocatedQuoteSize;
  }

  public void setSelfAllocatedQuoteSize(String selfAllocatedQuoteSize) {
    this.selfAllocatedQuoteSize = selfAllocatedQuoteSize;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata selfAllocatedPercentage(String selfAllocatedPercentage) {
    this.selfAllocatedPercentage = selfAllocatedPercentage;
    return this;
  }

   /**
   * The self allocated or remainder percentage size of the allocation
   * @return selfAllocatedPercentage
  **/
  @ApiModelProperty(value = "The self allocated or remainder percentage size of the allocation")
  public String getSelfAllocatedPercentage() {
    return selfAllocatedPercentage;
  }

  public void setSelfAllocatedPercentage(String selfAllocatedPercentage) {
    this.selfAllocatedPercentage = selfAllocatedPercentage;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata allocatedBaseSize(String allocatedBaseSize) {
    this.allocatedBaseSize = allocatedBaseSize;
    return this;
  }

   /**
   * Total amount of base currency allocated. For allocation out, this is a sum across all legs. For allocation in, this is the total amount in base allocated to/from the current portfolio.
   * @return allocatedBaseSize
  **/
  @ApiModelProperty(required = true, value = "Total amount of base currency allocated. For allocation out, this is a sum across all legs. For allocation in, this is the total amount in base allocated to/from the current portfolio.")
  public String getAllocatedBaseSize() {
    return allocatedBaseSize;
  }

  public void setAllocatedBaseSize(String allocatedBaseSize) {
    this.allocatedBaseSize = allocatedBaseSize;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata allocatedQuoteSize(String allocatedQuoteSize) {
    this.allocatedQuoteSize = allocatedQuoteSize;
    return this;
  }

   /**
   * Amount of quote currency allocated excluding fees. For allocation out, this is a sum across all allocation legs. For allocation in, this is the amount in quote allocated to/from the current portfolio.
   * @return allocatedQuoteSize
  **/
  @ApiModelProperty(required = true, value = "Amount of quote currency allocated excluding fees. For allocation out, this is a sum across all allocation legs. For allocation in, this is the amount in quote allocated to/from the current portfolio.")
  public String getAllocatedQuoteSize() {
    return allocatedQuoteSize;
  }

  public void setAllocatedQuoteSize(String allocatedQuoteSize) {
    this.allocatedQuoteSize = allocatedQuoteSize;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata allocatedCommission(String allocatedCommission) {
    this.allocatedCommission = allocatedCommission;
    return this;
  }

   /**
   * Total commision paid by destination portfolio, in quote. For allocation out, this is a sum of fees paid by each destination portfolio.
   * @return allocatedCommission
  **/
  @ApiModelProperty(required = true, value = "Total commision paid by destination portfolio, in quote. For allocation out, this is a sum of fees paid by each destination portfolio.")
  public String getAllocatedCommission() {
    return allocatedCommission;
  }

  public void setAllocatedCommission(String allocatedCommission) {
    this.allocatedCommission = allocatedCommission;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata sourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
    return this;
  }

   /**
   * The source portfolio id for the allocation.
   * @return sourcePortfolioId
  **/
  @ApiModelProperty(required = true, value = "The source portfolio id for the allocation.")
  public String getSourcePortfolioId() {
    return sourcePortfolioId;
  }

  public void setSourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata allocationLegIds(List<String> allocationLegIds) {
    this.allocationLegIds = allocationLegIds;
    return this;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata addAllocationLegIdsItem(String allocationLegIdsItem) {
    this.allocationLegIds.add(allocationLegIdsItem);
    return this;
  }

   /**
   * The allocation leg ids of the allocation
   * @return allocationLegIds
  **/
  @ApiModelProperty(required = true, value = "The allocation leg ids of the allocation")
  public List<String> getAllocationLegIds() {
    return allocationLegIds;
  }

  public void setAllocationLegIds(List<String> allocationLegIds) {
    this.allocationLegIds = allocationLegIds;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata reversedAllocationId(String reversedAllocationId) {
    this.reversedAllocationId = reversedAllocationId;
    return this;
  }

   /**
   * The reversed allocation id for reference
   * @return reversedAllocationId
  **/
  @ApiModelProperty(value = "The reversed allocation id for reference")
  public String getReversedAllocationId() {
    return reversedAllocationId;
  }

  public void setReversedAllocationId(String reversedAllocationId) {
    this.reversedAllocationId = reversedAllocationId;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata sourcePortfolioIds(List<String> sourcePortfolioIds) {
    this.sourcePortfolioIds = sourcePortfolioIds;
    return this;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata addSourcePortfolioIdsItem(String sourcePortfolioIdsItem) {
    if (this.sourcePortfolioIds == null) {
      this.sourcePortfolioIds = new ArrayList<String>();
    }
    this.sourcePortfolioIds.add(sourcePortfolioIdsItem);
    return this;
  }

   /**
   * The source portfolio ids for the allocation.
   * @return sourcePortfolioIds
  **/
  @ApiModelProperty(value = "The source portfolio ids for the allocation.")
  public List<String> getSourcePortfolioIds() {
    return sourcePortfolioIds;
  }

  public void setSourcePortfolioIds(List<String> sourcePortfolioIds) {
    this.sourcePortfolioIds = sourcePortfolioIds;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata destinationPortfolioIds(List<String> destinationPortfolioIds) {
    this.destinationPortfolioIds = destinationPortfolioIds;
    return this;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata addDestinationPortfolioIdsItem(String destinationPortfolioIdsItem) {
    if (this.destinationPortfolioIds == null) {
      this.destinationPortfolioIds = new ArrayList<String>();
    }
    this.destinationPortfolioIds.add(destinationPortfolioIdsItem);
    return this;
  }

   /**
   * The destination portfolio id for the allocation.
   * @return destinationPortfolioIds
  **/
  @ApiModelProperty(value = "The destination portfolio id for the allocation.")
  public List<String> getDestinationPortfolioIds() {
    return destinationPortfolioIds;
  }

  public void setDestinationPortfolioIds(List<String> destinationPortfolioIds) {
    this.destinationPortfolioIds = destinationPortfolioIds;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata allocationNettingId(String allocationNettingId) {
    this.allocationNettingId = allocationNettingId;
    return this;
  }

   /**
   * The netting id for the allocation.
   * @return allocationNettingId
  **/
  @ApiModelProperty(value = "The netting id for the allocation.")
  public String getAllocationNettingId() {
    return allocationNettingId;
  }

  public void setAllocationNettingId(String allocationNettingId) {
    this.allocationNettingId = allocationNettingId;
  }

  public CoinbaseEngPrimeActivityApiAllocationMetadata clientNettingId(String clientNettingId) {
    this.clientNettingId = clientNettingId;
    return this;
  }

   /**
   * The client netting id for the allocation.
   * @return clientNettingId
  **/
  @ApiModelProperty(value = "The client netting id for the allocation.")
  public String getClientNettingId() {
    return clientNettingId;
  }

  public void setClientNettingId(String clientNettingId) {
    this.clientNettingId = clientNettingId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeActivityApiAllocationMetadata coinbaseEngPrimeActivityApiAllocationMetadata = (CoinbaseEngPrimeActivityApiAllocationMetadata) o;
    return Objects.equals(this.totalBaseSize, coinbaseEngPrimeActivityApiAllocationMetadata.totalBaseSize) &&
        Objects.equals(this.totalQuoteSize, coinbaseEngPrimeActivityApiAllocationMetadata.totalQuoteSize) &&
        Objects.equals(this.averagePrice, coinbaseEngPrimeActivityApiAllocationMetadata.averagePrice) &&
        Objects.equals(this.rootId, coinbaseEngPrimeActivityApiAllocationMetadata.rootId) &&
        Objects.equals(this.orderIds, coinbaseEngPrimeActivityApiAllocationMetadata.orderIds) &&
        Objects.equals(this.portfolioIds, coinbaseEngPrimeActivityApiAllocationMetadata.portfolioIds) &&
        Objects.equals(this.selfAllocatedBaseSize, coinbaseEngPrimeActivityApiAllocationMetadata.selfAllocatedBaseSize) &&
        Objects.equals(this.selfAllocatedQuoteSize, coinbaseEngPrimeActivityApiAllocationMetadata.selfAllocatedQuoteSize) &&
        Objects.equals(this.selfAllocatedPercentage, coinbaseEngPrimeActivityApiAllocationMetadata.selfAllocatedPercentage) &&
        Objects.equals(this.allocatedBaseSize, coinbaseEngPrimeActivityApiAllocationMetadata.allocatedBaseSize) &&
        Objects.equals(this.allocatedQuoteSize, coinbaseEngPrimeActivityApiAllocationMetadata.allocatedQuoteSize) &&
        Objects.equals(this.allocatedCommission, coinbaseEngPrimeActivityApiAllocationMetadata.allocatedCommission) &&
        Objects.equals(this.sourcePortfolioId, coinbaseEngPrimeActivityApiAllocationMetadata.sourcePortfolioId) &&
        Objects.equals(this.allocationLegIds, coinbaseEngPrimeActivityApiAllocationMetadata.allocationLegIds) &&
        Objects.equals(this.reversedAllocationId, coinbaseEngPrimeActivityApiAllocationMetadata.reversedAllocationId) &&
        Objects.equals(this.sourcePortfolioIds, coinbaseEngPrimeActivityApiAllocationMetadata.sourcePortfolioIds) &&
        Objects.equals(this.destinationPortfolioIds, coinbaseEngPrimeActivityApiAllocationMetadata.destinationPortfolioIds) &&
        Objects.equals(this.allocationNettingId, coinbaseEngPrimeActivityApiAllocationMetadata.allocationNettingId) &&
        Objects.equals(this.clientNettingId, coinbaseEngPrimeActivityApiAllocationMetadata.clientNettingId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(totalBaseSize, totalQuoteSize, averagePrice, rootId, orderIds, portfolioIds, selfAllocatedBaseSize, selfAllocatedQuoteSize, selfAllocatedPercentage, allocatedBaseSize, allocatedQuoteSize, allocatedCommission, sourcePortfolioId, allocationLegIds, reversedAllocationId, sourcePortfolioIds, destinationPortfolioIds, allocationNettingId, clientNettingId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeActivityApiAllocationMetadata {\n");
    
    sb.append("    totalBaseSize: ").append(toIndentedString(totalBaseSize)).append("\n");
    sb.append("    totalQuoteSize: ").append(toIndentedString(totalQuoteSize)).append("\n");
    sb.append("    averagePrice: ").append(toIndentedString(averagePrice)).append("\n");
    sb.append("    rootId: ").append(toIndentedString(rootId)).append("\n");
    sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
    sb.append("    portfolioIds: ").append(toIndentedString(portfolioIds)).append("\n");
    sb.append("    selfAllocatedBaseSize: ").append(toIndentedString(selfAllocatedBaseSize)).append("\n");
    sb.append("    selfAllocatedQuoteSize: ").append(toIndentedString(selfAllocatedQuoteSize)).append("\n");
    sb.append("    selfAllocatedPercentage: ").append(toIndentedString(selfAllocatedPercentage)).append("\n");
    sb.append("    allocatedBaseSize: ").append(toIndentedString(allocatedBaseSize)).append("\n");
    sb.append("    allocatedQuoteSize: ").append(toIndentedString(allocatedQuoteSize)).append("\n");
    sb.append("    allocatedCommission: ").append(toIndentedString(allocatedCommission)).append("\n");
    sb.append("    sourcePortfolioId: ").append(toIndentedString(sourcePortfolioId)).append("\n");
    sb.append("    allocationLegIds: ").append(toIndentedString(allocationLegIds)).append("\n");
    sb.append("    reversedAllocationId: ").append(toIndentedString(reversedAllocationId)).append("\n");
    sb.append("    sourcePortfolioIds: ").append(toIndentedString(sourcePortfolioIds)).append("\n");
    sb.append("    destinationPortfolioIds: ").append(toIndentedString(destinationPortfolioIds)).append("\n");
    sb.append("    allocationNettingId: ").append(toIndentedString(allocationNettingId)).append("\n");
    sb.append("    clientNettingId: ").append(toIndentedString(clientNettingId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

