/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseBrokerageProxyTradingApiCandle
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyTradingApiCandle {
  @SerializedName("start")
  private String start = null;

  @SerializedName("low")
  private String low = null;

  @SerializedName("high")
  private String high = null;

  @SerializedName("open")
  private String open = null;

  @SerializedName("close")
  private String close = null;

  @SerializedName("volume")
  private String volume = null;

  public CoinbaseBrokerageProxyTradingApiCandle start(String start) {
    this.start = start;
    return this;
  }

   /**
   * The date/time in which the candle started. This is a UNIX ts string, &#39;1596640920&#39;
   * @return start
  **/
  @ApiModelProperty(required = true, value = "The date/time in which the candle started. This is a UNIX ts string, '1596640920'")
  public String getStart() {
    return start;
  }

  public void setStart(String start) {
    this.start = start;
  }

  public CoinbaseBrokerageProxyTradingApiCandle low(String low) {
    this.low = low;
    return this;
  }

   /**
   * The lowest value for which a trade executed during this candle&#39;s time frame
   * @return low
  **/
  @ApiModelProperty(required = true, value = "The lowest value for which a trade executed during this candle's time frame")
  public String getLow() {
    return low;
  }

  public void setLow(String low) {
    this.low = low;
  }

  public CoinbaseBrokerageProxyTradingApiCandle high(String high) {
    this.high = high;
    return this;
  }

   /**
   * The highest value for which a trade executed during this candle&#39;s time frame
   * @return high
  **/
  @ApiModelProperty(required = true, value = "The highest value for which a trade executed during this candle's time frame")
  public String getHigh() {
    return high;
  }

  public void setHigh(String high) {
    this.high = high;
  }

  public CoinbaseBrokerageProxyTradingApiCandle open(String open) {
    this.open = open;
    return this;
  }

   /**
   * The price of the product at the beginning of the candle&#39;s timeframe
   * @return open
  **/
  @ApiModelProperty(required = true, value = "The price of the product at the beginning of the candle's timeframe")
  public String getOpen() {
    return open;
  }

  public void setOpen(String open) {
    this.open = open;
  }

  public CoinbaseBrokerageProxyTradingApiCandle close(String close) {
    this.close = close;
    return this;
  }

   /**
   * The price of the product at the end of the candle&#39;s timeframe
   * @return close
  **/
  @ApiModelProperty(required = true, value = "The price of the product at the end of the candle's timeframe")
  public String getClose() {
    return close;
  }

  public void setClose(String close) {
    this.close = close;
  }

  public CoinbaseBrokerageProxyTradingApiCandle volume(String volume) {
    this.volume = volume;
    return this;
  }

   /**
   * How much asset was traded during this timeframe, represented in base
   * @return volume
  **/
  @ApiModelProperty(required = true, value = "How much asset was traded during this timeframe, represented in base")
  public String getVolume() {
    return volume;
  }

  public void setVolume(String volume) {
    this.volume = volume;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyTradingApiCandle coinbaseBrokerageProxyTradingApiCandle = (CoinbaseBrokerageProxyTradingApiCandle) o;
    return Objects.equals(this.start, coinbaseBrokerageProxyTradingApiCandle.start) &&
        Objects.equals(this.low, coinbaseBrokerageProxyTradingApiCandle.low) &&
        Objects.equals(this.high, coinbaseBrokerageProxyTradingApiCandle.high) &&
        Objects.equals(this.open, coinbaseBrokerageProxyTradingApiCandle.open) &&
        Objects.equals(this.close, coinbaseBrokerageProxyTradingApiCandle.close) &&
        Objects.equals(this.volume, coinbaseBrokerageProxyTradingApiCandle.volume);
  }

  @Override
  public int hashCode() {
    return Objects.hash(start, low, high, open, close, volume);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyTradingApiCandle {\n");
    
    sb.append("    start: ").append(toIndentedString(start)).append("\n");
    sb.append("    low: ").append(toIndentedString(low)).append("\n");
    sb.append("    high: ").append(toIndentedString(high)).append("\n");
    sb.append("    open: ").append(toIndentedString(open)).append("\n");
    sb.append("    close: ").append(toIndentedString(close)).append("\n");
    sb.append("    volume: ").append(toIndentedString(volume)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

