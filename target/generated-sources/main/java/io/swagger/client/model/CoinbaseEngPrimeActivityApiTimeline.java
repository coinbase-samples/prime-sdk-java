/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiTimelineEvent;
import java.io.IOException;

/**
 * CoinbaseEngPrimeActivityApiTimeline
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeActivityApiTimeline {
  @SerializedName("reference_id")
  private String referenceId = null;

  @SerializedName("metadata")
  private String metadata = null;

  @SerializedName("event")
  private CoinbaseEngPrimeActivityApiTimelineEvent event = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  @SerializedName("event_pending")
  private Boolean eventPending = null;

  @SerializedName("user_name")
  private String userName = null;

  public CoinbaseEngPrimeActivityApiTimeline referenceId(String referenceId) {
    this.referenceId = referenceId;
    return this;
  }

   /**
   * Get referenceId
   * @return referenceId
  **/
  @ApiModelProperty(value = "")
  public String getReferenceId() {
    return referenceId;
  }

  public void setReferenceId(String referenceId) {
    this.referenceId = referenceId;
  }

  public CoinbaseEngPrimeActivityApiTimeline metadata(String metadata) {
    this.metadata = metadata;
    return this;
  }

   /**
   * Get metadata
   * @return metadata
  **/
  @ApiModelProperty(value = "")
  public String getMetadata() {
    return metadata;
  }

  public void setMetadata(String metadata) {
    this.metadata = metadata;
  }

  public CoinbaseEngPrimeActivityApiTimeline event(CoinbaseEngPrimeActivityApiTimelineEvent event) {
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeActivityApiTimelineEvent getEvent() {
    return event;
  }

  public void setEvent(CoinbaseEngPrimeActivityApiTimelineEvent event) {
    this.event = event;
  }

  public CoinbaseEngPrimeActivityApiTimeline userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbaseEngPrimeActivityApiTimeline timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(value = "")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public CoinbaseEngPrimeActivityApiTimeline eventPending(Boolean eventPending) {
    this.eventPending = eventPending;
    return this;
  }

   /**
   * Get eventPending
   * @return eventPending
  **/
  @ApiModelProperty(value = "")
  public Boolean isEventPending() {
    return eventPending;
  }

  public void setEventPending(Boolean eventPending) {
    this.eventPending = eventPending;
  }

  public CoinbaseEngPrimeActivityApiTimeline userName(String userName) {
    this.userName = userName;
    return this;
  }

   /**
   * Get userName
   * @return userName
  **/
  @ApiModelProperty(value = "")
  public String getUserName() {
    return userName;
  }

  public void setUserName(String userName) {
    this.userName = userName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeActivityApiTimeline coinbaseEngPrimeActivityApiTimeline = (CoinbaseEngPrimeActivityApiTimeline) o;
    return Objects.equals(this.referenceId, coinbaseEngPrimeActivityApiTimeline.referenceId) &&
        Objects.equals(this.metadata, coinbaseEngPrimeActivityApiTimeline.metadata) &&
        Objects.equals(this.event, coinbaseEngPrimeActivityApiTimeline.event) &&
        Objects.equals(this.userId, coinbaseEngPrimeActivityApiTimeline.userId) &&
        Objects.equals(this.timestamp, coinbaseEngPrimeActivityApiTimeline.timestamp) &&
        Objects.equals(this.eventPending, coinbaseEngPrimeActivityApiTimeline.eventPending) &&
        Objects.equals(this.userName, coinbaseEngPrimeActivityApiTimeline.userName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(referenceId, metadata, event, userId, timestamp, eventPending, userName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeActivityApiTimeline {\n");
    
    sb.append("    referenceId: ").append(toIndentedString(referenceId)).append("\n");
    sb.append("    metadata: ").append(toIndentedString(metadata)).append("\n");
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    eventPending: ").append(toIndentedString(eventPending)).append("\n");
    sb.append("    userName: ").append(toIndentedString(userName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

