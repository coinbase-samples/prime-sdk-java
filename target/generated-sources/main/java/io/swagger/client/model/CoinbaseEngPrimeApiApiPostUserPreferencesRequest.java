/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiChartConfiguration;
import io.swagger.client.model.CoinbaseEngPrimeApiApiDefaultPortfolioUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiFavoriteProductsUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiKeyboardShortcutsToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiLadderIcebergToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiLadderLevelDoubleclickOrderingUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderCancelConfirmationWindowToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderConfirmationWindowToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderFormPersistToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderFormSizeWarningsToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderRaiseExactToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderTableColumnUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPinnedOrdersUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPrimeBetaToggleUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiShowNewUserTradeExperienceUpdate;
import io.swagger.client.model.CoinbaseEngPrimeApiApiStudyInputs;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiPostUserPreferencesRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPostUserPreferencesRequest {
  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("favorite_products")
  private CoinbaseEngPrimeApiApiFavoriteProductsUpdate favoriteProducts = null;

  @SerializedName("order_confirmation_window_toggle")
  private CoinbaseEngPrimeApiApiOrderConfirmationWindowToggleUpdate orderConfirmationWindowToggle = null;

  @SerializedName("study_inputs")
  private CoinbaseEngPrimeApiApiStudyInputs studyInputs = null;

  @SerializedName("ladder_level_doubleclick_ordering")
  private CoinbaseEngPrimeApiApiLadderLevelDoubleclickOrderingUpdate ladderLevelDoubleclickOrdering = null;

  @SerializedName("chart_configuration")
  private CoinbaseEngPrimeApiApiChartConfiguration chartConfiguration = null;

  @SerializedName("default_portfolio")
  private CoinbaseEngPrimeApiApiDefaultPortfolioUpdate defaultPortfolio = null;

  @SerializedName("show_new_user_trade_experience")
  private CoinbaseEngPrimeApiApiShowNewUserTradeExperienceUpdate showNewUserTradeExperience = null;

  @SerializedName("order_cancel_confirmation_window_toggle")
  private CoinbaseEngPrimeApiApiOrderCancelConfirmationWindowToggleUpdate orderCancelConfirmationWindowToggle = null;

  @SerializedName("order_table_columns")
  private CoinbaseEngPrimeApiApiOrderTableColumnUpdate orderTableColumns = null;

  @SerializedName("pinned_orders")
  private CoinbaseEngPrimeApiApiPinnedOrdersUpdate pinnedOrders = null;

  @SerializedName("keyboard_shortcuts_toggle")
  private CoinbaseEngPrimeApiApiKeyboardShortcutsToggleUpdate keyboardShortcutsToggle = null;

  @SerializedName("order_raise_exact_toggle")
  private CoinbaseEngPrimeApiApiOrderRaiseExactToggleUpdate orderRaiseExactToggle = null;

  @SerializedName("order_form_persist_toggle")
  private CoinbaseEngPrimeApiApiOrderFormPersistToggleUpdate orderFormPersistToggle = null;

  @SerializedName("order_form_size_warnings_toggle")
  private CoinbaseEngPrimeApiApiOrderFormSizeWarningsToggleUpdate orderFormSizeWarningsToggle = null;

  @SerializedName("ladder_iceberg_toggle")
  private CoinbaseEngPrimeApiApiLadderIcebergToggleUpdate ladderIcebergToggle = null;

  @SerializedName("prime_beta_toggle")
  private CoinbaseEngPrimeApiApiPrimeBetaToggleUpdate primeBetaToggle = null;

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest favoriteProducts(CoinbaseEngPrimeApiApiFavoriteProductsUpdate favoriteProducts) {
    this.favoriteProducts = favoriteProducts;
    return this;
  }

   /**
   * Get favoriteProducts
   * @return favoriteProducts
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiFavoriteProductsUpdate getFavoriteProducts() {
    return favoriteProducts;
  }

  public void setFavoriteProducts(CoinbaseEngPrimeApiApiFavoriteProductsUpdate favoriteProducts) {
    this.favoriteProducts = favoriteProducts;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest orderConfirmationWindowToggle(CoinbaseEngPrimeApiApiOrderConfirmationWindowToggleUpdate orderConfirmationWindowToggle) {
    this.orderConfirmationWindowToggle = orderConfirmationWindowToggle;
    return this;
  }

   /**
   * Get orderConfirmationWindowToggle
   * @return orderConfirmationWindowToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiOrderConfirmationWindowToggleUpdate getOrderConfirmationWindowToggle() {
    return orderConfirmationWindowToggle;
  }

  public void setOrderConfirmationWindowToggle(CoinbaseEngPrimeApiApiOrderConfirmationWindowToggleUpdate orderConfirmationWindowToggle) {
    this.orderConfirmationWindowToggle = orderConfirmationWindowToggle;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest studyInputs(CoinbaseEngPrimeApiApiStudyInputs studyInputs) {
    this.studyInputs = studyInputs;
    return this;
  }

   /**
   * Get studyInputs
   * @return studyInputs
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiStudyInputs getStudyInputs() {
    return studyInputs;
  }

  public void setStudyInputs(CoinbaseEngPrimeApiApiStudyInputs studyInputs) {
    this.studyInputs = studyInputs;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest ladderLevelDoubleclickOrdering(CoinbaseEngPrimeApiApiLadderLevelDoubleclickOrderingUpdate ladderLevelDoubleclickOrdering) {
    this.ladderLevelDoubleclickOrdering = ladderLevelDoubleclickOrdering;
    return this;
  }

   /**
   * Get ladderLevelDoubleclickOrdering
   * @return ladderLevelDoubleclickOrdering
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiLadderLevelDoubleclickOrderingUpdate getLadderLevelDoubleclickOrdering() {
    return ladderLevelDoubleclickOrdering;
  }

  public void setLadderLevelDoubleclickOrdering(CoinbaseEngPrimeApiApiLadderLevelDoubleclickOrderingUpdate ladderLevelDoubleclickOrdering) {
    this.ladderLevelDoubleclickOrdering = ladderLevelDoubleclickOrdering;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest chartConfiguration(CoinbaseEngPrimeApiApiChartConfiguration chartConfiguration) {
    this.chartConfiguration = chartConfiguration;
    return this;
  }

   /**
   * Get chartConfiguration
   * @return chartConfiguration
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiChartConfiguration getChartConfiguration() {
    return chartConfiguration;
  }

  public void setChartConfiguration(CoinbaseEngPrimeApiApiChartConfiguration chartConfiguration) {
    this.chartConfiguration = chartConfiguration;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest defaultPortfolio(CoinbaseEngPrimeApiApiDefaultPortfolioUpdate defaultPortfolio) {
    this.defaultPortfolio = defaultPortfolio;
    return this;
  }

   /**
   * Get defaultPortfolio
   * @return defaultPortfolio
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiDefaultPortfolioUpdate getDefaultPortfolio() {
    return defaultPortfolio;
  }

  public void setDefaultPortfolio(CoinbaseEngPrimeApiApiDefaultPortfolioUpdate defaultPortfolio) {
    this.defaultPortfolio = defaultPortfolio;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest showNewUserTradeExperience(CoinbaseEngPrimeApiApiShowNewUserTradeExperienceUpdate showNewUserTradeExperience) {
    this.showNewUserTradeExperience = showNewUserTradeExperience;
    return this;
  }

   /**
   * Get showNewUserTradeExperience
   * @return showNewUserTradeExperience
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiShowNewUserTradeExperienceUpdate getShowNewUserTradeExperience() {
    return showNewUserTradeExperience;
  }

  public void setShowNewUserTradeExperience(CoinbaseEngPrimeApiApiShowNewUserTradeExperienceUpdate showNewUserTradeExperience) {
    this.showNewUserTradeExperience = showNewUserTradeExperience;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest orderCancelConfirmationWindowToggle(CoinbaseEngPrimeApiApiOrderCancelConfirmationWindowToggleUpdate orderCancelConfirmationWindowToggle) {
    this.orderCancelConfirmationWindowToggle = orderCancelConfirmationWindowToggle;
    return this;
  }

   /**
   * Get orderCancelConfirmationWindowToggle
   * @return orderCancelConfirmationWindowToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiOrderCancelConfirmationWindowToggleUpdate getOrderCancelConfirmationWindowToggle() {
    return orderCancelConfirmationWindowToggle;
  }

  public void setOrderCancelConfirmationWindowToggle(CoinbaseEngPrimeApiApiOrderCancelConfirmationWindowToggleUpdate orderCancelConfirmationWindowToggle) {
    this.orderCancelConfirmationWindowToggle = orderCancelConfirmationWindowToggle;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest orderTableColumns(CoinbaseEngPrimeApiApiOrderTableColumnUpdate orderTableColumns) {
    this.orderTableColumns = orderTableColumns;
    return this;
  }

   /**
   * Get orderTableColumns
   * @return orderTableColumns
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiOrderTableColumnUpdate getOrderTableColumns() {
    return orderTableColumns;
  }

  public void setOrderTableColumns(CoinbaseEngPrimeApiApiOrderTableColumnUpdate orderTableColumns) {
    this.orderTableColumns = orderTableColumns;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest pinnedOrders(CoinbaseEngPrimeApiApiPinnedOrdersUpdate pinnedOrders) {
    this.pinnedOrders = pinnedOrders;
    return this;
  }

   /**
   * Get pinnedOrders
   * @return pinnedOrders
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiPinnedOrdersUpdate getPinnedOrders() {
    return pinnedOrders;
  }

  public void setPinnedOrders(CoinbaseEngPrimeApiApiPinnedOrdersUpdate pinnedOrders) {
    this.pinnedOrders = pinnedOrders;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest keyboardShortcutsToggle(CoinbaseEngPrimeApiApiKeyboardShortcutsToggleUpdate keyboardShortcutsToggle) {
    this.keyboardShortcutsToggle = keyboardShortcutsToggle;
    return this;
  }

   /**
   * Get keyboardShortcutsToggle
   * @return keyboardShortcutsToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiKeyboardShortcutsToggleUpdate getKeyboardShortcutsToggle() {
    return keyboardShortcutsToggle;
  }

  public void setKeyboardShortcutsToggle(CoinbaseEngPrimeApiApiKeyboardShortcutsToggleUpdate keyboardShortcutsToggle) {
    this.keyboardShortcutsToggle = keyboardShortcutsToggle;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest orderRaiseExactToggle(CoinbaseEngPrimeApiApiOrderRaiseExactToggleUpdate orderRaiseExactToggle) {
    this.orderRaiseExactToggle = orderRaiseExactToggle;
    return this;
  }

   /**
   * Get orderRaiseExactToggle
   * @return orderRaiseExactToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiOrderRaiseExactToggleUpdate getOrderRaiseExactToggle() {
    return orderRaiseExactToggle;
  }

  public void setOrderRaiseExactToggle(CoinbaseEngPrimeApiApiOrderRaiseExactToggleUpdate orderRaiseExactToggle) {
    this.orderRaiseExactToggle = orderRaiseExactToggle;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest orderFormPersistToggle(CoinbaseEngPrimeApiApiOrderFormPersistToggleUpdate orderFormPersistToggle) {
    this.orderFormPersistToggle = orderFormPersistToggle;
    return this;
  }

   /**
   * Get orderFormPersistToggle
   * @return orderFormPersistToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiOrderFormPersistToggleUpdate getOrderFormPersistToggle() {
    return orderFormPersistToggle;
  }

  public void setOrderFormPersistToggle(CoinbaseEngPrimeApiApiOrderFormPersistToggleUpdate orderFormPersistToggle) {
    this.orderFormPersistToggle = orderFormPersistToggle;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest orderFormSizeWarningsToggle(CoinbaseEngPrimeApiApiOrderFormSizeWarningsToggleUpdate orderFormSizeWarningsToggle) {
    this.orderFormSizeWarningsToggle = orderFormSizeWarningsToggle;
    return this;
  }

   /**
   * Get orderFormSizeWarningsToggle
   * @return orderFormSizeWarningsToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiOrderFormSizeWarningsToggleUpdate getOrderFormSizeWarningsToggle() {
    return orderFormSizeWarningsToggle;
  }

  public void setOrderFormSizeWarningsToggle(CoinbaseEngPrimeApiApiOrderFormSizeWarningsToggleUpdate orderFormSizeWarningsToggle) {
    this.orderFormSizeWarningsToggle = orderFormSizeWarningsToggle;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest ladderIcebergToggle(CoinbaseEngPrimeApiApiLadderIcebergToggleUpdate ladderIcebergToggle) {
    this.ladderIcebergToggle = ladderIcebergToggle;
    return this;
  }

   /**
   * Get ladderIcebergToggle
   * @return ladderIcebergToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiLadderIcebergToggleUpdate getLadderIcebergToggle() {
    return ladderIcebergToggle;
  }

  public void setLadderIcebergToggle(CoinbaseEngPrimeApiApiLadderIcebergToggleUpdate ladderIcebergToggle) {
    this.ladderIcebergToggle = ladderIcebergToggle;
  }

  public CoinbaseEngPrimeApiApiPostUserPreferencesRequest primeBetaToggle(CoinbaseEngPrimeApiApiPrimeBetaToggleUpdate primeBetaToggle) {
    this.primeBetaToggle = primeBetaToggle;
    return this;
  }

   /**
   * Get primeBetaToggle
   * @return primeBetaToggle
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiPrimeBetaToggleUpdate getPrimeBetaToggle() {
    return primeBetaToggle;
  }

  public void setPrimeBetaToggle(CoinbaseEngPrimeApiApiPrimeBetaToggleUpdate primeBetaToggle) {
    this.primeBetaToggle = primeBetaToggle;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPostUserPreferencesRequest coinbaseEngPrimeApiApiPostUserPreferencesRequest = (CoinbaseEngPrimeApiApiPostUserPreferencesRequest) o;
    return Objects.equals(this.userId, coinbaseEngPrimeApiApiPostUserPreferencesRequest.userId) &&
        Objects.equals(this.favoriteProducts, coinbaseEngPrimeApiApiPostUserPreferencesRequest.favoriteProducts) &&
        Objects.equals(this.orderConfirmationWindowToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.orderConfirmationWindowToggle) &&
        Objects.equals(this.studyInputs, coinbaseEngPrimeApiApiPostUserPreferencesRequest.studyInputs) &&
        Objects.equals(this.ladderLevelDoubleclickOrdering, coinbaseEngPrimeApiApiPostUserPreferencesRequest.ladderLevelDoubleclickOrdering) &&
        Objects.equals(this.chartConfiguration, coinbaseEngPrimeApiApiPostUserPreferencesRequest.chartConfiguration) &&
        Objects.equals(this.defaultPortfolio, coinbaseEngPrimeApiApiPostUserPreferencesRequest.defaultPortfolio) &&
        Objects.equals(this.showNewUserTradeExperience, coinbaseEngPrimeApiApiPostUserPreferencesRequest.showNewUserTradeExperience) &&
        Objects.equals(this.orderCancelConfirmationWindowToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.orderCancelConfirmationWindowToggle) &&
        Objects.equals(this.orderTableColumns, coinbaseEngPrimeApiApiPostUserPreferencesRequest.orderTableColumns) &&
        Objects.equals(this.pinnedOrders, coinbaseEngPrimeApiApiPostUserPreferencesRequest.pinnedOrders) &&
        Objects.equals(this.keyboardShortcutsToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.keyboardShortcutsToggle) &&
        Objects.equals(this.orderRaiseExactToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.orderRaiseExactToggle) &&
        Objects.equals(this.orderFormPersistToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.orderFormPersistToggle) &&
        Objects.equals(this.orderFormSizeWarningsToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.orderFormSizeWarningsToggle) &&
        Objects.equals(this.ladderIcebergToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.ladderIcebergToggle) &&
        Objects.equals(this.primeBetaToggle, coinbaseEngPrimeApiApiPostUserPreferencesRequest.primeBetaToggle);
  }

  @Override
  public int hashCode() {
    return Objects.hash(userId, favoriteProducts, orderConfirmationWindowToggle, studyInputs, ladderLevelDoubleclickOrdering, chartConfiguration, defaultPortfolio, showNewUserTradeExperience, orderCancelConfirmationWindowToggle, orderTableColumns, pinnedOrders, keyboardShortcutsToggle, orderRaiseExactToggle, orderFormPersistToggle, orderFormSizeWarningsToggle, ladderIcebergToggle, primeBetaToggle);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPostUserPreferencesRequest {\n");
    
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    favoriteProducts: ").append(toIndentedString(favoriteProducts)).append("\n");
    sb.append("    orderConfirmationWindowToggle: ").append(toIndentedString(orderConfirmationWindowToggle)).append("\n");
    sb.append("    studyInputs: ").append(toIndentedString(studyInputs)).append("\n");
    sb.append("    ladderLevelDoubleclickOrdering: ").append(toIndentedString(ladderLevelDoubleclickOrdering)).append("\n");
    sb.append("    chartConfiguration: ").append(toIndentedString(chartConfiguration)).append("\n");
    sb.append("    defaultPortfolio: ").append(toIndentedString(defaultPortfolio)).append("\n");
    sb.append("    showNewUserTradeExperience: ").append(toIndentedString(showNewUserTradeExperience)).append("\n");
    sb.append("    orderCancelConfirmationWindowToggle: ").append(toIndentedString(orderCancelConfirmationWindowToggle)).append("\n");
    sb.append("    orderTableColumns: ").append(toIndentedString(orderTableColumns)).append("\n");
    sb.append("    pinnedOrders: ").append(toIndentedString(pinnedOrders)).append("\n");
    sb.append("    keyboardShortcutsToggle: ").append(toIndentedString(keyboardShortcutsToggle)).append("\n");
    sb.append("    orderRaiseExactToggle: ").append(toIndentedString(orderRaiseExactToggle)).append("\n");
    sb.append("    orderFormPersistToggle: ").append(toIndentedString(orderFormPersistToggle)).append("\n");
    sb.append("    orderFormSizeWarningsToggle: ").append(toIndentedString(orderFormSizeWarningsToggle)).append("\n");
    sb.append("    ladderIcebergToggle: ").append(toIndentedString(ladderIcebergToggle)).append("\n");
    sb.append("    primeBetaToggle: ").append(toIndentedString(primeBetaToggle)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

