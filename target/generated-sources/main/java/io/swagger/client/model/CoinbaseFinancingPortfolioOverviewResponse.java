/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingPortfolioFinancingOverview;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseFinancingPortfolioOverviewResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingPortfolioOverviewResponse {
  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("cdal_enabled")
  private Boolean cdalEnabled = null;

  @SerializedName("pm_enabled")
  private Boolean pmEnabled = null;

  @SerializedName("tf_enabled")
  private Boolean tfEnabled = null;

  @SerializedName("bl_enabled")
  private Boolean blEnabled = null;

  @SerializedName("portfolios")
  private List<CoinbaseFinancingPortfolioFinancingOverview> portfolios = null;

  public CoinbaseFinancingPortfolioOverviewResponse portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseFinancingPortfolioOverviewResponse cdalEnabled(Boolean cdalEnabled) {
    this.cdalEnabled = cdalEnabled;
    return this;
  }

   /**
   * Get cdalEnabled
   * @return cdalEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isCdalEnabled() {
    return cdalEnabled;
  }

  public void setCdalEnabled(Boolean cdalEnabled) {
    this.cdalEnabled = cdalEnabled;
  }

  public CoinbaseFinancingPortfolioOverviewResponse pmEnabled(Boolean pmEnabled) {
    this.pmEnabled = pmEnabled;
    return this;
  }

   /**
   * Get pmEnabled
   * @return pmEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isPmEnabled() {
    return pmEnabled;
  }

  public void setPmEnabled(Boolean pmEnabled) {
    this.pmEnabled = pmEnabled;
  }

  public CoinbaseFinancingPortfolioOverviewResponse tfEnabled(Boolean tfEnabled) {
    this.tfEnabled = tfEnabled;
    return this;
  }

   /**
   * Get tfEnabled
   * @return tfEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isTfEnabled() {
    return tfEnabled;
  }

  public void setTfEnabled(Boolean tfEnabled) {
    this.tfEnabled = tfEnabled;
  }

  public CoinbaseFinancingPortfolioOverviewResponse blEnabled(Boolean blEnabled) {
    this.blEnabled = blEnabled;
    return this;
  }

   /**
   * Get blEnabled
   * @return blEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isBlEnabled() {
    return blEnabled;
  }

  public void setBlEnabled(Boolean blEnabled) {
    this.blEnabled = blEnabled;
  }

  public CoinbaseFinancingPortfolioOverviewResponse portfolios(List<CoinbaseFinancingPortfolioFinancingOverview> portfolios) {
    this.portfolios = portfolios;
    return this;
  }

  public CoinbaseFinancingPortfolioOverviewResponse addPortfoliosItem(CoinbaseFinancingPortfolioFinancingOverview portfoliosItem) {
    if (this.portfolios == null) {
      this.portfolios = new ArrayList<CoinbaseFinancingPortfolioFinancingOverview>();
    }
    this.portfolios.add(portfoliosItem);
    return this;
  }

   /**
   * Get portfolios
   * @return portfolios
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingPortfolioFinancingOverview> getPortfolios() {
    return portfolios;
  }

  public void setPortfolios(List<CoinbaseFinancingPortfolioFinancingOverview> portfolios) {
    this.portfolios = portfolios;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingPortfolioOverviewResponse coinbaseFinancingPortfolioOverviewResponse = (CoinbaseFinancingPortfolioOverviewResponse) o;
    return Objects.equals(this.portfolioId, coinbaseFinancingPortfolioOverviewResponse.portfolioId) &&
        Objects.equals(this.cdalEnabled, coinbaseFinancingPortfolioOverviewResponse.cdalEnabled) &&
        Objects.equals(this.pmEnabled, coinbaseFinancingPortfolioOverviewResponse.pmEnabled) &&
        Objects.equals(this.tfEnabled, coinbaseFinancingPortfolioOverviewResponse.tfEnabled) &&
        Objects.equals(this.blEnabled, coinbaseFinancingPortfolioOverviewResponse.blEnabled) &&
        Objects.equals(this.portfolios, coinbaseFinancingPortfolioOverviewResponse.portfolios);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioId, cdalEnabled, pmEnabled, tfEnabled, blEnabled, portfolios);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingPortfolioOverviewResponse {\n");
    
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    cdalEnabled: ").append(toIndentedString(cdalEnabled)).append("\n");
    sb.append("    pmEnabled: ").append(toIndentedString(pmEnabled)).append("\n");
    sb.append("    tfEnabled: ").append(toIndentedString(tfEnabled)).append("\n");
    sb.append("    blEnabled: ").append(toIndentedString(blEnabled)).append("\n");
    sb.append("    portfolios: ").append(toIndentedString(portfolios)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

