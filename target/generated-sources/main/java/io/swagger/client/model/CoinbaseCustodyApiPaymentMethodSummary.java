/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiPaymentMethodType;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseCustodyApiPaymentMethodSummary
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiPaymentMethodSummary {
  @SerializedName("id")
  private String id = null;

  @SerializedName("payment_method_type")
  private CoinbaseCustodyApiPaymentMethodType paymentMethodType = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("obfuscated_account_number")
  private String obfuscatedAccountNumber = null;

  @SerializedName("created_at")
  private OffsetDateTime createdAt = null;

  @SerializedName("updated_at")
  private OffsetDateTime updatedAt = null;

  @SerializedName("bank_name")
  private String bankName = null;

  @SerializedName("icon_id")
  private String iconId = null;

  public CoinbaseCustodyApiPaymentMethodSummary id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiPaymentMethodSummary paymentMethodType(CoinbaseCustodyApiPaymentMethodType paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
    return this;
  }

   /**
   * Get paymentMethodType
   * @return paymentMethodType
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiPaymentMethodType getPaymentMethodType() {
    return paymentMethodType;
  }

  public void setPaymentMethodType(CoinbaseCustodyApiPaymentMethodType paymentMethodType) {
    this.paymentMethodType = paymentMethodType;
  }

  public CoinbaseCustodyApiPaymentMethodSummary currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseCustodyApiPaymentMethodSummary obfuscatedAccountNumber(String obfuscatedAccountNumber) {
    this.obfuscatedAccountNumber = obfuscatedAccountNumber;
    return this;
  }

   /**
   * Get obfuscatedAccountNumber
   * @return obfuscatedAccountNumber
  **/
  @ApiModelProperty(required = true, value = "")
  public String getObfuscatedAccountNumber() {
    return obfuscatedAccountNumber;
  }

  public void setObfuscatedAccountNumber(String obfuscatedAccountNumber) {
    this.obfuscatedAccountNumber = obfuscatedAccountNumber;
  }

  public CoinbaseCustodyApiPaymentMethodSummary createdAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")
  public OffsetDateTime getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(OffsetDateTime createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiPaymentMethodSummary updatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(OffsetDateTime updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CoinbaseCustodyApiPaymentMethodSummary bankName(String bankName) {
    this.bankName = bankName;
    return this;
  }

   /**
   * Get bankName
   * @return bankName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getBankName() {
    return bankName;
  }

  public void setBankName(String bankName) {
    this.bankName = bankName;
  }

  public CoinbaseCustodyApiPaymentMethodSummary iconId(String iconId) {
    this.iconId = iconId;
    return this;
  }

   /**
   * Get iconId
   * @return iconId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getIconId() {
    return iconId;
  }

  public void setIconId(String iconId) {
    this.iconId = iconId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiPaymentMethodSummary coinbaseCustodyApiPaymentMethodSummary = (CoinbaseCustodyApiPaymentMethodSummary) o;
    return Objects.equals(this.id, coinbaseCustodyApiPaymentMethodSummary.id) &&
        Objects.equals(this.paymentMethodType, coinbaseCustodyApiPaymentMethodSummary.paymentMethodType) &&
        Objects.equals(this.currency, coinbaseCustodyApiPaymentMethodSummary.currency) &&
        Objects.equals(this.obfuscatedAccountNumber, coinbaseCustodyApiPaymentMethodSummary.obfuscatedAccountNumber) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiPaymentMethodSummary.createdAt) &&
        Objects.equals(this.updatedAt, coinbaseCustodyApiPaymentMethodSummary.updatedAt) &&
        Objects.equals(this.bankName, coinbaseCustodyApiPaymentMethodSummary.bankName) &&
        Objects.equals(this.iconId, coinbaseCustodyApiPaymentMethodSummary.iconId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, paymentMethodType, currency, obfuscatedAccountNumber, createdAt, updatedAt, bankName, iconId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiPaymentMethodSummary {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    paymentMethodType: ").append(toIndentedString(paymentMethodType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    obfuscatedAccountNumber: ").append(toIndentedString(obfuscatedAccountNumber)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    bankName: ").append(toIndentedString(bankName)).append("\n");
    sb.append("    iconId: ").append(toIndentedString(iconId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

