/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiMarginCallHistoryRecord;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPMAssetInfo;
import io.swagger.client.model.CoinbaseFinancingAmount;
import io.swagger.client.model.CoinbaseFinancingAssetLongShortPosition;
import io.swagger.client.model.CoinbaseFinancingLoanInfo;
import io.swagger.client.model.CoinbaseFinancingMarginAddOn;
import io.swagger.client.model.CoinbaseFinancingPortfolioAsset;
import io.swagger.client.model.CoinbaseFinancingTFAssetInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiMarginSummary
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiMarginSummary {
  @SerializedName("entity_id")
  private String entityId = null;

  @SerializedName("margin_equity")
  private CoinbaseFinancingAmount marginEquity = null;

  @SerializedName("margin_requirement")
  private CoinbaseFinancingAmount marginRequirement = null;

  @SerializedName("excess_deficit")
  private CoinbaseFinancingAmount excessDeficit = null;

  @SerializedName("tf_credit_limit")
  private CoinbaseFinancingAmount tfCreditLimit = null;

  @SerializedName("tf_credit_consumed")
  private CoinbaseFinancingAmount tfCreditConsumed = null;

  @SerializedName("tf_adjusted_credit_consumed")
  private CoinbaseFinancingAmount tfAdjustedCreditConsumed = null;

  @SerializedName("margin_call_records")
  private List<CoinbaseEngPrimeApiApiMarginCallHistoryRecord> marginCallRecords = null;

  @SerializedName("tf_loans")
  private List<CoinbaseFinancingLoanInfo> tfLoans = null;

  @SerializedName("asset_balances")
  private List<CoinbaseFinancingPortfolioAsset> assetBalances = null;

  @SerializedName("gross_market_value")
  private CoinbaseFinancingAmount grossMarketValue = null;

  @SerializedName("net_market_value")
  private CoinbaseFinancingAmount netMarketValue = null;

  @SerializedName("long_market_value")
  private CoinbaseFinancingAmount longMarketValue = null;

  @SerializedName("non_marginable_long_market_value")
  private CoinbaseFinancingAmount nonMarginableLongMarketValue = null;

  @SerializedName("short_market_value")
  private CoinbaseFinancingAmount shortMarketValue = null;

  @SerializedName("gross_leverage")
  private String grossLeverage = null;

  @SerializedName("net_exposure")
  private String netExposure = null;

  @SerializedName("portfolio_stress_triggered")
  private CoinbaseFinancingMarginAddOn portfolioStressTriggered = null;

  @SerializedName("all_margin_add_ons")
  private List<CoinbaseFinancingMarginAddOn> allMarginAddOns = null;

  @SerializedName("pm_asset_info")
  private List<CoinbaseEngPrimeApiApiPMAssetInfo> pmAssetInfo = null;

  @SerializedName("tf_asset_info")
  private List<CoinbaseFinancingTFAssetInfo> tfAssetInfo = null;

  @SerializedName("short_collateral_balance")
  private String shortCollateralBalance = null;

  @SerializedName("cash_value")
  private String cashValue = null;

  @SerializedName("total_settlement_due")
  private String totalSettlementDue = null;

  @SerializedName("total_settlement_past_due")
  private String totalSettlementPastDue = null;

  @SerializedName("total_settlement_due_next")
  private String totalSettlementDueNext = null;

  @SerializedName("asset_long_short_positions")
  private List<CoinbaseFinancingAssetLongShortPosition> assetLongShortPositions = null;

  public CoinbaseEngPrimeApiApiMarginSummary entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @ApiModelProperty(value = "")
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public CoinbaseEngPrimeApiApiMarginSummary marginEquity(CoinbaseFinancingAmount marginEquity) {
    this.marginEquity = marginEquity;
    return this;
  }

   /**
   * Get marginEquity
   * @return marginEquity
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getMarginEquity() {
    return marginEquity;
  }

  public void setMarginEquity(CoinbaseFinancingAmount marginEquity) {
    this.marginEquity = marginEquity;
  }

  public CoinbaseEngPrimeApiApiMarginSummary marginRequirement(CoinbaseFinancingAmount marginRequirement) {
    this.marginRequirement = marginRequirement;
    return this;
  }

   /**
   * Get marginRequirement
   * @return marginRequirement
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getMarginRequirement() {
    return marginRequirement;
  }

  public void setMarginRequirement(CoinbaseFinancingAmount marginRequirement) {
    this.marginRequirement = marginRequirement;
  }

  public CoinbaseEngPrimeApiApiMarginSummary excessDeficit(CoinbaseFinancingAmount excessDeficit) {
    this.excessDeficit = excessDeficit;
    return this;
  }

   /**
   * Get excessDeficit
   * @return excessDeficit
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getExcessDeficit() {
    return excessDeficit;
  }

  public void setExcessDeficit(CoinbaseFinancingAmount excessDeficit) {
    this.excessDeficit = excessDeficit;
  }

  public CoinbaseEngPrimeApiApiMarginSummary tfCreditLimit(CoinbaseFinancingAmount tfCreditLimit) {
    this.tfCreditLimit = tfCreditLimit;
    return this;
  }

   /**
   * Get tfCreditLimit
   * @return tfCreditLimit
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfCreditLimit() {
    return tfCreditLimit;
  }

  public void setTfCreditLimit(CoinbaseFinancingAmount tfCreditLimit) {
    this.tfCreditLimit = tfCreditLimit;
  }

  public CoinbaseEngPrimeApiApiMarginSummary tfCreditConsumed(CoinbaseFinancingAmount tfCreditConsumed) {
    this.tfCreditConsumed = tfCreditConsumed;
    return this;
  }

   /**
   * Get tfCreditConsumed
   * @return tfCreditConsumed
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfCreditConsumed() {
    return tfCreditConsumed;
  }

  public void setTfCreditConsumed(CoinbaseFinancingAmount tfCreditConsumed) {
    this.tfCreditConsumed = tfCreditConsumed;
  }

  public CoinbaseEngPrimeApiApiMarginSummary tfAdjustedCreditConsumed(CoinbaseFinancingAmount tfAdjustedCreditConsumed) {
    this.tfAdjustedCreditConsumed = tfAdjustedCreditConsumed;
    return this;
  }

   /**
   * Get tfAdjustedCreditConsumed
   * @return tfAdjustedCreditConsumed
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfAdjustedCreditConsumed() {
    return tfAdjustedCreditConsumed;
  }

  public void setTfAdjustedCreditConsumed(CoinbaseFinancingAmount tfAdjustedCreditConsumed) {
    this.tfAdjustedCreditConsumed = tfAdjustedCreditConsumed;
  }

  public CoinbaseEngPrimeApiApiMarginSummary marginCallRecords(List<CoinbaseEngPrimeApiApiMarginCallHistoryRecord> marginCallRecords) {
    this.marginCallRecords = marginCallRecords;
    return this;
  }

  public CoinbaseEngPrimeApiApiMarginSummary addMarginCallRecordsItem(CoinbaseEngPrimeApiApiMarginCallHistoryRecord marginCallRecordsItem) {
    if (this.marginCallRecords == null) {
      this.marginCallRecords = new ArrayList<CoinbaseEngPrimeApiApiMarginCallHistoryRecord>();
    }
    this.marginCallRecords.add(marginCallRecordsItem);
    return this;
  }

   /**
   * Get marginCallRecords
   * @return marginCallRecords
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiMarginCallHistoryRecord> getMarginCallRecords() {
    return marginCallRecords;
  }

  public void setMarginCallRecords(List<CoinbaseEngPrimeApiApiMarginCallHistoryRecord> marginCallRecords) {
    this.marginCallRecords = marginCallRecords;
  }

  public CoinbaseEngPrimeApiApiMarginSummary tfLoans(List<CoinbaseFinancingLoanInfo> tfLoans) {
    this.tfLoans = tfLoans;
    return this;
  }

  public CoinbaseEngPrimeApiApiMarginSummary addTfLoansItem(CoinbaseFinancingLoanInfo tfLoansItem) {
    if (this.tfLoans == null) {
      this.tfLoans = new ArrayList<CoinbaseFinancingLoanInfo>();
    }
    this.tfLoans.add(tfLoansItem);
    return this;
  }

   /**
   * Get tfLoans
   * @return tfLoans
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingLoanInfo> getTfLoans() {
    return tfLoans;
  }

  public void setTfLoans(List<CoinbaseFinancingLoanInfo> tfLoans) {
    this.tfLoans = tfLoans;
  }

  public CoinbaseEngPrimeApiApiMarginSummary assetBalances(List<CoinbaseFinancingPortfolioAsset> assetBalances) {
    this.assetBalances = assetBalances;
    return this;
  }

  public CoinbaseEngPrimeApiApiMarginSummary addAssetBalancesItem(CoinbaseFinancingPortfolioAsset assetBalancesItem) {
    if (this.assetBalances == null) {
      this.assetBalances = new ArrayList<CoinbaseFinancingPortfolioAsset>();
    }
    this.assetBalances.add(assetBalancesItem);
    return this;
  }

   /**
   * Get assetBalances
   * @return assetBalances
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingPortfolioAsset> getAssetBalances() {
    return assetBalances;
  }

  public void setAssetBalances(List<CoinbaseFinancingPortfolioAsset> assetBalances) {
    this.assetBalances = assetBalances;
  }

  public CoinbaseEngPrimeApiApiMarginSummary grossMarketValue(CoinbaseFinancingAmount grossMarketValue) {
    this.grossMarketValue = grossMarketValue;
    return this;
  }

   /**
   * Get grossMarketValue
   * @return grossMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getGrossMarketValue() {
    return grossMarketValue;
  }

  public void setGrossMarketValue(CoinbaseFinancingAmount grossMarketValue) {
    this.grossMarketValue = grossMarketValue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary netMarketValue(CoinbaseFinancingAmount netMarketValue) {
    this.netMarketValue = netMarketValue;
    return this;
  }

   /**
   * Get netMarketValue
   * @return netMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getNetMarketValue() {
    return netMarketValue;
  }

  public void setNetMarketValue(CoinbaseFinancingAmount netMarketValue) {
    this.netMarketValue = netMarketValue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary longMarketValue(CoinbaseFinancingAmount longMarketValue) {
    this.longMarketValue = longMarketValue;
    return this;
  }

   /**
   * Get longMarketValue
   * @return longMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getLongMarketValue() {
    return longMarketValue;
  }

  public void setLongMarketValue(CoinbaseFinancingAmount longMarketValue) {
    this.longMarketValue = longMarketValue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary nonMarginableLongMarketValue(CoinbaseFinancingAmount nonMarginableLongMarketValue) {
    this.nonMarginableLongMarketValue = nonMarginableLongMarketValue;
    return this;
  }

   /**
   * Get nonMarginableLongMarketValue
   * @return nonMarginableLongMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getNonMarginableLongMarketValue() {
    return nonMarginableLongMarketValue;
  }

  public void setNonMarginableLongMarketValue(CoinbaseFinancingAmount nonMarginableLongMarketValue) {
    this.nonMarginableLongMarketValue = nonMarginableLongMarketValue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary shortMarketValue(CoinbaseFinancingAmount shortMarketValue) {
    this.shortMarketValue = shortMarketValue;
    return this;
  }

   /**
   * Get shortMarketValue
   * @return shortMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getShortMarketValue() {
    return shortMarketValue;
  }

  public void setShortMarketValue(CoinbaseFinancingAmount shortMarketValue) {
    this.shortMarketValue = shortMarketValue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary grossLeverage(String grossLeverage) {
    this.grossLeverage = grossLeverage;
    return this;
  }

   /**
   * Get grossLeverage
   * @return grossLeverage
  **/
  @ApiModelProperty(value = "")
  public String getGrossLeverage() {
    return grossLeverage;
  }

  public void setGrossLeverage(String grossLeverage) {
    this.grossLeverage = grossLeverage;
  }

  public CoinbaseEngPrimeApiApiMarginSummary netExposure(String netExposure) {
    this.netExposure = netExposure;
    return this;
  }

   /**
   * Get netExposure
   * @return netExposure
  **/
  @ApiModelProperty(value = "")
  public String getNetExposure() {
    return netExposure;
  }

  public void setNetExposure(String netExposure) {
    this.netExposure = netExposure;
  }

  public CoinbaseEngPrimeApiApiMarginSummary portfolioStressTriggered(CoinbaseFinancingMarginAddOn portfolioStressTriggered) {
    this.portfolioStressTriggered = portfolioStressTriggered;
    return this;
  }

   /**
   * Get portfolioStressTriggered
   * @return portfolioStressTriggered
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingMarginAddOn getPortfolioStressTriggered() {
    return portfolioStressTriggered;
  }

  public void setPortfolioStressTriggered(CoinbaseFinancingMarginAddOn portfolioStressTriggered) {
    this.portfolioStressTriggered = portfolioStressTriggered;
  }

  public CoinbaseEngPrimeApiApiMarginSummary allMarginAddOns(List<CoinbaseFinancingMarginAddOn> allMarginAddOns) {
    this.allMarginAddOns = allMarginAddOns;
    return this;
  }

  public CoinbaseEngPrimeApiApiMarginSummary addAllMarginAddOnsItem(CoinbaseFinancingMarginAddOn allMarginAddOnsItem) {
    if (this.allMarginAddOns == null) {
      this.allMarginAddOns = new ArrayList<CoinbaseFinancingMarginAddOn>();
    }
    this.allMarginAddOns.add(allMarginAddOnsItem);
    return this;
  }

   /**
   * Get allMarginAddOns
   * @return allMarginAddOns
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingMarginAddOn> getAllMarginAddOns() {
    return allMarginAddOns;
  }

  public void setAllMarginAddOns(List<CoinbaseFinancingMarginAddOn> allMarginAddOns) {
    this.allMarginAddOns = allMarginAddOns;
  }

  public CoinbaseEngPrimeApiApiMarginSummary pmAssetInfo(List<CoinbaseEngPrimeApiApiPMAssetInfo> pmAssetInfo) {
    this.pmAssetInfo = pmAssetInfo;
    return this;
  }

  public CoinbaseEngPrimeApiApiMarginSummary addPmAssetInfoItem(CoinbaseEngPrimeApiApiPMAssetInfo pmAssetInfoItem) {
    if (this.pmAssetInfo == null) {
      this.pmAssetInfo = new ArrayList<CoinbaseEngPrimeApiApiPMAssetInfo>();
    }
    this.pmAssetInfo.add(pmAssetInfoItem);
    return this;
  }

   /**
   * Get pmAssetInfo
   * @return pmAssetInfo
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiPMAssetInfo> getPmAssetInfo() {
    return pmAssetInfo;
  }

  public void setPmAssetInfo(List<CoinbaseEngPrimeApiApiPMAssetInfo> pmAssetInfo) {
    this.pmAssetInfo = pmAssetInfo;
  }

  public CoinbaseEngPrimeApiApiMarginSummary tfAssetInfo(List<CoinbaseFinancingTFAssetInfo> tfAssetInfo) {
    this.tfAssetInfo = tfAssetInfo;
    return this;
  }

  public CoinbaseEngPrimeApiApiMarginSummary addTfAssetInfoItem(CoinbaseFinancingTFAssetInfo tfAssetInfoItem) {
    if (this.tfAssetInfo == null) {
      this.tfAssetInfo = new ArrayList<CoinbaseFinancingTFAssetInfo>();
    }
    this.tfAssetInfo.add(tfAssetInfoItem);
    return this;
  }

   /**
   * Get tfAssetInfo
   * @return tfAssetInfo
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingTFAssetInfo> getTfAssetInfo() {
    return tfAssetInfo;
  }

  public void setTfAssetInfo(List<CoinbaseFinancingTFAssetInfo> tfAssetInfo) {
    this.tfAssetInfo = tfAssetInfo;
  }

  public CoinbaseEngPrimeApiApiMarginSummary shortCollateralBalance(String shortCollateralBalance) {
    this.shortCollateralBalance = shortCollateralBalance;
    return this;
  }

   /**
   * Get shortCollateralBalance
   * @return shortCollateralBalance
  **/
  @ApiModelProperty(value = "")
  public String getShortCollateralBalance() {
    return shortCollateralBalance;
  }

  public void setShortCollateralBalance(String shortCollateralBalance) {
    this.shortCollateralBalance = shortCollateralBalance;
  }

  public CoinbaseEngPrimeApiApiMarginSummary cashValue(String cashValue) {
    this.cashValue = cashValue;
    return this;
  }

   /**
   * Get cashValue
   * @return cashValue
  **/
  @ApiModelProperty(value = "")
  public String getCashValue() {
    return cashValue;
  }

  public void setCashValue(String cashValue) {
    this.cashValue = cashValue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary totalSettlementDue(String totalSettlementDue) {
    this.totalSettlementDue = totalSettlementDue;
    return this;
  }

   /**
   * Get totalSettlementDue
   * @return totalSettlementDue
  **/
  @ApiModelProperty(value = "")
  public String getTotalSettlementDue() {
    return totalSettlementDue;
  }

  public void setTotalSettlementDue(String totalSettlementDue) {
    this.totalSettlementDue = totalSettlementDue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary totalSettlementPastDue(String totalSettlementPastDue) {
    this.totalSettlementPastDue = totalSettlementPastDue;
    return this;
  }

   /**
   * Get totalSettlementPastDue
   * @return totalSettlementPastDue
  **/
  @ApiModelProperty(value = "")
  public String getTotalSettlementPastDue() {
    return totalSettlementPastDue;
  }

  public void setTotalSettlementPastDue(String totalSettlementPastDue) {
    this.totalSettlementPastDue = totalSettlementPastDue;
  }

  public CoinbaseEngPrimeApiApiMarginSummary totalSettlementDueNext(String totalSettlementDueNext) {
    this.totalSettlementDueNext = totalSettlementDueNext;
    return this;
  }

   /**
   * Get totalSettlementDueNext
   * @return totalSettlementDueNext
  **/
  @ApiModelProperty(value = "")
  public String getTotalSettlementDueNext() {
    return totalSettlementDueNext;
  }

  public void setTotalSettlementDueNext(String totalSettlementDueNext) {
    this.totalSettlementDueNext = totalSettlementDueNext;
  }

  public CoinbaseEngPrimeApiApiMarginSummary assetLongShortPositions(List<CoinbaseFinancingAssetLongShortPosition> assetLongShortPositions) {
    this.assetLongShortPositions = assetLongShortPositions;
    return this;
  }

  public CoinbaseEngPrimeApiApiMarginSummary addAssetLongShortPositionsItem(CoinbaseFinancingAssetLongShortPosition assetLongShortPositionsItem) {
    if (this.assetLongShortPositions == null) {
      this.assetLongShortPositions = new ArrayList<CoinbaseFinancingAssetLongShortPosition>();
    }
    this.assetLongShortPositions.add(assetLongShortPositionsItem);
    return this;
  }

   /**
   * Get assetLongShortPositions
   * @return assetLongShortPositions
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingAssetLongShortPosition> getAssetLongShortPositions() {
    return assetLongShortPositions;
  }

  public void setAssetLongShortPositions(List<CoinbaseFinancingAssetLongShortPosition> assetLongShortPositions) {
    this.assetLongShortPositions = assetLongShortPositions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiMarginSummary coinbaseEngPrimeApiApiMarginSummary = (CoinbaseEngPrimeApiApiMarginSummary) o;
    return Objects.equals(this.entityId, coinbaseEngPrimeApiApiMarginSummary.entityId) &&
        Objects.equals(this.marginEquity, coinbaseEngPrimeApiApiMarginSummary.marginEquity) &&
        Objects.equals(this.marginRequirement, coinbaseEngPrimeApiApiMarginSummary.marginRequirement) &&
        Objects.equals(this.excessDeficit, coinbaseEngPrimeApiApiMarginSummary.excessDeficit) &&
        Objects.equals(this.tfCreditLimit, coinbaseEngPrimeApiApiMarginSummary.tfCreditLimit) &&
        Objects.equals(this.tfCreditConsumed, coinbaseEngPrimeApiApiMarginSummary.tfCreditConsumed) &&
        Objects.equals(this.tfAdjustedCreditConsumed, coinbaseEngPrimeApiApiMarginSummary.tfAdjustedCreditConsumed) &&
        Objects.equals(this.marginCallRecords, coinbaseEngPrimeApiApiMarginSummary.marginCallRecords) &&
        Objects.equals(this.tfLoans, coinbaseEngPrimeApiApiMarginSummary.tfLoans) &&
        Objects.equals(this.assetBalances, coinbaseEngPrimeApiApiMarginSummary.assetBalances) &&
        Objects.equals(this.grossMarketValue, coinbaseEngPrimeApiApiMarginSummary.grossMarketValue) &&
        Objects.equals(this.netMarketValue, coinbaseEngPrimeApiApiMarginSummary.netMarketValue) &&
        Objects.equals(this.longMarketValue, coinbaseEngPrimeApiApiMarginSummary.longMarketValue) &&
        Objects.equals(this.nonMarginableLongMarketValue, coinbaseEngPrimeApiApiMarginSummary.nonMarginableLongMarketValue) &&
        Objects.equals(this.shortMarketValue, coinbaseEngPrimeApiApiMarginSummary.shortMarketValue) &&
        Objects.equals(this.grossLeverage, coinbaseEngPrimeApiApiMarginSummary.grossLeverage) &&
        Objects.equals(this.netExposure, coinbaseEngPrimeApiApiMarginSummary.netExposure) &&
        Objects.equals(this.portfolioStressTriggered, coinbaseEngPrimeApiApiMarginSummary.portfolioStressTriggered) &&
        Objects.equals(this.allMarginAddOns, coinbaseEngPrimeApiApiMarginSummary.allMarginAddOns) &&
        Objects.equals(this.pmAssetInfo, coinbaseEngPrimeApiApiMarginSummary.pmAssetInfo) &&
        Objects.equals(this.tfAssetInfo, coinbaseEngPrimeApiApiMarginSummary.tfAssetInfo) &&
        Objects.equals(this.shortCollateralBalance, coinbaseEngPrimeApiApiMarginSummary.shortCollateralBalance) &&
        Objects.equals(this.cashValue, coinbaseEngPrimeApiApiMarginSummary.cashValue) &&
        Objects.equals(this.totalSettlementDue, coinbaseEngPrimeApiApiMarginSummary.totalSettlementDue) &&
        Objects.equals(this.totalSettlementPastDue, coinbaseEngPrimeApiApiMarginSummary.totalSettlementPastDue) &&
        Objects.equals(this.totalSettlementDueNext, coinbaseEngPrimeApiApiMarginSummary.totalSettlementDueNext) &&
        Objects.equals(this.assetLongShortPositions, coinbaseEngPrimeApiApiMarginSummary.assetLongShortPositions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, marginEquity, marginRequirement, excessDeficit, tfCreditLimit, tfCreditConsumed, tfAdjustedCreditConsumed, marginCallRecords, tfLoans, assetBalances, grossMarketValue, netMarketValue, longMarketValue, nonMarginableLongMarketValue, shortMarketValue, grossLeverage, netExposure, portfolioStressTriggered, allMarginAddOns, pmAssetInfo, tfAssetInfo, shortCollateralBalance, cashValue, totalSettlementDue, totalSettlementPastDue, totalSettlementDueNext, assetLongShortPositions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiMarginSummary {\n");
    
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    marginEquity: ").append(toIndentedString(marginEquity)).append("\n");
    sb.append("    marginRequirement: ").append(toIndentedString(marginRequirement)).append("\n");
    sb.append("    excessDeficit: ").append(toIndentedString(excessDeficit)).append("\n");
    sb.append("    tfCreditLimit: ").append(toIndentedString(tfCreditLimit)).append("\n");
    sb.append("    tfCreditConsumed: ").append(toIndentedString(tfCreditConsumed)).append("\n");
    sb.append("    tfAdjustedCreditConsumed: ").append(toIndentedString(tfAdjustedCreditConsumed)).append("\n");
    sb.append("    marginCallRecords: ").append(toIndentedString(marginCallRecords)).append("\n");
    sb.append("    tfLoans: ").append(toIndentedString(tfLoans)).append("\n");
    sb.append("    assetBalances: ").append(toIndentedString(assetBalances)).append("\n");
    sb.append("    grossMarketValue: ").append(toIndentedString(grossMarketValue)).append("\n");
    sb.append("    netMarketValue: ").append(toIndentedString(netMarketValue)).append("\n");
    sb.append("    longMarketValue: ").append(toIndentedString(longMarketValue)).append("\n");
    sb.append("    nonMarginableLongMarketValue: ").append(toIndentedString(nonMarginableLongMarketValue)).append("\n");
    sb.append("    shortMarketValue: ").append(toIndentedString(shortMarketValue)).append("\n");
    sb.append("    grossLeverage: ").append(toIndentedString(grossLeverage)).append("\n");
    sb.append("    netExposure: ").append(toIndentedString(netExposure)).append("\n");
    sb.append("    portfolioStressTriggered: ").append(toIndentedString(portfolioStressTriggered)).append("\n");
    sb.append("    allMarginAddOns: ").append(toIndentedString(allMarginAddOns)).append("\n");
    sb.append("    pmAssetInfo: ").append(toIndentedString(pmAssetInfo)).append("\n");
    sb.append("    tfAssetInfo: ").append(toIndentedString(tfAssetInfo)).append("\n");
    sb.append("    shortCollateralBalance: ").append(toIndentedString(shortCollateralBalance)).append("\n");
    sb.append("    cashValue: ").append(toIndentedString(cashValue)).append("\n");
    sb.append("    totalSettlementDue: ").append(toIndentedString(totalSettlementDue)).append("\n");
    sb.append("    totalSettlementPastDue: ").append(toIndentedString(totalSettlementPastDue)).append("\n");
    sb.append("    totalSettlementDueNext: ").append(toIndentedString(totalSettlementDueNext)).append("\n");
    sb.append("    assetLongShortPositions: ").append(toIndentedString(assetLongShortPositions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

