/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiTestTransactionState;
import java.io.IOException;

/**
 * CoinbaseCustodyApiTestTransaction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiTestTransaction {
  @SerializedName("id")
  private String id = null;

  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("destination_address")
  private String destinationAddress = null;

  @SerializedName("state")
  private CoinbaseCustodyApiTestTransactionState state = null;

  @SerializedName("vehicle_id")
  private String vehicleId = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("created_at")
  private String createdAt = null;

  @SerializedName("updated_at")
  private String updatedAt = null;

  @SerializedName("transaction_hash")
  private String transactionHash = null;

  @SerializedName("explorer_link")
  private String explorerLink = null;

  public CoinbaseCustodyApiTestTransaction id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiTestTransaction currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CoinbaseCustodyApiTestTransaction destinationAddress(String destinationAddress) {
    this.destinationAddress = destinationAddress;
    return this;
  }

   /**
   * Get destinationAddress
   * @return destinationAddress
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDestinationAddress() {
    return destinationAddress;
  }

  public void setDestinationAddress(String destinationAddress) {
    this.destinationAddress = destinationAddress;
  }

  public CoinbaseCustodyApiTestTransaction state(CoinbaseCustodyApiTestTransactionState state) {
    this.state = state;
    return this;
  }

   /**
   * Get state
   * @return state
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiTestTransactionState getState() {
    return state;
  }

  public void setState(CoinbaseCustodyApiTestTransactionState state) {
    this.state = state;
  }

  public CoinbaseCustodyApiTestTransaction vehicleId(String vehicleId) {
    this.vehicleId = vehicleId;
    return this;
  }

   /**
   * Get vehicleId
   * @return vehicleId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getVehicleId() {
    return vehicleId;
  }

  public void setVehicleId(String vehicleId) {
    this.vehicleId = vehicleId;
  }

  public CoinbaseCustodyApiTestTransaction portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseCustodyApiTestTransaction createdAt(String createdAt) {
    this.createdAt = createdAt;
    return this;
  }

   /**
   * Get createdAt
   * @return createdAt
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCreatedAt() {
    return createdAt;
  }

  public void setCreatedAt(String createdAt) {
    this.createdAt = createdAt;
  }

  public CoinbaseCustodyApiTestTransaction updatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
    return this;
  }

   /**
   * Get updatedAt
   * @return updatedAt
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUpdatedAt() {
    return updatedAt;
  }

  public void setUpdatedAt(String updatedAt) {
    this.updatedAt = updatedAt;
  }

  public CoinbaseCustodyApiTestTransaction transactionHash(String transactionHash) {
    this.transactionHash = transactionHash;
    return this;
  }

   /**
   * Get transactionHash
   * @return transactionHash
  **/
  @ApiModelProperty(value = "")
  public String getTransactionHash() {
    return transactionHash;
  }

  public void setTransactionHash(String transactionHash) {
    this.transactionHash = transactionHash;
  }

  public CoinbaseCustodyApiTestTransaction explorerLink(String explorerLink) {
    this.explorerLink = explorerLink;
    return this;
  }

   /**
   * Get explorerLink
   * @return explorerLink
  **/
  @ApiModelProperty(value = "")
  public String getExplorerLink() {
    return explorerLink;
  }

  public void setExplorerLink(String explorerLink) {
    this.explorerLink = explorerLink;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiTestTransaction coinbaseCustodyApiTestTransaction = (CoinbaseCustodyApiTestTransaction) o;
    return Objects.equals(this.id, coinbaseCustodyApiTestTransaction.id) &&
        Objects.equals(this.currencySymbol, coinbaseCustodyApiTestTransaction.currencySymbol) &&
        Objects.equals(this.destinationAddress, coinbaseCustodyApiTestTransaction.destinationAddress) &&
        Objects.equals(this.state, coinbaseCustodyApiTestTransaction.state) &&
        Objects.equals(this.vehicleId, coinbaseCustodyApiTestTransaction.vehicleId) &&
        Objects.equals(this.portfolioId, coinbaseCustodyApiTestTransaction.portfolioId) &&
        Objects.equals(this.createdAt, coinbaseCustodyApiTestTransaction.createdAt) &&
        Objects.equals(this.updatedAt, coinbaseCustodyApiTestTransaction.updatedAt) &&
        Objects.equals(this.transactionHash, coinbaseCustodyApiTestTransaction.transactionHash) &&
        Objects.equals(this.explorerLink, coinbaseCustodyApiTestTransaction.explorerLink);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, currencySymbol, destinationAddress, state, vehicleId, portfolioId, createdAt, updatedAt, transactionHash, explorerLink);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiTestTransaction {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    destinationAddress: ").append(toIndentedString(destinationAddress)).append("\n");
    sb.append("    state: ").append(toIndentedString(state)).append("\n");
    sb.append("    vehicleId: ").append(toIndentedString(vehicleId)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    createdAt: ").append(toIndentedString(createdAt)).append("\n");
    sb.append("    updatedAt: ").append(toIndentedString(updatedAt)).append("\n");
    sb.append("    transactionHash: ").append(toIndentedString(transactionHash)).append("\n");
    sb.append("    explorerLink: ").append(toIndentedString(explorerLink)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

