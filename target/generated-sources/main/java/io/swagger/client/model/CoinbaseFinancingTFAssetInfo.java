/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingAmount;
import java.io.IOException;

/**
 * CoinbaseFinancingTFAssetInfo
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingTFAssetInfo {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("balance")
  private String balance = null;

  @SerializedName("balance_notional")
  private CoinbaseFinancingAmount balanceNotional = null;

  @SerializedName("market_price")
  private CoinbaseFinancingAmount marketPrice = null;

  @SerializedName("asset_tier")
  private String assetTier = null;

  @SerializedName("adjusted_balance")
  private String adjustedBalance = null;

  @SerializedName("adjusted_balance_notional")
  private CoinbaseFinancingAmount adjustedBalanceNotional = null;

  public CoinbaseFinancingTFAssetInfo symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CoinbaseFinancingTFAssetInfo balance(String balance) {
    this.balance = balance;
    return this;
  }

   /**
   * Get balance
   * @return balance
  **/
  @ApiModelProperty(value = "")
  public String getBalance() {
    return balance;
  }

  public void setBalance(String balance) {
    this.balance = balance;
  }

  public CoinbaseFinancingTFAssetInfo balanceNotional(CoinbaseFinancingAmount balanceNotional) {
    this.balanceNotional = balanceNotional;
    return this;
  }

   /**
   * Get balanceNotional
   * @return balanceNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getBalanceNotional() {
    return balanceNotional;
  }

  public void setBalanceNotional(CoinbaseFinancingAmount balanceNotional) {
    this.balanceNotional = balanceNotional;
  }

  public CoinbaseFinancingTFAssetInfo marketPrice(CoinbaseFinancingAmount marketPrice) {
    this.marketPrice = marketPrice;
    return this;
  }

   /**
   * Get marketPrice
   * @return marketPrice
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getMarketPrice() {
    return marketPrice;
  }

  public void setMarketPrice(CoinbaseFinancingAmount marketPrice) {
    this.marketPrice = marketPrice;
  }

  public CoinbaseFinancingTFAssetInfo assetTier(String assetTier) {
    this.assetTier = assetTier;
    return this;
  }

   /**
   * Get assetTier
   * @return assetTier
  **/
  @ApiModelProperty(value = "")
  public String getAssetTier() {
    return assetTier;
  }

  public void setAssetTier(String assetTier) {
    this.assetTier = assetTier;
  }

  public CoinbaseFinancingTFAssetInfo adjustedBalance(String adjustedBalance) {
    this.adjustedBalance = adjustedBalance;
    return this;
  }

   /**
   * Get adjustedBalance
   * @return adjustedBalance
  **/
  @ApiModelProperty(value = "")
  public String getAdjustedBalance() {
    return adjustedBalance;
  }

  public void setAdjustedBalance(String adjustedBalance) {
    this.adjustedBalance = adjustedBalance;
  }

  public CoinbaseFinancingTFAssetInfo adjustedBalanceNotional(CoinbaseFinancingAmount adjustedBalanceNotional) {
    this.adjustedBalanceNotional = adjustedBalanceNotional;
    return this;
  }

   /**
   * Get adjustedBalanceNotional
   * @return adjustedBalanceNotional
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getAdjustedBalanceNotional() {
    return adjustedBalanceNotional;
  }

  public void setAdjustedBalanceNotional(CoinbaseFinancingAmount adjustedBalanceNotional) {
    this.adjustedBalanceNotional = adjustedBalanceNotional;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingTFAssetInfo coinbaseFinancingTFAssetInfo = (CoinbaseFinancingTFAssetInfo) o;
    return Objects.equals(this.symbol, coinbaseFinancingTFAssetInfo.symbol) &&
        Objects.equals(this.balance, coinbaseFinancingTFAssetInfo.balance) &&
        Objects.equals(this.balanceNotional, coinbaseFinancingTFAssetInfo.balanceNotional) &&
        Objects.equals(this.marketPrice, coinbaseFinancingTFAssetInfo.marketPrice) &&
        Objects.equals(this.assetTier, coinbaseFinancingTFAssetInfo.assetTier) &&
        Objects.equals(this.adjustedBalance, coinbaseFinancingTFAssetInfo.adjustedBalance) &&
        Objects.equals(this.adjustedBalanceNotional, coinbaseFinancingTFAssetInfo.adjustedBalanceNotional);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, balance, balanceNotional, marketPrice, assetTier, adjustedBalance, adjustedBalanceNotional);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingTFAssetInfo {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    balance: ").append(toIndentedString(balance)).append("\n");
    sb.append("    balanceNotional: ").append(toIndentedString(balanceNotional)).append("\n");
    sb.append("    marketPrice: ").append(toIndentedString(marketPrice)).append("\n");
    sb.append("    assetTier: ").append(toIndentedString(assetTier)).append("\n");
    sb.append("    adjustedBalance: ").append(toIndentedString(adjustedBalance)).append("\n");
    sb.append("    adjustedBalanceNotional: ").append(toIndentedString(adjustedBalanceNotional)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

