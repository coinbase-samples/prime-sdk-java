/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiCurrencyType;
import io.swagger.client.model.CoinbaseCustodyApiPropertiesEnabled;
import java.io.IOException;

/**
 * CoinbaseCustodyApiActivityCurrency
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiActivityCurrency {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("properties_enabled")
  private CoinbaseCustodyApiPropertiesEnabled propertiesEnabled = null;

  @SerializedName("decimals")
  private String decimals = null;

  @SerializedName("icon")
  private String icon = null;

  @SerializedName("currency_type")
  private CoinbaseCustodyApiCurrencyType currencyType = null;

  public CoinbaseCustodyApiActivityCurrency symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CoinbaseCustodyApiActivityCurrency propertiesEnabled(CoinbaseCustodyApiPropertiesEnabled propertiesEnabled) {
    this.propertiesEnabled = propertiesEnabled;
    return this;
  }

   /**
   * Get propertiesEnabled
   * @return propertiesEnabled
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiPropertiesEnabled getPropertiesEnabled() {
    return propertiesEnabled;
  }

  public void setPropertiesEnabled(CoinbaseCustodyApiPropertiesEnabled propertiesEnabled) {
    this.propertiesEnabled = propertiesEnabled;
  }

  public CoinbaseCustodyApiActivityCurrency decimals(String decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * Get decimals
   * @return decimals
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDecimals() {
    return decimals;
  }

  public void setDecimals(String decimals) {
    this.decimals = decimals;
  }

  public CoinbaseCustodyApiActivityCurrency icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @ApiModelProperty(required = true, value = "")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public CoinbaseCustodyApiActivityCurrency currencyType(CoinbaseCustodyApiCurrencyType currencyType) {
    this.currencyType = currencyType;
    return this;
  }

   /**
   * Get currencyType
   * @return currencyType
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiCurrencyType getCurrencyType() {
    return currencyType;
  }

  public void setCurrencyType(CoinbaseCustodyApiCurrencyType currencyType) {
    this.currencyType = currencyType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiActivityCurrency coinbaseCustodyApiActivityCurrency = (CoinbaseCustodyApiActivityCurrency) o;
    return Objects.equals(this.symbol, coinbaseCustodyApiActivityCurrency.symbol) &&
        Objects.equals(this.propertiesEnabled, coinbaseCustodyApiActivityCurrency.propertiesEnabled) &&
        Objects.equals(this.decimals, coinbaseCustodyApiActivityCurrency.decimals) &&
        Objects.equals(this.icon, coinbaseCustodyApiActivityCurrency.icon) &&
        Objects.equals(this.currencyType, coinbaseCustodyApiActivityCurrency.currencyType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, propertiesEnabled, decimals, icon, currencyType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiActivityCurrency {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    propertiesEnabled: ").append(toIndentedString(propertiesEnabled)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    currencyType: ").append(toIndentedString(currencyType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

