/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderSide;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiAllocationLeg
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiAllocationLeg {
  @SerializedName("allocation_leg_id")
  private String allocationLegId = null;

  @SerializedName("allocation_id")
  private String allocationId = null;

  @SerializedName("source_portfolio_id")
  private String sourcePortfolioId = null;

  @SerializedName("target_portfolio_id")
  private String targetPortfolioId = null;

  @SerializedName("quote_size")
  private String quoteSize = null;

  @SerializedName("base_size")
  private String baseSize = null;

  @SerializedName("commission")
  private String commission = null;

  @SerializedName("avg_price")
  private String avgPrice = null;

  @SerializedName("order_ids")
  private List<String> orderIds = new ArrayList<String>();

  @SerializedName("side")
  private CoinbaseEngPrimeApiApiOrderSide side = null;

  @SerializedName("product_id")
  private String productId = null;

  public CoinbaseEngPrimeApiApiAllocationLeg allocationLegId(String allocationLegId) {
    this.allocationLegId = allocationLegId;
    return this;
  }

   /**
   * The ID of the portfolio of the allocation leg
   * @return allocationLegId
  **/
  @ApiModelProperty(required = true, value = "The ID of the portfolio of the allocation leg")
  public String getAllocationLegId() {
    return allocationLegId;
  }

  public void setAllocationLegId(String allocationLegId) {
    this.allocationLegId = allocationLegId;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg allocationId(String allocationId) {
    this.allocationId = allocationId;
    return this;
  }

   /**
   * The ID of the portfolio of the allocation leg
   * @return allocationId
  **/
  @ApiModelProperty(required = true, value = "The ID of the portfolio of the allocation leg")
  public String getAllocationId() {
    return allocationId;
  }

  public void setAllocationId(String allocationId) {
    this.allocationId = allocationId;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg sourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
    return this;
  }

   /**
   * The ID of the target portfolio of the allocation leg
   * @return sourcePortfolioId
  **/
  @ApiModelProperty(required = true, value = "The ID of the target portfolio of the allocation leg")
  public String getSourcePortfolioId() {
    return sourcePortfolioId;
  }

  public void setSourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg targetPortfolioId(String targetPortfolioId) {
    this.targetPortfolioId = targetPortfolioId;
    return this;
  }

   /**
   * The ID of the target portfolio of the allocation leg
   * @return targetPortfolioId
  **/
  @ApiModelProperty(required = true, value = "The ID of the target portfolio of the allocation leg")
  public String getTargetPortfolioId() {
    return targetPortfolioId;
  }

  public void setTargetPortfolioId(String targetPortfolioId) {
    this.targetPortfolioId = targetPortfolioId;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg quoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
    return this;
  }

   /**
   * The total quote size for the allocation leg
   * @return quoteSize
  **/
  @ApiModelProperty(required = true, value = "The total quote size for the allocation leg")
  public String getQuoteSize() {
    return quoteSize;
  }

  public void setQuoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg baseSize(String baseSize) {
    this.baseSize = baseSize;
    return this;
  }

   /**
   * The total base size for the allocation leg
   * @return baseSize
  **/
  @ApiModelProperty(required = true, value = "The total base size for the allocation leg")
  public String getBaseSize() {
    return baseSize;
  }

  public void setBaseSize(String baseSize) {
    this.baseSize = baseSize;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg commission(String commission) {
    this.commission = commission;
    return this;
  }

   /**
   * The total commission for the allocation leg
   * @return commission
  **/
  @ApiModelProperty(required = true, value = "The total commission for the allocation leg")
  public String getCommission() {
    return commission;
  }

  public void setCommission(String commission) {
    this.commission = commission;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg avgPrice(String avgPrice) {
    this.avgPrice = avgPrice;
    return this;
  }

   /**
   * The total average price for the allocation leg
   * @return avgPrice
  **/
  @ApiModelProperty(required = true, value = "The total average price for the allocation leg")
  public String getAvgPrice() {
    return avgPrice;
  }

  public void setAvgPrice(String avgPrice) {
    this.avgPrice = avgPrice;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg orderIds(List<String> orderIds) {
    this.orderIds = orderIds;
    return this;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg addOrderIdsItem(String orderIdsItem) {
    this.orderIds.add(orderIdsItem);
    return this;
  }

   /**
   * The total order ids for the allocation leg
   * @return orderIds
  **/
  @ApiModelProperty(required = true, value = "The total order ids for the allocation leg")
  public List<String> getOrderIds() {
    return orderIds;
  }

  public void setOrderIds(List<String> orderIds) {
    this.orderIds = orderIds;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg side(CoinbaseEngPrimeApiApiOrderSide side) {
    this.side = side;
    return this;
  }

   /**
   * The total side for the allocation leg
   * @return side
  **/
  @ApiModelProperty(required = true, value = "The total side for the allocation leg")
  public CoinbaseEngPrimeApiApiOrderSide getSide() {
    return side;
  }

  public void setSide(CoinbaseEngPrimeApiApiOrderSide side) {
    this.side = side;
  }

  public CoinbaseEngPrimeApiApiAllocationLeg productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * The total product id for the allocation leg
   * @return productId
  **/
  @ApiModelProperty(required = true, value = "The total product id for the allocation leg")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiAllocationLeg coinbaseEngPrimeApiApiAllocationLeg = (CoinbaseEngPrimeApiApiAllocationLeg) o;
    return Objects.equals(this.allocationLegId, coinbaseEngPrimeApiApiAllocationLeg.allocationLegId) &&
        Objects.equals(this.allocationId, coinbaseEngPrimeApiApiAllocationLeg.allocationId) &&
        Objects.equals(this.sourcePortfolioId, coinbaseEngPrimeApiApiAllocationLeg.sourcePortfolioId) &&
        Objects.equals(this.targetPortfolioId, coinbaseEngPrimeApiApiAllocationLeg.targetPortfolioId) &&
        Objects.equals(this.quoteSize, coinbaseEngPrimeApiApiAllocationLeg.quoteSize) &&
        Objects.equals(this.baseSize, coinbaseEngPrimeApiApiAllocationLeg.baseSize) &&
        Objects.equals(this.commission, coinbaseEngPrimeApiApiAllocationLeg.commission) &&
        Objects.equals(this.avgPrice, coinbaseEngPrimeApiApiAllocationLeg.avgPrice) &&
        Objects.equals(this.orderIds, coinbaseEngPrimeApiApiAllocationLeg.orderIds) &&
        Objects.equals(this.side, coinbaseEngPrimeApiApiAllocationLeg.side) &&
        Objects.equals(this.productId, coinbaseEngPrimeApiApiAllocationLeg.productId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(allocationLegId, allocationId, sourcePortfolioId, targetPortfolioId, quoteSize, baseSize, commission, avgPrice, orderIds, side, productId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiAllocationLeg {\n");
    
    sb.append("    allocationLegId: ").append(toIndentedString(allocationLegId)).append("\n");
    sb.append("    allocationId: ").append(toIndentedString(allocationId)).append("\n");
    sb.append("    sourcePortfolioId: ").append(toIndentedString(sourcePortfolioId)).append("\n");
    sb.append("    targetPortfolioId: ").append(toIndentedString(targetPortfolioId)).append("\n");
    sb.append("    quoteSize: ").append(toIndentedString(quoteSize)).append("\n");
    sb.append("    baseSize: ").append(toIndentedString(baseSize)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("    avgPrice: ").append(toIndentedString(avgPrice)).append("\n");
    sb.append("    orderIds: ").append(toIndentedString(orderIds)).append("\n");
    sb.append("    side: ").append(toIndentedString(side)).append("\n");
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

