/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbasePaymentsCommonMoney;
import io.swagger.client.model.CoinbasePaymentsCommonPaymentMethodsLedgerAccount;
import java.io.IOException;

/**
 * CoinbasePaymentsCommonPaymentMethodsFundMovement
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbasePaymentsCommonPaymentMethodsFundMovement {
  @SerializedName("id")
  private String id = null;

  @SerializedName("source_account")
  private CoinbasePaymentsCommonPaymentMethodsLedgerAccount sourceAccount = null;

  @SerializedName("destination_account")
  private CoinbasePaymentsCommonPaymentMethodsLedgerAccount destinationAccount = null;

  @SerializedName("amount")
  private CoinbasePaymentsCommonMoney amount = null;

  public CoinbasePaymentsCommonPaymentMethodsFundMovement id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbasePaymentsCommonPaymentMethodsFundMovement sourceAccount(CoinbasePaymentsCommonPaymentMethodsLedgerAccount sourceAccount) {
    this.sourceAccount = sourceAccount;
    return this;
  }

   /**
   * Get sourceAccount
   * @return sourceAccount
  **/
  @ApiModelProperty(value = "")
  public CoinbasePaymentsCommonPaymentMethodsLedgerAccount getSourceAccount() {
    return sourceAccount;
  }

  public void setSourceAccount(CoinbasePaymentsCommonPaymentMethodsLedgerAccount sourceAccount) {
    this.sourceAccount = sourceAccount;
  }

  public CoinbasePaymentsCommonPaymentMethodsFundMovement destinationAccount(CoinbasePaymentsCommonPaymentMethodsLedgerAccount destinationAccount) {
    this.destinationAccount = destinationAccount;
    return this;
  }

   /**
   * Get destinationAccount
   * @return destinationAccount
  **/
  @ApiModelProperty(value = "")
  public CoinbasePaymentsCommonPaymentMethodsLedgerAccount getDestinationAccount() {
    return destinationAccount;
  }

  public void setDestinationAccount(CoinbasePaymentsCommonPaymentMethodsLedgerAccount destinationAccount) {
    this.destinationAccount = destinationAccount;
  }

  public CoinbasePaymentsCommonPaymentMethodsFundMovement amount(CoinbasePaymentsCommonMoney amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public CoinbasePaymentsCommonMoney getAmount() {
    return amount;
  }

  public void setAmount(CoinbasePaymentsCommonMoney amount) {
    this.amount = amount;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbasePaymentsCommonPaymentMethodsFundMovement coinbasePaymentsCommonPaymentMethodsFundMovement = (CoinbasePaymentsCommonPaymentMethodsFundMovement) o;
    return Objects.equals(this.id, coinbasePaymentsCommonPaymentMethodsFundMovement.id) &&
        Objects.equals(this.sourceAccount, coinbasePaymentsCommonPaymentMethodsFundMovement.sourceAccount) &&
        Objects.equals(this.destinationAccount, coinbasePaymentsCommonPaymentMethodsFundMovement.destinationAccount) &&
        Objects.equals(this.amount, coinbasePaymentsCommonPaymentMethodsFundMovement.amount);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, sourceAccount, destinationAccount, amount);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbasePaymentsCommonPaymentMethodsFundMovement {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sourceAccount: ").append(toIndentedString(sourceAccount)).append("\n");
    sb.append("    destinationAccount: ").append(toIndentedString(destinationAccount)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

