/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApikeyApiAPIKeyType;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 {
  @SerializedName("group_id")
  private String groupId = null;

  @SerializedName("access_key")
  private String accessKey = null;

  @SerializedName("type")
  private CoinbaseEngPrimeApikeyApiAPIKeyType type = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  public CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 groupId(String groupId) {
    this.groupId = groupId;
    return this;
  }

   /**
   * Get groupId
   * @return groupId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getGroupId() {
    return groupId;
  }

  public void setGroupId(String groupId) {
    this.groupId = groupId;
  }

  public CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 accessKey(String accessKey) {
    this.accessKey = accessKey;
    return this;
  }

   /**
   * Get accessKey
   * @return accessKey
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAccessKey() {
    return accessKey;
  }

  public void setAccessKey(String accessKey) {
    this.accessKey = accessKey;
  }

  public CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 type(CoinbaseEngPrimeApikeyApiAPIKeyType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApikeyApiAPIKeyType getType() {
    return type;
  }

  public void setType(CoinbaseEngPrimeApikeyApiAPIKeyType type) {
    this.type = type;
  }

  public CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 coinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 = (CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2) o;
    return Objects.equals(this.groupId, coinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2.groupId) &&
        Objects.equals(this.accessKey, coinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2.accessKey) &&
        Objects.equals(this.type, coinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2.type) &&
        Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2.portfolioId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(groupId, accessKey, type, portfolioId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiDeactivateAPIKeyRequestV2 {\n");
    
    sb.append("    groupId: ").append(toIndentedString(groupId)).append("\n");
    sb.append("    accessKey: ").append(toIndentedString(accessKey)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

