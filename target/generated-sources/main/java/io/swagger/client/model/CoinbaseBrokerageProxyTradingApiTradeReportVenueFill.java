/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseBrokerageProxyTradingApiTradeReportVenueFill
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyTradingApiTradeReportVenueFill {
  @SerializedName("venue_name")
  private String venueName = null;

  @SerializedName("total_size")
  private String totalSize = null;

  @SerializedName("total_value")
  private String totalValue = null;

  @SerializedName("total_fills")
  private String totalFills = null;

  @SerializedName("venue_id")
  private String venueId = null;

  public CoinbaseBrokerageProxyTradingApiTradeReportVenueFill venueName(String venueName) {
    this.venueName = venueName;
    return this;
  }

   /**
   * Name of venue 
   * @return venueName
  **/
  @ApiModelProperty(required = true, value = "Name of venue ")
  public String getVenueName() {
    return venueName;
  }

  public void setVenueName(String venueName) {
    this.venueName = venueName;
  }

  public CoinbaseBrokerageProxyTradingApiTradeReportVenueFill totalSize(String totalSize) {
    this.totalSize = totalSize;
    return this;
  }

   /**
   * Total size of fills for venue, in pair base (ex. BTC for BTC/USD)
   * @return totalSize
  **/
  @ApiModelProperty(required = true, value = "Total size of fills for venue, in pair base (ex. BTC for BTC/USD)")
  public String getTotalSize() {
    return totalSize;
  }

  public void setTotalSize(String totalSize) {
    this.totalSize = totalSize;
  }

  public CoinbaseBrokerageProxyTradingApiTradeReportVenueFill totalValue(String totalValue) {
    this.totalValue = totalValue;
    return this;
  }

   /**
   * Total value of fills, in pair quote
   * @return totalValue
  **/
  @ApiModelProperty(required = true, value = "Total value of fills, in pair quote")
  public String getTotalValue() {
    return totalValue;
  }

  public void setTotalValue(String totalValue) {
    this.totalValue = totalValue;
  }

  public CoinbaseBrokerageProxyTradingApiTradeReportVenueFill totalFills(String totalFills) {
    this.totalFills = totalFills;
    return this;
  }

   /**
   * Total number of fills
   * @return totalFills
  **/
  @ApiModelProperty(required = true, value = "Total number of fills")
  public String getTotalFills() {
    return totalFills;
  }

  public void setTotalFills(String totalFills) {
    this.totalFills = totalFills;
  }

  public CoinbaseBrokerageProxyTradingApiTradeReportVenueFill venueId(String venueId) {
    this.venueId = venueId;
    return this;
  }

   /**
   * ID of venue
   * @return venueId
  **/
  @ApiModelProperty(required = true, value = "ID of venue")
  public String getVenueId() {
    return venueId;
  }

  public void setVenueId(String venueId) {
    this.venueId = venueId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyTradingApiTradeReportVenueFill coinbaseBrokerageProxyTradingApiTradeReportVenueFill = (CoinbaseBrokerageProxyTradingApiTradeReportVenueFill) o;
    return Objects.equals(this.venueName, coinbaseBrokerageProxyTradingApiTradeReportVenueFill.venueName) &&
        Objects.equals(this.totalSize, coinbaseBrokerageProxyTradingApiTradeReportVenueFill.totalSize) &&
        Objects.equals(this.totalValue, coinbaseBrokerageProxyTradingApiTradeReportVenueFill.totalValue) &&
        Objects.equals(this.totalFills, coinbaseBrokerageProxyTradingApiTradeReportVenueFill.totalFills) &&
        Objects.equals(this.venueId, coinbaseBrokerageProxyTradingApiTradeReportVenueFill.venueId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(venueName, totalSize, totalValue, totalFills, venueId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyTradingApiTradeReportVenueFill {\n");
    
    sb.append("    venueName: ").append(toIndentedString(venueName)).append("\n");
    sb.append("    totalSize: ").append(toIndentedString(totalSize)).append("\n");
    sb.append("    totalValue: ").append(toIndentedString(totalValue)).append("\n");
    sb.append("    totalFills: ").append(toIndentedString(totalFills)).append("\n");
    sb.append("    venueId: ").append(toIndentedString(venueId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

