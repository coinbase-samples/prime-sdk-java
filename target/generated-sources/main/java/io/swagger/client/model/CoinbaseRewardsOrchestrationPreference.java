/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseRewardsOrchestrationEntityType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseRewardsOrchestrationPreference
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseRewardsOrchestrationPreference {
  @SerializedName("entity_id")
  private String entityId = null;

  @SerializedName("entity_type")
  private CoinbaseRewardsOrchestrationEntityType entityType = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("portfolio_ids")
  private List<String> portfolioIds = null;

  @SerializedName("wallet_ids")
  private List<String> walletIds = null;

  @SerializedName("percentages")
  private List<Double> percentages = null;

  public CoinbaseRewardsOrchestrationPreference entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @ApiModelProperty(value = "")
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public CoinbaseRewardsOrchestrationPreference entityType(CoinbaseRewardsOrchestrationEntityType entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @ApiModelProperty(value = "")
  public CoinbaseRewardsOrchestrationEntityType getEntityType() {
    return entityType;
  }

  public void setEntityType(CoinbaseRewardsOrchestrationEntityType entityType) {
    this.entityType = entityType;
  }

  public CoinbaseRewardsOrchestrationPreference currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseRewardsOrchestrationPreference portfolioIds(List<String> portfolioIds) {
    this.portfolioIds = portfolioIds;
    return this;
  }

  public CoinbaseRewardsOrchestrationPreference addPortfolioIdsItem(String portfolioIdsItem) {
    if (this.portfolioIds == null) {
      this.portfolioIds = new ArrayList<String>();
    }
    this.portfolioIds.add(portfolioIdsItem);
    return this;
  }

   /**
   * Get portfolioIds
   * @return portfolioIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getPortfolioIds() {
    return portfolioIds;
  }

  public void setPortfolioIds(List<String> portfolioIds) {
    this.portfolioIds = portfolioIds;
  }

  public CoinbaseRewardsOrchestrationPreference walletIds(List<String> walletIds) {
    this.walletIds = walletIds;
    return this;
  }

  public CoinbaseRewardsOrchestrationPreference addWalletIdsItem(String walletIdsItem) {
    if (this.walletIds == null) {
      this.walletIds = new ArrayList<String>();
    }
    this.walletIds.add(walletIdsItem);
    return this;
  }

   /**
   * Get walletIds
   * @return walletIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getWalletIds() {
    return walletIds;
  }

  public void setWalletIds(List<String> walletIds) {
    this.walletIds = walletIds;
  }

  public CoinbaseRewardsOrchestrationPreference percentages(List<Double> percentages) {
    this.percentages = percentages;
    return this;
  }

  public CoinbaseRewardsOrchestrationPreference addPercentagesItem(Double percentagesItem) {
    if (this.percentages == null) {
      this.percentages = new ArrayList<Double>();
    }
    this.percentages.add(percentagesItem);
    return this;
  }

   /**
   * Get percentages
   * @return percentages
  **/
  @ApiModelProperty(value = "")
  public List<Double> getPercentages() {
    return percentages;
  }

  public void setPercentages(List<Double> percentages) {
    this.percentages = percentages;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseRewardsOrchestrationPreference coinbaseRewardsOrchestrationPreference = (CoinbaseRewardsOrchestrationPreference) o;
    return Objects.equals(this.entityId, coinbaseRewardsOrchestrationPreference.entityId) &&
        Objects.equals(this.entityType, coinbaseRewardsOrchestrationPreference.entityType) &&
        Objects.equals(this.currency, coinbaseRewardsOrchestrationPreference.currency) &&
        Objects.equals(this.portfolioIds, coinbaseRewardsOrchestrationPreference.portfolioIds) &&
        Objects.equals(this.walletIds, coinbaseRewardsOrchestrationPreference.walletIds) &&
        Objects.equals(this.percentages, coinbaseRewardsOrchestrationPreference.percentages);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, entityType, currency, portfolioIds, walletIds, percentages);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseRewardsOrchestrationPreference {\n");
    
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    portfolioIds: ").append(toIndentedString(portfolioIds)).append("\n");
    sb.append("    walletIds: ").append(toIndentedString(walletIds)).append("\n");
    sb.append("    percentages: ").append(toIndentedString(percentages)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

