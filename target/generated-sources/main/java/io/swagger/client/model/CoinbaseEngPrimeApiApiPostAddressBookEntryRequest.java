/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAddressBookType;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiPostAddressBookEntryRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPostAddressBookEntryRequest {
  @SerializedName("address")
  private String address = null;

  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("account_identifier")
  private String accountIdentifier = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("counterparty_id")
  private String counterpartyId = null;

  @SerializedName("type")
  private CoinbaseEngPrimeApiApiAddressBookType type = null;

  public CoinbaseEngPrimeApiApiPostAddressBookEntryRequest address(String address) {
    this.address = address;
    return this;
  }

   /**
   * Crypto address to add
   * @return address
  **/
  @ApiModelProperty(value = "Crypto address to add")
  public String getAddress() {
    return address;
  }

  public void setAddress(String address) {
    this.address = address;
  }

  public CoinbaseEngPrimeApiApiPostAddressBookEntryRequest currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Crypto symbol of address to add
   * @return currencySymbol
  **/
  @ApiModelProperty(value = "Crypto symbol of address to add")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CoinbaseEngPrimeApiApiPostAddressBookEntryRequest name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Name of address book entry
   * @return name
  **/
  @ApiModelProperty(required = true, value = "Name of address book entry")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseEngPrimeApiApiPostAddressBookEntryRequest accountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
    return this;
  }

   /**
   * Account Identifier (memo/destination tag)
   * @return accountIdentifier
  **/
  @ApiModelProperty(value = "Account Identifier (memo/destination tag)")
  public String getAccountIdentifier() {
    return accountIdentifier;
  }

  public void setAccountIdentifier(String accountIdentifier) {
    this.accountIdentifier = accountIdentifier;
  }

  public CoinbaseEngPrimeApiApiPostAddressBookEntryRequest portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Portfolio id
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "Portfolio id")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseEngPrimeApiApiPostAddressBookEntryRequest counterpartyId(String counterpartyId) {
    this.counterpartyId = counterpartyId;
    return this;
  }

   /**
   * counterparty id
   * @return counterpartyId
  **/
  @ApiModelProperty(value = "counterparty id")
  public String getCounterpartyId() {
    return counterpartyId;
  }

  public void setCounterpartyId(String counterpartyId) {
    this.counterpartyId = counterpartyId;
  }

  public CoinbaseEngPrimeApiApiPostAddressBookEntryRequest type(CoinbaseEngPrimeApiApiAddressBookType type) {
    this.type = type;
    return this;
  }

   /**
   * Type of address book entry
   * @return type
  **/
  @ApiModelProperty(value = "Type of address book entry")
  public CoinbaseEngPrimeApiApiAddressBookType getType() {
    return type;
  }

  public void setType(CoinbaseEngPrimeApiApiAddressBookType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPostAddressBookEntryRequest coinbaseEngPrimeApiApiPostAddressBookEntryRequest = (CoinbaseEngPrimeApiApiPostAddressBookEntryRequest) o;
    return Objects.equals(this.address, coinbaseEngPrimeApiApiPostAddressBookEntryRequest.address) &&
        Objects.equals(this.currencySymbol, coinbaseEngPrimeApiApiPostAddressBookEntryRequest.currencySymbol) &&
        Objects.equals(this.name, coinbaseEngPrimeApiApiPostAddressBookEntryRequest.name) &&
        Objects.equals(this.accountIdentifier, coinbaseEngPrimeApiApiPostAddressBookEntryRequest.accountIdentifier) &&
        Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiPostAddressBookEntryRequest.portfolioId) &&
        Objects.equals(this.counterpartyId, coinbaseEngPrimeApiApiPostAddressBookEntryRequest.counterpartyId) &&
        Objects.equals(this.type, coinbaseEngPrimeApiApiPostAddressBookEntryRequest.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(address, currencySymbol, name, accountIdentifier, portfolioId, counterpartyId, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPostAddressBookEntryRequest {\n");
    
    sb.append("    address: ").append(toIndentedString(address)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    accountIdentifier: ").append(toIndentedString(accountIdentifier)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    counterpartyId: ").append(toIndentedString(counterpartyId)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

