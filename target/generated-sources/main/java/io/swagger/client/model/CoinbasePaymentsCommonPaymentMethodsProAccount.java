/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbasePaymentsCommonPaymentMethodsProAccount
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbasePaymentsCommonPaymentMethodsProAccount {
  @SerializedName("account_id")
  private String accountId = null;

  @SerializedName("coinbase_account_id")
  private String coinbaseAccountId = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  public CoinbasePaymentsCommonPaymentMethodsProAccount accountId(String accountId) {
    this.accountId = accountId;
    return this;
  }

   /**
   * Get accountId
   * @return accountId
  **/
  @ApiModelProperty(value = "")
  public String getAccountId() {
    return accountId;
  }

  public void setAccountId(String accountId) {
    this.accountId = accountId;
  }

  public CoinbasePaymentsCommonPaymentMethodsProAccount coinbaseAccountId(String coinbaseAccountId) {
    this.coinbaseAccountId = coinbaseAccountId;
    return this;
  }

   /**
   * Get coinbaseAccountId
   * @return coinbaseAccountId
  **/
  @ApiModelProperty(value = "")
  public String getCoinbaseAccountId() {
    return coinbaseAccountId;
  }

  public void setCoinbaseAccountId(String coinbaseAccountId) {
    this.coinbaseAccountId = coinbaseAccountId;
  }

  public CoinbasePaymentsCommonPaymentMethodsProAccount userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbasePaymentsCommonPaymentMethodsProAccount currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbasePaymentsCommonPaymentMethodsProAccount portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbasePaymentsCommonPaymentMethodsProAccount coinbasePaymentsCommonPaymentMethodsProAccount = (CoinbasePaymentsCommonPaymentMethodsProAccount) o;
    return Objects.equals(this.accountId, coinbasePaymentsCommonPaymentMethodsProAccount.accountId) &&
        Objects.equals(this.coinbaseAccountId, coinbasePaymentsCommonPaymentMethodsProAccount.coinbaseAccountId) &&
        Objects.equals(this.userId, coinbasePaymentsCommonPaymentMethodsProAccount.userId) &&
        Objects.equals(this.currency, coinbasePaymentsCommonPaymentMethodsProAccount.currency) &&
        Objects.equals(this.portfolioId, coinbasePaymentsCommonPaymentMethodsProAccount.portfolioId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(accountId, coinbaseAccountId, userId, currency, portfolioId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbasePaymentsCommonPaymentMethodsProAccount {\n");
    
    sb.append("    accountId: ").append(toIndentedString(accountId)).append("\n");
    sb.append("    coinbaseAccountId: ").append(toIndentedString(coinbaseAccountId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

