/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiChartConfiguration
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiChartConfiguration {
  @SerializedName("granularity")
  private String granularity = null;

  @SerializedName("enabled_studies")
  private List<String> enabledStudies = new ArrayList<String>();

  @SerializedName("chart_type")
  private String chartType = null;

  @SerializedName("overlays_enabled")
  private Boolean overlaysEnabled = null;

  public CoinbaseEngPrimeApiApiChartConfiguration granularity(String granularity) {
    this.granularity = granularity;
    return this;
  }

   /**
   * Get granularity
   * @return granularity
  **/
  @ApiModelProperty(required = true, value = "")
  public String getGranularity() {
    return granularity;
  }

  public void setGranularity(String granularity) {
    this.granularity = granularity;
  }

  public CoinbaseEngPrimeApiApiChartConfiguration enabledStudies(List<String> enabledStudies) {
    this.enabledStudies = enabledStudies;
    return this;
  }

  public CoinbaseEngPrimeApiApiChartConfiguration addEnabledStudiesItem(String enabledStudiesItem) {
    this.enabledStudies.add(enabledStudiesItem);
    return this;
  }

   /**
   * Get enabledStudies
   * @return enabledStudies
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getEnabledStudies() {
    return enabledStudies;
  }

  public void setEnabledStudies(List<String> enabledStudies) {
    this.enabledStudies = enabledStudies;
  }

  public CoinbaseEngPrimeApiApiChartConfiguration chartType(String chartType) {
    this.chartType = chartType;
    return this;
  }

   /**
   * Get chartType
   * @return chartType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getChartType() {
    return chartType;
  }

  public void setChartType(String chartType) {
    this.chartType = chartType;
  }

  public CoinbaseEngPrimeApiApiChartConfiguration overlaysEnabled(Boolean overlaysEnabled) {
    this.overlaysEnabled = overlaysEnabled;
    return this;
  }

   /**
   * Get overlaysEnabled
   * @return overlaysEnabled
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isOverlaysEnabled() {
    return overlaysEnabled;
  }

  public void setOverlaysEnabled(Boolean overlaysEnabled) {
    this.overlaysEnabled = overlaysEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiChartConfiguration coinbaseEngPrimeApiApiChartConfiguration = (CoinbaseEngPrimeApiApiChartConfiguration) o;
    return Objects.equals(this.granularity, coinbaseEngPrimeApiApiChartConfiguration.granularity) &&
        Objects.equals(this.enabledStudies, coinbaseEngPrimeApiApiChartConfiguration.enabledStudies) &&
        Objects.equals(this.chartType, coinbaseEngPrimeApiApiChartConfiguration.chartType) &&
        Objects.equals(this.overlaysEnabled, coinbaseEngPrimeApiApiChartConfiguration.overlaysEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(granularity, enabledStudies, chartType, overlaysEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiChartConfiguration {\n");
    
    sb.append("    granularity: ").append(toIndentedString(granularity)).append("\n");
    sb.append("    enabledStudies: ").append(toIndentedString(enabledStudies)).append("\n");
    sb.append("    chartType: ").append(toIndentedString(chartType)).append("\n");
    sb.append("    overlaysEnabled: ").append(toIndentedString(overlaysEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

