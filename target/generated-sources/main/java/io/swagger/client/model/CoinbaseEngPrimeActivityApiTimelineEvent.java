/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets coinbase.eng.prime.activity.api.TimelineEvent
 */
@JsonAdapter(CoinbaseEngPrimeActivityApiTimelineEvent.Adapter.class)
public enum CoinbaseEngPrimeActivityApiTimelineEvent {
  
  UNSPECIFIED("TIMELINE_EVENT_UNSPECIFIED"),
  
  INITIALIZE("TIMELINE_EVENT_INITIALIZE"),
  
  ADMIN_INITIALIZE("TIMELINE_EVENT_ADMIN_INITIALIZE"),
  
  CONSENSUS("TIMELINE_EVENT_CONSENSUS"),
  
  APPROVE("TIMELINE_EVENT_APPROVE"),
  
  REJECT("TIMELINE_EVENT_REJECT"),
  
  ADMIN_REVIEW("TIMELINE_EVENT_ADMIN_REVIEW"),
  
  ADMIN_REJECT("TIMELINE_EVENT_ADMIN_REJECT"),
  
  EXPIRE("TIMELINE_EVENT_EXPIRE"),
  
  UPLOAD_VIDEO("TIMELINE_EVENT_UPLOAD_VIDEO"),
  
  COMPLETE("TIMELINE_EVENT_COMPLETE"),
  
  FAIL("TIMELINE_EVENT_FAIL"),
  
  RETRIED("TIMELINE_EVENT_RETRIED"),
  
  ACCEPT("TIMELINE_EVENT_ACCEPT"),
  
  GAS("TIMELINE_EVENT_GAS"),
  
  PROCESS("TIMELINE_EVENT_PROCESS"),
  
  CANCEL("TIMELINE_EVENT_CANCEL"),
  
  CONFIRM("TIMELINE_EVENT_CONFIRM"),
  
  BROADCAST("TIMELINE_EVENT_BROADCAST"),
  
  PREPARE("TIMELINE_EVENT_PREPARE"),
  
  ORIGINATE("TIMELINE_EVENT_ORIGINATE"),
  
  THIRD_PARTY_APPROVAL_REQUESTED("TIMELINE_EVENT_THIRD_PARTY_APPROVAL_REQUESTED"),
  
  THIRD_PARTY_APPROVED("TIMELINE_EVENT_THIRD_PARTY_APPROVED"),
  
  MESSAGE_SIGNED("TIMELINE_EVENT_MESSAGE_SIGNED"),
  
  SIGNED("TIMELINE_EVENT_SIGNED"),
  
  ROLE_ADDED("TIMELINE_EVENT_ROLE_ADDED"),
  
  PROVIDE_CLONE_KEY("TIMELINE_EVENT_PROVIDE_CLONE_KEY"),
  
  PREPARE_CLONE_SEED("TIMELINE_EVENT_PREPARE_CLONE_SEED"),
  
  RETRIEVE_CLONED_SEED("TIMELINE_EVENT_RETRIEVE_CLONED_SEED"),
  
  KEY_CLONE_COMPLETE("TIMELINE_EVENT_KEY_CLONE_COMPLETE"),
  
  YUBIKEY_REGISTERED("TIMELINE_EVENT_YUBIKEY_REGISTERED"),
  
  YUBIKEY_REGISTRATION_COMPLETE("TIMELINE_EVENT_YUBIKEY_REGISTRATION_COMPLETE"),
  
  WEB3_KEYS_GENERATED("TIMELINE_EVENT_WEB3_KEYS_GENERATED"),
  
  WEB3_WALLET_CREATED("TIMELINE_EVENT_WEB3_WALLET_CREATED"),
  
  WEB3_BACKUP_CREATED("TIMELINE_EVENT_WEB3_BACKUP_CREATED"),
  
  MATCH("TIMELINE_EVENT_MATCH"),
  
  MATCH_AMEND("TIMELINE_EVENT_MATCH_AMEND"),
  
  WEB3_KEY_EXPORT_GENERATED("TIMELINE_EVENT_WEB3_KEY_EXPORT_GENERATED"),
  
  WEB3_KEY_EXPORT_DOWNLOADED("TIMELINE_EVENT_WEB3_KEY_EXPORT_DOWNLOADED");

  private String value;

  CoinbaseEngPrimeActivityApiTimelineEvent(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbaseEngPrimeActivityApiTimelineEvent fromValue(String text) {
    for (CoinbaseEngPrimeActivityApiTimelineEvent b : CoinbaseEngPrimeActivityApiTimelineEvent.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbaseEngPrimeActivityApiTimelineEvent> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbaseEngPrimeActivityApiTimelineEvent enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbaseEngPrimeActivityApiTimelineEvent read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbaseEngPrimeActivityApiTimelineEvent.fromValue(String.valueOf(value));
    }
  }
}

