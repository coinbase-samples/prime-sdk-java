/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiTransactionType;
import io.swagger.client.model.CoinbaseCustodyApiTransferCurrencyType;
import io.swagger.client.model.CoinbaseCustodyApiTransferMethodType;
import java.io.IOException;

/**
 * CoinbaseCustodyApiTransferMethod
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiTransferMethod {
  @SerializedName("name")
  private String name = null;

  @SerializedName("description")
  private String description = null;

  @SerializedName("icon_id")
  private String iconId = null;

  @SerializedName("processing_time")
  private String processingTime = null;

  @SerializedName("transaction_type")
  private CoinbaseCustodyApiTransactionType transactionType = null;

  @SerializedName("type")
  private CoinbaseCustodyApiTransferMethodType type = null;

  @SerializedName("currency_type")
  private CoinbaseCustodyApiTransferCurrencyType currencyType = null;

  public CoinbaseCustodyApiTransferMethod name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseCustodyApiTransferMethod description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Get description
   * @return description
  **/
  @ApiModelProperty(value = "")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public CoinbaseCustodyApiTransferMethod iconId(String iconId) {
    this.iconId = iconId;
    return this;
  }

   /**
   * Get iconId
   * @return iconId
  **/
  @ApiModelProperty(value = "")
  public String getIconId() {
    return iconId;
  }

  public void setIconId(String iconId) {
    this.iconId = iconId;
  }

  public CoinbaseCustodyApiTransferMethod processingTime(String processingTime) {
    this.processingTime = processingTime;
    return this;
  }

   /**
   * Get processingTime
   * @return processingTime
  **/
  @ApiModelProperty(value = "")
  public String getProcessingTime() {
    return processingTime;
  }

  public void setProcessingTime(String processingTime) {
    this.processingTime = processingTime;
  }

  public CoinbaseCustodyApiTransferMethod transactionType(CoinbaseCustodyApiTransactionType transactionType) {
    this.transactionType = transactionType;
    return this;
  }

   /**
   * Get transactionType
   * @return transactionType
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransactionType getTransactionType() {
    return transactionType;
  }

  public void setTransactionType(CoinbaseCustodyApiTransactionType transactionType) {
    this.transactionType = transactionType;
  }

  public CoinbaseCustodyApiTransferMethod type(CoinbaseCustodyApiTransferMethodType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransferMethodType getType() {
    return type;
  }

  public void setType(CoinbaseCustodyApiTransferMethodType type) {
    this.type = type;
  }

  public CoinbaseCustodyApiTransferMethod currencyType(CoinbaseCustodyApiTransferCurrencyType currencyType) {
    this.currencyType = currencyType;
    return this;
  }

   /**
   * Get currencyType
   * @return currencyType
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransferCurrencyType getCurrencyType() {
    return currencyType;
  }

  public void setCurrencyType(CoinbaseCustodyApiTransferCurrencyType currencyType) {
    this.currencyType = currencyType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiTransferMethod coinbaseCustodyApiTransferMethod = (CoinbaseCustodyApiTransferMethod) o;
    return Objects.equals(this.name, coinbaseCustodyApiTransferMethod.name) &&
        Objects.equals(this.description, coinbaseCustodyApiTransferMethod.description) &&
        Objects.equals(this.iconId, coinbaseCustodyApiTransferMethod.iconId) &&
        Objects.equals(this.processingTime, coinbaseCustodyApiTransferMethod.processingTime) &&
        Objects.equals(this.transactionType, coinbaseCustodyApiTransferMethod.transactionType) &&
        Objects.equals(this.type, coinbaseCustodyApiTransferMethod.type) &&
        Objects.equals(this.currencyType, coinbaseCustodyApiTransferMethod.currencyType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, description, iconId, processingTime, transactionType, type, currencyType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiTransferMethod {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    description: ").append(toIndentedString(description)).append("\n");
    sb.append("    iconId: ").append(toIndentedString(iconId)).append("\n");
    sb.append("    processingTime: ").append(toIndentedString(processingTime)).append("\n");
    sb.append("    transactionType: ").append(toIndentedString(transactionType)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    currencyType: ").append(toIndentedString(currencyType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

