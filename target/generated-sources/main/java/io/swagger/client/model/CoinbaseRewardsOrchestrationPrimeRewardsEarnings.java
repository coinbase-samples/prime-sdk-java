/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseRewardsOrchestrationAmount;
import io.swagger.client.model.CoinbaseRewardsOrchestrationEntityType;
import io.swagger.client.model.CoinbaseRewardsOrchestrationMonthlyRewards;
import io.swagger.client.model.CoinbaseRewardsOrchestrationPreference;
import io.swagger.client.model.CoinbaseRewardsOrchestrationPrimeAssetInScope;
import io.swagger.client.model.CoinbaseRewardsOrchestrationRateTier;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseRewardsOrchestrationPrimeRewardsEarnings
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseRewardsOrchestrationPrimeRewardsEarnings {
  @SerializedName("entity_id")
  private String entityId = null;

  @SerializedName("entity_type")
  private CoinbaseRewardsOrchestrationEntityType entityType = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("prime_asset_in_scope")
  private CoinbaseRewardsOrchestrationPrimeAssetInScope primeAssetInScope = null;

  @SerializedName("lifetime_rewards")
  private CoinbaseRewardsOrchestrationAmount lifetimeRewards = null;

  @SerializedName("rate_tier")
  private CoinbaseRewardsOrchestrationRateTier rateTier = null;

  @SerializedName("next_pay_out_date")
  private OffsetDateTime nextPayOutDate = null;

  @SerializedName("pay_out_preference")
  private CoinbaseRewardsOrchestrationPreference payOutPreference = null;

  @SerializedName("effective_balance")
  private String effectiveBalance = null;

  @SerializedName("recent_rewards")
  private List<CoinbaseRewardsOrchestrationMonthlyRewards> recentRewards = null;

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @ApiModelProperty(value = "")
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings entityType(CoinbaseRewardsOrchestrationEntityType entityType) {
    this.entityType = entityType;
    return this;
  }

   /**
   * Get entityType
   * @return entityType
  **/
  @ApiModelProperty(value = "")
  public CoinbaseRewardsOrchestrationEntityType getEntityType() {
    return entityType;
  }

  public void setEntityType(CoinbaseRewardsOrchestrationEntityType entityType) {
    this.entityType = entityType;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings primeAssetInScope(CoinbaseRewardsOrchestrationPrimeAssetInScope primeAssetInScope) {
    this.primeAssetInScope = primeAssetInScope;
    return this;
  }

   /**
   * Get primeAssetInScope
   * @return primeAssetInScope
  **/
  @ApiModelProperty(value = "")
  public CoinbaseRewardsOrchestrationPrimeAssetInScope getPrimeAssetInScope() {
    return primeAssetInScope;
  }

  public void setPrimeAssetInScope(CoinbaseRewardsOrchestrationPrimeAssetInScope primeAssetInScope) {
    this.primeAssetInScope = primeAssetInScope;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings lifetimeRewards(CoinbaseRewardsOrchestrationAmount lifetimeRewards) {
    this.lifetimeRewards = lifetimeRewards;
    return this;
  }

   /**
   * Get lifetimeRewards
   * @return lifetimeRewards
  **/
  @ApiModelProperty(value = "")
  public CoinbaseRewardsOrchestrationAmount getLifetimeRewards() {
    return lifetimeRewards;
  }

  public void setLifetimeRewards(CoinbaseRewardsOrchestrationAmount lifetimeRewards) {
    this.lifetimeRewards = lifetimeRewards;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings rateTier(CoinbaseRewardsOrchestrationRateTier rateTier) {
    this.rateTier = rateTier;
    return this;
  }

   /**
   * Get rateTier
   * @return rateTier
  **/
  @ApiModelProperty(value = "")
  public CoinbaseRewardsOrchestrationRateTier getRateTier() {
    return rateTier;
  }

  public void setRateTier(CoinbaseRewardsOrchestrationRateTier rateTier) {
    this.rateTier = rateTier;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings nextPayOutDate(OffsetDateTime nextPayOutDate) {
    this.nextPayOutDate = nextPayOutDate;
    return this;
  }

   /**
   * Get nextPayOutDate
   * @return nextPayOutDate
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getNextPayOutDate() {
    return nextPayOutDate;
  }

  public void setNextPayOutDate(OffsetDateTime nextPayOutDate) {
    this.nextPayOutDate = nextPayOutDate;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings payOutPreference(CoinbaseRewardsOrchestrationPreference payOutPreference) {
    this.payOutPreference = payOutPreference;
    return this;
  }

   /**
   * Get payOutPreference
   * @return payOutPreference
  **/
  @ApiModelProperty(value = "")
  public CoinbaseRewardsOrchestrationPreference getPayOutPreference() {
    return payOutPreference;
  }

  public void setPayOutPreference(CoinbaseRewardsOrchestrationPreference payOutPreference) {
    this.payOutPreference = payOutPreference;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings effectiveBalance(String effectiveBalance) {
    this.effectiveBalance = effectiveBalance;
    return this;
  }

   /**
   * Get effectiveBalance
   * @return effectiveBalance
  **/
  @ApiModelProperty(value = "")
  public String getEffectiveBalance() {
    return effectiveBalance;
  }

  public void setEffectiveBalance(String effectiveBalance) {
    this.effectiveBalance = effectiveBalance;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings recentRewards(List<CoinbaseRewardsOrchestrationMonthlyRewards> recentRewards) {
    this.recentRewards = recentRewards;
    return this;
  }

  public CoinbaseRewardsOrchestrationPrimeRewardsEarnings addRecentRewardsItem(CoinbaseRewardsOrchestrationMonthlyRewards recentRewardsItem) {
    if (this.recentRewards == null) {
      this.recentRewards = new ArrayList<CoinbaseRewardsOrchestrationMonthlyRewards>();
    }
    this.recentRewards.add(recentRewardsItem);
    return this;
  }

   /**
   * Get recentRewards
   * @return recentRewards
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseRewardsOrchestrationMonthlyRewards> getRecentRewards() {
    return recentRewards;
  }

  public void setRecentRewards(List<CoinbaseRewardsOrchestrationMonthlyRewards> recentRewards) {
    this.recentRewards = recentRewards;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseRewardsOrchestrationPrimeRewardsEarnings coinbaseRewardsOrchestrationPrimeRewardsEarnings = (CoinbaseRewardsOrchestrationPrimeRewardsEarnings) o;
    return Objects.equals(this.entityId, coinbaseRewardsOrchestrationPrimeRewardsEarnings.entityId) &&
        Objects.equals(this.entityType, coinbaseRewardsOrchestrationPrimeRewardsEarnings.entityType) &&
        Objects.equals(this.currency, coinbaseRewardsOrchestrationPrimeRewardsEarnings.currency) &&
        Objects.equals(this.primeAssetInScope, coinbaseRewardsOrchestrationPrimeRewardsEarnings.primeAssetInScope) &&
        Objects.equals(this.lifetimeRewards, coinbaseRewardsOrchestrationPrimeRewardsEarnings.lifetimeRewards) &&
        Objects.equals(this.rateTier, coinbaseRewardsOrchestrationPrimeRewardsEarnings.rateTier) &&
        Objects.equals(this.nextPayOutDate, coinbaseRewardsOrchestrationPrimeRewardsEarnings.nextPayOutDate) &&
        Objects.equals(this.payOutPreference, coinbaseRewardsOrchestrationPrimeRewardsEarnings.payOutPreference) &&
        Objects.equals(this.effectiveBalance, coinbaseRewardsOrchestrationPrimeRewardsEarnings.effectiveBalance) &&
        Objects.equals(this.recentRewards, coinbaseRewardsOrchestrationPrimeRewardsEarnings.recentRewards);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, entityType, currency, primeAssetInScope, lifetimeRewards, rateTier, nextPayOutDate, payOutPreference, effectiveBalance, recentRewards);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseRewardsOrchestrationPrimeRewardsEarnings {\n");
    
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    entityType: ").append(toIndentedString(entityType)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    primeAssetInScope: ").append(toIndentedString(primeAssetInScope)).append("\n");
    sb.append("    lifetimeRewards: ").append(toIndentedString(lifetimeRewards)).append("\n");
    sb.append("    rateTier: ").append(toIndentedString(rateTier)).append("\n");
    sb.append("    nextPayOutDate: ").append(toIndentedString(nextPayOutDate)).append("\n");
    sb.append("    payOutPreference: ").append(toIndentedString(payOutPreference)).append("\n");
    sb.append("    effectiveBalance: ").append(toIndentedString(effectiveBalance)).append("\n");
    sb.append("    recentRewards: ").append(toIndentedString(recentRewards)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

