/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiBlockchainAddress;
import io.swagger.client.model.CoinbaseEngPrimeApiApiTransactionFee;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiTWSTransactionActivityDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiTWSTransactionActivityDetails {
  @SerializedName("id")
  private String id = null;

  @SerializedName("source_wallet_id")
  private String sourceWalletId = null;

  @SerializedName("target_wallet_id")
  private String targetWalletId = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("usd_amount_at_creation")
  private String usdAmountAtCreation = null;

  @SerializedName("source_portfolio_id")
  private String sourcePortfolioId = null;

  @SerializedName("target_portfolio_id")
  private String targetPortfolioId = null;

  @SerializedName("source_address")
  private CoinbaseEngPrimeApiApiBlockchainAddress sourceAddress = null;

  @SerializedName("target_address")
  private CoinbaseEngPrimeApiApiBlockchainAddress targetAddress = null;

  @SerializedName("middle_office_initiated")
  private Boolean middleOfficeInitiated = null;

  @SerializedName("human_id")
  private String humanId = null;

  @SerializedName("fees")
  private CoinbaseEngPrimeApiApiTransactionFee fees = null;

  @SerializedName("source_counterparty_id")
  private String sourceCounterpartyId = null;

  @SerializedName("target_counterparty_id")
  private String targetCounterpartyId = null;

  @SerializedName("source_payment_method_id")
  private String sourcePaymentMethodId = null;

  @SerializedName("target_payment_method_id")
  private String targetPaymentMethodId = null;

  @SerializedName("is_ctn_transfer")
  private Boolean isCtnTransfer = null;

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails sourceWalletId(String sourceWalletId) {
    this.sourceWalletId = sourceWalletId;
    return this;
  }

   /**
   * Get sourceWalletId
   * @return sourceWalletId
  **/
  @ApiModelProperty(value = "")
  public String getSourceWalletId() {
    return sourceWalletId;
  }

  public void setSourceWalletId(String sourceWalletId) {
    this.sourceWalletId = sourceWalletId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails targetWalletId(String targetWalletId) {
    this.targetWalletId = targetWalletId;
    return this;
  }

   /**
   * Get targetWalletId
   * @return targetWalletId
  **/
  @ApiModelProperty(value = "")
  public String getTargetWalletId() {
    return targetWalletId;
  }

  public void setTargetWalletId(String targetWalletId) {
    this.targetWalletId = targetWalletId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails usdAmountAtCreation(String usdAmountAtCreation) {
    this.usdAmountAtCreation = usdAmountAtCreation;
    return this;
  }

   /**
   * Get usdAmountAtCreation
   * @return usdAmountAtCreation
  **/
  @ApiModelProperty(value = "")
  public String getUsdAmountAtCreation() {
    return usdAmountAtCreation;
  }

  public void setUsdAmountAtCreation(String usdAmountAtCreation) {
    this.usdAmountAtCreation = usdAmountAtCreation;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails sourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
    return this;
  }

   /**
   * Get sourcePortfolioId
   * @return sourcePortfolioId
  **/
  @ApiModelProperty(value = "")
  public String getSourcePortfolioId() {
    return sourcePortfolioId;
  }

  public void setSourcePortfolioId(String sourcePortfolioId) {
    this.sourcePortfolioId = sourcePortfolioId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails targetPortfolioId(String targetPortfolioId) {
    this.targetPortfolioId = targetPortfolioId;
    return this;
  }

   /**
   * Get targetPortfolioId
   * @return targetPortfolioId
  **/
  @ApiModelProperty(value = "")
  public String getTargetPortfolioId() {
    return targetPortfolioId;
  }

  public void setTargetPortfolioId(String targetPortfolioId) {
    this.targetPortfolioId = targetPortfolioId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails sourceAddress(CoinbaseEngPrimeApiApiBlockchainAddress sourceAddress) {
    this.sourceAddress = sourceAddress;
    return this;
  }

   /**
   * Get sourceAddress
   * @return sourceAddress
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiBlockchainAddress getSourceAddress() {
    return sourceAddress;
  }

  public void setSourceAddress(CoinbaseEngPrimeApiApiBlockchainAddress sourceAddress) {
    this.sourceAddress = sourceAddress;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails targetAddress(CoinbaseEngPrimeApiApiBlockchainAddress targetAddress) {
    this.targetAddress = targetAddress;
    return this;
  }

   /**
   * Get targetAddress
   * @return targetAddress
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiBlockchainAddress getTargetAddress() {
    return targetAddress;
  }

  public void setTargetAddress(CoinbaseEngPrimeApiApiBlockchainAddress targetAddress) {
    this.targetAddress = targetAddress;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails middleOfficeInitiated(Boolean middleOfficeInitiated) {
    this.middleOfficeInitiated = middleOfficeInitiated;
    return this;
  }

   /**
   * Get middleOfficeInitiated
   * @return middleOfficeInitiated
  **/
  @ApiModelProperty(value = "")
  public Boolean isMiddleOfficeInitiated() {
    return middleOfficeInitiated;
  }

  public void setMiddleOfficeInitiated(Boolean middleOfficeInitiated) {
    this.middleOfficeInitiated = middleOfficeInitiated;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails humanId(String humanId) {
    this.humanId = humanId;
    return this;
  }

   /**
   * Get humanId
   * @return humanId
  **/
  @ApiModelProperty(value = "")
  public String getHumanId() {
    return humanId;
  }

  public void setHumanId(String humanId) {
    this.humanId = humanId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails fees(CoinbaseEngPrimeApiApiTransactionFee fees) {
    this.fees = fees;
    return this;
  }

   /**
   * Get fees
   * @return fees
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiTransactionFee getFees() {
    return fees;
  }

  public void setFees(CoinbaseEngPrimeApiApiTransactionFee fees) {
    this.fees = fees;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails sourceCounterpartyId(String sourceCounterpartyId) {
    this.sourceCounterpartyId = sourceCounterpartyId;
    return this;
  }

   /**
   * Get sourceCounterpartyId
   * @return sourceCounterpartyId
  **/
  @ApiModelProperty(value = "")
  public String getSourceCounterpartyId() {
    return sourceCounterpartyId;
  }

  public void setSourceCounterpartyId(String sourceCounterpartyId) {
    this.sourceCounterpartyId = sourceCounterpartyId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails targetCounterpartyId(String targetCounterpartyId) {
    this.targetCounterpartyId = targetCounterpartyId;
    return this;
  }

   /**
   * Get targetCounterpartyId
   * @return targetCounterpartyId
  **/
  @ApiModelProperty(value = "")
  public String getTargetCounterpartyId() {
    return targetCounterpartyId;
  }

  public void setTargetCounterpartyId(String targetCounterpartyId) {
    this.targetCounterpartyId = targetCounterpartyId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails sourcePaymentMethodId(String sourcePaymentMethodId) {
    this.sourcePaymentMethodId = sourcePaymentMethodId;
    return this;
  }

   /**
   * Get sourcePaymentMethodId
   * @return sourcePaymentMethodId
  **/
  @ApiModelProperty(value = "")
  public String getSourcePaymentMethodId() {
    return sourcePaymentMethodId;
  }

  public void setSourcePaymentMethodId(String sourcePaymentMethodId) {
    this.sourcePaymentMethodId = sourcePaymentMethodId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails targetPaymentMethodId(String targetPaymentMethodId) {
    this.targetPaymentMethodId = targetPaymentMethodId;
    return this;
  }

   /**
   * Get targetPaymentMethodId
   * @return targetPaymentMethodId
  **/
  @ApiModelProperty(value = "")
  public String getTargetPaymentMethodId() {
    return targetPaymentMethodId;
  }

  public void setTargetPaymentMethodId(String targetPaymentMethodId) {
    this.targetPaymentMethodId = targetPaymentMethodId;
  }

  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails isCtnTransfer(Boolean isCtnTransfer) {
    this.isCtnTransfer = isCtnTransfer;
    return this;
  }

   /**
   * Get isCtnTransfer
   * @return isCtnTransfer
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsCtnTransfer() {
    return isCtnTransfer;
  }

  public void setIsCtnTransfer(Boolean isCtnTransfer) {
    this.isCtnTransfer = isCtnTransfer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiTWSTransactionActivityDetails coinbaseEngPrimeApiApiTWSTransactionActivityDetails = (CoinbaseEngPrimeApiApiTWSTransactionActivityDetails) o;
    return Objects.equals(this.id, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.id) &&
        Objects.equals(this.sourceWalletId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.sourceWalletId) &&
        Objects.equals(this.targetWalletId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.targetWalletId) &&
        Objects.equals(this.amount, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.amount) &&
        Objects.equals(this.currency, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.currency) &&
        Objects.equals(this.usdAmountAtCreation, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.usdAmountAtCreation) &&
        Objects.equals(this.sourcePortfolioId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.sourcePortfolioId) &&
        Objects.equals(this.targetPortfolioId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.targetPortfolioId) &&
        Objects.equals(this.sourceAddress, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.sourceAddress) &&
        Objects.equals(this.targetAddress, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.targetAddress) &&
        Objects.equals(this.middleOfficeInitiated, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.middleOfficeInitiated) &&
        Objects.equals(this.humanId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.humanId) &&
        Objects.equals(this.fees, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.fees) &&
        Objects.equals(this.sourceCounterpartyId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.sourceCounterpartyId) &&
        Objects.equals(this.targetCounterpartyId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.targetCounterpartyId) &&
        Objects.equals(this.sourcePaymentMethodId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.sourcePaymentMethodId) &&
        Objects.equals(this.targetPaymentMethodId, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.targetPaymentMethodId) &&
        Objects.equals(this.isCtnTransfer, coinbaseEngPrimeApiApiTWSTransactionActivityDetails.isCtnTransfer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, sourceWalletId, targetWalletId, amount, currency, usdAmountAtCreation, sourcePortfolioId, targetPortfolioId, sourceAddress, targetAddress, middleOfficeInitiated, humanId, fees, sourceCounterpartyId, targetCounterpartyId, sourcePaymentMethodId, targetPaymentMethodId, isCtnTransfer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiTWSTransactionActivityDetails {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    sourceWalletId: ").append(toIndentedString(sourceWalletId)).append("\n");
    sb.append("    targetWalletId: ").append(toIndentedString(targetWalletId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    usdAmountAtCreation: ").append(toIndentedString(usdAmountAtCreation)).append("\n");
    sb.append("    sourcePortfolioId: ").append(toIndentedString(sourcePortfolioId)).append("\n");
    sb.append("    targetPortfolioId: ").append(toIndentedString(targetPortfolioId)).append("\n");
    sb.append("    sourceAddress: ").append(toIndentedString(sourceAddress)).append("\n");
    sb.append("    targetAddress: ").append(toIndentedString(targetAddress)).append("\n");
    sb.append("    middleOfficeInitiated: ").append(toIndentedString(middleOfficeInitiated)).append("\n");
    sb.append("    humanId: ").append(toIndentedString(humanId)).append("\n");
    sb.append("    fees: ").append(toIndentedString(fees)).append("\n");
    sb.append("    sourceCounterpartyId: ").append(toIndentedString(sourceCounterpartyId)).append("\n");
    sb.append("    targetCounterpartyId: ").append(toIndentedString(targetCounterpartyId)).append("\n");
    sb.append("    sourcePaymentMethodId: ").append(toIndentedString(sourcePaymentMethodId)).append("\n");
    sb.append("    targetPaymentMethodId: ").append(toIndentedString(targetPaymentMethodId)).append("\n");
    sb.append("    isCtnTransfer: ").append(toIndentedString(isCtnTransfer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

