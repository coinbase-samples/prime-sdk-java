/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingAmount;
import io.swagger.client.model.CoinbaseFinancingCollateral;
import io.swagger.client.model.CoinbaseFinancingMarginCallStatus;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseFinancingCollateralSnapshot
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingCollateralSnapshot {
  @SerializedName("borrower_name")
  private String borrowerName = null;

  @SerializedName("margin_status")
  private CoinbaseFinancingMarginCallStatus marginStatus = null;

  @SerializedName("required_collateral")
  private CoinbaseFinancingAmount requiredCollateral = null;

  @SerializedName("excess_shortfall")
  private CoinbaseFinancingAmount excessShortfall = null;

  @SerializedName("held_collateral")
  private CoinbaseFinancingAmount heldCollateral = null;

  @SerializedName("held_collateral_post_haircut")
  private CoinbaseFinancingAmount heldCollateralPostHaircut = null;

  @SerializedName("snapshot_time")
  private OffsetDateTime snapshotTime = null;

  @SerializedName("excess_shortfall_percentage")
  private String excessShortfallPercentage = null;

  @SerializedName("held_collateral_breakdown")
  private List<CoinbaseFinancingCollateral> heldCollateralBreakdown = null;

  @SerializedName("held_collateral_post_haircut_breakdown")
  private List<CoinbaseFinancingCollateral> heldCollateralPostHaircutBreakdown = null;

  public CoinbaseFinancingCollateralSnapshot borrowerName(String borrowerName) {
    this.borrowerName = borrowerName;
    return this;
  }

   /**
   * Get borrowerName
   * @return borrowerName
  **/
  @ApiModelProperty(value = "")
  public String getBorrowerName() {
    return borrowerName;
  }

  public void setBorrowerName(String borrowerName) {
    this.borrowerName = borrowerName;
  }

  public CoinbaseFinancingCollateralSnapshot marginStatus(CoinbaseFinancingMarginCallStatus marginStatus) {
    this.marginStatus = marginStatus;
    return this;
  }

   /**
   * Get marginStatus
   * @return marginStatus
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingMarginCallStatus getMarginStatus() {
    return marginStatus;
  }

  public void setMarginStatus(CoinbaseFinancingMarginCallStatus marginStatus) {
    this.marginStatus = marginStatus;
  }

  public CoinbaseFinancingCollateralSnapshot requiredCollateral(CoinbaseFinancingAmount requiredCollateral) {
    this.requiredCollateral = requiredCollateral;
    return this;
  }

   /**
   * Get requiredCollateral
   * @return requiredCollateral
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getRequiredCollateral() {
    return requiredCollateral;
  }

  public void setRequiredCollateral(CoinbaseFinancingAmount requiredCollateral) {
    this.requiredCollateral = requiredCollateral;
  }

  public CoinbaseFinancingCollateralSnapshot excessShortfall(CoinbaseFinancingAmount excessShortfall) {
    this.excessShortfall = excessShortfall;
    return this;
  }

   /**
   * Get excessShortfall
   * @return excessShortfall
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getExcessShortfall() {
    return excessShortfall;
  }

  public void setExcessShortfall(CoinbaseFinancingAmount excessShortfall) {
    this.excessShortfall = excessShortfall;
  }

  public CoinbaseFinancingCollateralSnapshot heldCollateral(CoinbaseFinancingAmount heldCollateral) {
    this.heldCollateral = heldCollateral;
    return this;
  }

   /**
   * Get heldCollateral
   * @return heldCollateral
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getHeldCollateral() {
    return heldCollateral;
  }

  public void setHeldCollateral(CoinbaseFinancingAmount heldCollateral) {
    this.heldCollateral = heldCollateral;
  }

  public CoinbaseFinancingCollateralSnapshot heldCollateralPostHaircut(CoinbaseFinancingAmount heldCollateralPostHaircut) {
    this.heldCollateralPostHaircut = heldCollateralPostHaircut;
    return this;
  }

   /**
   * Get heldCollateralPostHaircut
   * @return heldCollateralPostHaircut
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getHeldCollateralPostHaircut() {
    return heldCollateralPostHaircut;
  }

  public void setHeldCollateralPostHaircut(CoinbaseFinancingAmount heldCollateralPostHaircut) {
    this.heldCollateralPostHaircut = heldCollateralPostHaircut;
  }

  public CoinbaseFinancingCollateralSnapshot snapshotTime(OffsetDateTime snapshotTime) {
    this.snapshotTime = snapshotTime;
    return this;
  }

   /**
   * Get snapshotTime
   * @return snapshotTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getSnapshotTime() {
    return snapshotTime;
  }

  public void setSnapshotTime(OffsetDateTime snapshotTime) {
    this.snapshotTime = snapshotTime;
  }

  public CoinbaseFinancingCollateralSnapshot excessShortfallPercentage(String excessShortfallPercentage) {
    this.excessShortfallPercentage = excessShortfallPercentage;
    return this;
  }

   /**
   * Get excessShortfallPercentage
   * @return excessShortfallPercentage
  **/
  @ApiModelProperty(value = "")
  public String getExcessShortfallPercentage() {
    return excessShortfallPercentage;
  }

  public void setExcessShortfallPercentage(String excessShortfallPercentage) {
    this.excessShortfallPercentage = excessShortfallPercentage;
  }

  public CoinbaseFinancingCollateralSnapshot heldCollateralBreakdown(List<CoinbaseFinancingCollateral> heldCollateralBreakdown) {
    this.heldCollateralBreakdown = heldCollateralBreakdown;
    return this;
  }

  public CoinbaseFinancingCollateralSnapshot addHeldCollateralBreakdownItem(CoinbaseFinancingCollateral heldCollateralBreakdownItem) {
    if (this.heldCollateralBreakdown == null) {
      this.heldCollateralBreakdown = new ArrayList<CoinbaseFinancingCollateral>();
    }
    this.heldCollateralBreakdown.add(heldCollateralBreakdownItem);
    return this;
  }

   /**
   * Get heldCollateralBreakdown
   * @return heldCollateralBreakdown
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingCollateral> getHeldCollateralBreakdown() {
    return heldCollateralBreakdown;
  }

  public void setHeldCollateralBreakdown(List<CoinbaseFinancingCollateral> heldCollateralBreakdown) {
    this.heldCollateralBreakdown = heldCollateralBreakdown;
  }

  public CoinbaseFinancingCollateralSnapshot heldCollateralPostHaircutBreakdown(List<CoinbaseFinancingCollateral> heldCollateralPostHaircutBreakdown) {
    this.heldCollateralPostHaircutBreakdown = heldCollateralPostHaircutBreakdown;
    return this;
  }

  public CoinbaseFinancingCollateralSnapshot addHeldCollateralPostHaircutBreakdownItem(CoinbaseFinancingCollateral heldCollateralPostHaircutBreakdownItem) {
    if (this.heldCollateralPostHaircutBreakdown == null) {
      this.heldCollateralPostHaircutBreakdown = new ArrayList<CoinbaseFinancingCollateral>();
    }
    this.heldCollateralPostHaircutBreakdown.add(heldCollateralPostHaircutBreakdownItem);
    return this;
  }

   /**
   * Get heldCollateralPostHaircutBreakdown
   * @return heldCollateralPostHaircutBreakdown
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingCollateral> getHeldCollateralPostHaircutBreakdown() {
    return heldCollateralPostHaircutBreakdown;
  }

  public void setHeldCollateralPostHaircutBreakdown(List<CoinbaseFinancingCollateral> heldCollateralPostHaircutBreakdown) {
    this.heldCollateralPostHaircutBreakdown = heldCollateralPostHaircutBreakdown;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingCollateralSnapshot coinbaseFinancingCollateralSnapshot = (CoinbaseFinancingCollateralSnapshot) o;
    return Objects.equals(this.borrowerName, coinbaseFinancingCollateralSnapshot.borrowerName) &&
        Objects.equals(this.marginStatus, coinbaseFinancingCollateralSnapshot.marginStatus) &&
        Objects.equals(this.requiredCollateral, coinbaseFinancingCollateralSnapshot.requiredCollateral) &&
        Objects.equals(this.excessShortfall, coinbaseFinancingCollateralSnapshot.excessShortfall) &&
        Objects.equals(this.heldCollateral, coinbaseFinancingCollateralSnapshot.heldCollateral) &&
        Objects.equals(this.heldCollateralPostHaircut, coinbaseFinancingCollateralSnapshot.heldCollateralPostHaircut) &&
        Objects.equals(this.snapshotTime, coinbaseFinancingCollateralSnapshot.snapshotTime) &&
        Objects.equals(this.excessShortfallPercentage, coinbaseFinancingCollateralSnapshot.excessShortfallPercentage) &&
        Objects.equals(this.heldCollateralBreakdown, coinbaseFinancingCollateralSnapshot.heldCollateralBreakdown) &&
        Objects.equals(this.heldCollateralPostHaircutBreakdown, coinbaseFinancingCollateralSnapshot.heldCollateralPostHaircutBreakdown);
  }

  @Override
  public int hashCode() {
    return Objects.hash(borrowerName, marginStatus, requiredCollateral, excessShortfall, heldCollateral, heldCollateralPostHaircut, snapshotTime, excessShortfallPercentage, heldCollateralBreakdown, heldCollateralPostHaircutBreakdown);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingCollateralSnapshot {\n");
    
    sb.append("    borrowerName: ").append(toIndentedString(borrowerName)).append("\n");
    sb.append("    marginStatus: ").append(toIndentedString(marginStatus)).append("\n");
    sb.append("    requiredCollateral: ").append(toIndentedString(requiredCollateral)).append("\n");
    sb.append("    excessShortfall: ").append(toIndentedString(excessShortfall)).append("\n");
    sb.append("    heldCollateral: ").append(toIndentedString(heldCollateral)).append("\n");
    sb.append("    heldCollateralPostHaircut: ").append(toIndentedString(heldCollateralPostHaircut)).append("\n");
    sb.append("    snapshotTime: ").append(toIndentedString(snapshotTime)).append("\n");
    sb.append("    excessShortfallPercentage: ").append(toIndentedString(excessShortfallPercentage)).append("\n");
    sb.append("    heldCollateralBreakdown: ").append(toIndentedString(heldCollateralBreakdown)).append("\n");
    sb.append("    heldCollateralPostHaircutBreakdown: ").append(toIndentedString(heldCollateralPostHaircutBreakdown)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

