/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets coinbase.custody.api.TransactionType
 */
@JsonAdapter(CoinbaseCustodyApiTransactionType.Adapter.class)
public enum CoinbaseCustodyApiTransactionType {
  
  UNKNOWN("TRANSACTION_TYPE_UNKNOWN"),
  
  DEPOSIT("TRANSACTION_TYPE_DEPOSIT"),
  
  WITHDRAWAL("TRANSACTION_TYPE_WITHDRAWAL"),
  
  REWARD("TRANSACTION_TYPE_REWARD"),
  
  SWEEP_WITHDRAWAL("TRANSACTION_TYPE_SWEEP_WITHDRAWAL"),
  
  SWEEP_DEPOSIT("TRANSACTION_TYPE_SWEEP_DEPOSIT"),
  
  TRANSFER_WITHDRAWAL("TRANSACTION_TYPE_TRANSFER_WITHDRAWAL"),
  
  TRANSFER_DEPOSIT("TRANSACTION_TYPE_TRANSFER_DEPOSIT"),
  
  PROXY_WITHDRAWAL("TRANSACTION_TYPE_PROXY_WITHDRAWAL"),
  
  PROXY_DEPOSIT("TRANSACTION_TYPE_PROXY_DEPOSIT"),
  
  COINBASE_DEPOSIT("TRANSACTION_TYPE_COINBASE_DEPOSIT"),
  
  KEY_REGISTRATION("TRANSACTION_TYPE_KEY_REGISTRATION"),
  
  BILLING_WITHDRAWAL("TRANSACTION_TYPE_BILLING_WITHDRAWAL"),
  
  DELEGATION("TRANSACTION_TYPE_DELEGATION"),
  
  UNDELEGATION("TRANSACTION_TYPE_UNDELEGATION"),
  
  RESTAKE("TRANSACTION_TYPE_RESTAKE"),
  
  COMPLETE_UNBONDING("TRANSACTION_TYPE_COMPLETE_UNBONDING"),
  
  COINBASE_REFUND("TRANSACTION_TYPE_COINBASE_REFUND"),
  
  WITHDRAW_UNBONDED("TRANSACTION_TYPE_WITHDRAW_UNBONDED"),
  
  STAKE_ACCOUNT_CREATE("TRANSACTION_TYPE_STAKE_ACCOUNT_CREATE"),
  
  CHANGE_VALIDATOR("TRANSACTION_TYPE_CHANGE_VALIDATOR"),
  
  STAKE("TRANSACTION_TYPE_STAKE"),
  
  UNSTAKE("TRANSACTION_TYPE_UNSTAKE"),
  
  INTERNAL_DEPOSIT("TRANSACTION_TYPE_INTERNAL_DEPOSIT"),
  
  INTERNAL_WITHDRAWAL("TRANSACTION_TYPE_INTERNAL_WITHDRAWAL"),
  
  STAKE_AUTHORIZE_WITH_SEED("TRANSACTION_TYPE_STAKE_AUTHORIZE_WITH_SEED"),
  
  REMOVE_AUTHORIZED_PARTY("TRANSACTION_TYPE_REMOVE_AUTHORIZED_PARTY"),
  
  SLASH("TRANSACTION_TYPE_SLASH"),
  
  CLAIM_REWARDS("TRANSACTION_TYPE_CLAIM_REWARDS"),
  
  VOTE_AUTHORIZE("TRANSACTION_TYPE_VOTE_AUTHORIZE");

  private String value;

  CoinbaseCustodyApiTransactionType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbaseCustodyApiTransactionType fromValue(String text) {
    for (CoinbaseCustodyApiTransactionType b : CoinbaseCustodyApiTransactionType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbaseCustodyApiTransactionType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbaseCustodyApiTransactionType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbaseCustodyApiTransactionType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbaseCustodyApiTransactionType.fromValue(String.valueOf(value));
    }
  }
}

