/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiCurrency
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiCurrency {
  @SerializedName("minimum_withdrawal_value")
  private String minimumWithdrawalValue = null;

  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("currency_decimals")
  private Integer currencyDecimals = null;

  public CoinbaseEngPrimeApiApiCurrency minimumWithdrawalValue(String minimumWithdrawalValue) {
    this.minimumWithdrawalValue = minimumWithdrawalValue;
    return this;
  }

   /**
   * Get minimumWithdrawalValue
   * @return minimumWithdrawalValue
  **/
  @ApiModelProperty(value = "")
  public String getMinimumWithdrawalValue() {
    return minimumWithdrawalValue;
  }

  public void setMinimumWithdrawalValue(String minimumWithdrawalValue) {
    this.minimumWithdrawalValue = minimumWithdrawalValue;
  }

  public CoinbaseEngPrimeApiApiCurrency currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @ApiModelProperty(value = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CoinbaseEngPrimeApiApiCurrency currencyDecimals(Integer currencyDecimals) {
    this.currencyDecimals = currencyDecimals;
    return this;
  }

   /**
   * Get currencyDecimals
   * @return currencyDecimals
  **/
  @ApiModelProperty(value = "")
  public Integer getCurrencyDecimals() {
    return currencyDecimals;
  }

  public void setCurrencyDecimals(Integer currencyDecimals) {
    this.currencyDecimals = currencyDecimals;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiCurrency coinbaseEngPrimeApiApiCurrency = (CoinbaseEngPrimeApiApiCurrency) o;
    return Objects.equals(this.minimumWithdrawalValue, coinbaseEngPrimeApiApiCurrency.minimumWithdrawalValue) &&
        Objects.equals(this.currencySymbol, coinbaseEngPrimeApiApiCurrency.currencySymbol) &&
        Objects.equals(this.currencyDecimals, coinbaseEngPrimeApiApiCurrency.currencyDecimals);
  }

  @Override
  public int hashCode() {
    return Objects.hash(minimumWithdrawalValue, currencySymbol, currencyDecimals);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiCurrency {\n");
    
    sb.append("    minimumWithdrawalValue: ").append(toIndentedString(minimumWithdrawalValue)).append("\n");
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    currencyDecimals: ").append(toIndentedString(currencyDecimals)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

