/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiCancelReason;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration;
import java.io.IOException;

/**
 * CoinbaseEngPrimeActivityApiOrderExecutionMetadata
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeActivityApiOrderExecutionMetadata {
  @SerializedName("completion_percentage")
  private String completionPercentage = null;

  @SerializedName("entry_order_configuration")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration entryOrderConfiguration = null;

  @SerializedName("limit_price")
  private String limitPrice = null;

  @SerializedName("total_order_quantity")
  private String totalOrderQuantity = null;

  @SerializedName("order_currency")
  private String orderCurrency = null;

  @SerializedName("filled_base_quantity")
  private String filledBaseQuantity = null;

  @SerializedName("filled_quote_quantity")
  private String filledQuoteQuantity = null;

  @SerializedName("average_fill_price")
  private String averageFillPrice = null;

  @SerializedName("total_commission")
  private String totalCommission = null;

  @SerializedName("cancel_reason")
  private CoinbaseBrokerageProxyEventsMaterializedApiCancelReason cancelReason = null;

  @SerializedName("is_allocated")
  private Boolean isAllocated = null;

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata completionPercentage(String completionPercentage) {
    this.completionPercentage = completionPercentage;
    return this;
  }

   /**
   * Get completionPercentage
   * @return completionPercentage
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCompletionPercentage() {
    return completionPercentage;
  }

  public void setCompletionPercentage(String completionPercentage) {
    this.completionPercentage = completionPercentage;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata entryOrderConfiguration(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration entryOrderConfiguration) {
    this.entryOrderConfiguration = entryOrderConfiguration;
    return this;
  }

   /**
   * Get entryOrderConfiguration
   * @return entryOrderConfiguration
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration getEntryOrderConfiguration() {
    return entryOrderConfiguration;
  }

  public void setEntryOrderConfiguration(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration entryOrderConfiguration) {
    this.entryOrderConfiguration = entryOrderConfiguration;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata limitPrice(String limitPrice) {
    this.limitPrice = limitPrice;
    return this;
  }

   /**
   * Get limitPrice
   * @return limitPrice
  **/
  @ApiModelProperty(value = "")
  public String getLimitPrice() {
    return limitPrice;
  }

  public void setLimitPrice(String limitPrice) {
    this.limitPrice = limitPrice;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata totalOrderQuantity(String totalOrderQuantity) {
    this.totalOrderQuantity = totalOrderQuantity;
    return this;
  }

   /**
   * Get totalOrderQuantity
   * @return totalOrderQuantity
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTotalOrderQuantity() {
    return totalOrderQuantity;
  }

  public void setTotalOrderQuantity(String totalOrderQuantity) {
    this.totalOrderQuantity = totalOrderQuantity;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata orderCurrency(String orderCurrency) {
    this.orderCurrency = orderCurrency;
    return this;
  }

   /**
   * Get orderCurrency
   * @return orderCurrency
  **/
  @ApiModelProperty(required = true, value = "")
  public String getOrderCurrency() {
    return orderCurrency;
  }

  public void setOrderCurrency(String orderCurrency) {
    this.orderCurrency = orderCurrency;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata filledBaseQuantity(String filledBaseQuantity) {
    this.filledBaseQuantity = filledBaseQuantity;
    return this;
  }

   /**
   * Get filledBaseQuantity
   * @return filledBaseQuantity
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFilledBaseQuantity() {
    return filledBaseQuantity;
  }

  public void setFilledBaseQuantity(String filledBaseQuantity) {
    this.filledBaseQuantity = filledBaseQuantity;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata filledQuoteQuantity(String filledQuoteQuantity) {
    this.filledQuoteQuantity = filledQuoteQuantity;
    return this;
  }

   /**
   * Get filledQuoteQuantity
   * @return filledQuoteQuantity
  **/
  @ApiModelProperty(required = true, value = "")
  public String getFilledQuoteQuantity() {
    return filledQuoteQuantity;
  }

  public void setFilledQuoteQuantity(String filledQuoteQuantity) {
    this.filledQuoteQuantity = filledQuoteQuantity;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata averageFillPrice(String averageFillPrice) {
    this.averageFillPrice = averageFillPrice;
    return this;
  }

   /**
   * Get averageFillPrice
   * @return averageFillPrice
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAverageFillPrice() {
    return averageFillPrice;
  }

  public void setAverageFillPrice(String averageFillPrice) {
    this.averageFillPrice = averageFillPrice;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata totalCommission(String totalCommission) {
    this.totalCommission = totalCommission;
    return this;
  }

   /**
   * Get totalCommission
   * @return totalCommission
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTotalCommission() {
    return totalCommission;
  }

  public void setTotalCommission(String totalCommission) {
    this.totalCommission = totalCommission;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata cancelReason(CoinbaseBrokerageProxyEventsMaterializedApiCancelReason cancelReason) {
    this.cancelReason = cancelReason;
    return this;
  }

   /**
   * Get cancelReason
   * @return cancelReason
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiCancelReason getCancelReason() {
    return cancelReason;
  }

  public void setCancelReason(CoinbaseBrokerageProxyEventsMaterializedApiCancelReason cancelReason) {
    this.cancelReason = cancelReason;
  }

  public CoinbaseEngPrimeActivityApiOrderExecutionMetadata isAllocated(Boolean isAllocated) {
    this.isAllocated = isAllocated;
    return this;
  }

   /**
   * Get isAllocated
   * @return isAllocated
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsAllocated() {
    return isAllocated;
  }

  public void setIsAllocated(Boolean isAllocated) {
    this.isAllocated = isAllocated;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeActivityApiOrderExecutionMetadata coinbaseEngPrimeActivityApiOrderExecutionMetadata = (CoinbaseEngPrimeActivityApiOrderExecutionMetadata) o;
    return Objects.equals(this.completionPercentage, coinbaseEngPrimeActivityApiOrderExecutionMetadata.completionPercentage) &&
        Objects.equals(this.entryOrderConfiguration, coinbaseEngPrimeActivityApiOrderExecutionMetadata.entryOrderConfiguration) &&
        Objects.equals(this.limitPrice, coinbaseEngPrimeActivityApiOrderExecutionMetadata.limitPrice) &&
        Objects.equals(this.totalOrderQuantity, coinbaseEngPrimeActivityApiOrderExecutionMetadata.totalOrderQuantity) &&
        Objects.equals(this.orderCurrency, coinbaseEngPrimeActivityApiOrderExecutionMetadata.orderCurrency) &&
        Objects.equals(this.filledBaseQuantity, coinbaseEngPrimeActivityApiOrderExecutionMetadata.filledBaseQuantity) &&
        Objects.equals(this.filledQuoteQuantity, coinbaseEngPrimeActivityApiOrderExecutionMetadata.filledQuoteQuantity) &&
        Objects.equals(this.averageFillPrice, coinbaseEngPrimeActivityApiOrderExecutionMetadata.averageFillPrice) &&
        Objects.equals(this.totalCommission, coinbaseEngPrimeActivityApiOrderExecutionMetadata.totalCommission) &&
        Objects.equals(this.cancelReason, coinbaseEngPrimeActivityApiOrderExecutionMetadata.cancelReason) &&
        Objects.equals(this.isAllocated, coinbaseEngPrimeActivityApiOrderExecutionMetadata.isAllocated);
  }

  @Override
  public int hashCode() {
    return Objects.hash(completionPercentage, entryOrderConfiguration, limitPrice, totalOrderQuantity, orderCurrency, filledBaseQuantity, filledQuoteQuantity, averageFillPrice, totalCommission, cancelReason, isAllocated);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeActivityApiOrderExecutionMetadata {\n");
    
    sb.append("    completionPercentage: ").append(toIndentedString(completionPercentage)).append("\n");
    sb.append("    entryOrderConfiguration: ").append(toIndentedString(entryOrderConfiguration)).append("\n");
    sb.append("    limitPrice: ").append(toIndentedString(limitPrice)).append("\n");
    sb.append("    totalOrderQuantity: ").append(toIndentedString(totalOrderQuantity)).append("\n");
    sb.append("    orderCurrency: ").append(toIndentedString(orderCurrency)).append("\n");
    sb.append("    filledBaseQuantity: ").append(toIndentedString(filledBaseQuantity)).append("\n");
    sb.append("    filledQuoteQuantity: ").append(toIndentedString(filledQuoteQuantity)).append("\n");
    sb.append("    averageFillPrice: ").append(toIndentedString(averageFillPrice)).append("\n");
    sb.append("    totalCommission: ").append(toIndentedString(totalCommission)).append("\n");
    sb.append("    cancelReason: ").append(toIndentedString(cancelReason)).append("\n");
    sb.append("    isAllocated: ").append(toIndentedString(isAllocated)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

