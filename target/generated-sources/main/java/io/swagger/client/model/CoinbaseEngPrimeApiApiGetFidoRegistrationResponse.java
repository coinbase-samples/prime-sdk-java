/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPublicKeyCredentialParameters;
import io.swagger.client.model.CoinbaseEngPrimeApiApiRpEntity;
import io.swagger.client.model.CoinbaseEngPrimeApiApiUserEntity;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Follows PublicKeyCredentialCreationOptions https://www.w3.org/TR/webauthn/#dictdef-publickeycredentialcreationoptions The timeout is left for the client to control.
 */
@ApiModel(description = "Follows PublicKeyCredentialCreationOptions https://www.w3.org/TR/webauthn/#dictdef-publickeycredentialcreationoptions The timeout is left for the client to control.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiGetFidoRegistrationResponse {
  @SerializedName("rp")
  private CoinbaseEngPrimeApiApiRpEntity rp = null;

  @SerializedName("user")
  private CoinbaseEngPrimeApiApiUserEntity user = null;

  @SerializedName("challenge")
  private byte[] challenge = null;

  @SerializedName("pub_key_cred_params")
  private List<CoinbaseEngPrimeApiApiPublicKeyCredentialParameters> pubKeyCredParams = new ArrayList<CoinbaseEngPrimeApiApiPublicKeyCredentialParameters>();

  @SerializedName("exclude_credentials")
  private List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> excludeCredentials = null;

  @SerializedName("authenticator_selection")
  private CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria authenticatorSelection = null;

  @SerializedName("attestation")
  private String attestation = null;

  @SerializedName("extensions")
  private CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs extensions = null;

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse rp(CoinbaseEngPrimeApiApiRpEntity rp) {
    this.rp = rp;
    return this;
  }

   /**
   * Get rp
   * @return rp
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeApiApiRpEntity getRp() {
    return rp;
  }

  public void setRp(CoinbaseEngPrimeApiApiRpEntity rp) {
    this.rp = rp;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse user(CoinbaseEngPrimeApiApiUserEntity user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeApiApiUserEntity getUser() {
    return user;
  }

  public void setUser(CoinbaseEngPrimeApiApiUserEntity user) {
    this.user = user;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse challenge(byte[] challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Get challenge
   * @return challenge
  **/
  @ApiModelProperty(required = true, value = "")
  public byte[] getChallenge() {
    return challenge;
  }

  public void setChallenge(byte[] challenge) {
    this.challenge = challenge;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse pubKeyCredParams(List<CoinbaseEngPrimeApiApiPublicKeyCredentialParameters> pubKeyCredParams) {
    this.pubKeyCredParams = pubKeyCredParams;
    return this;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse addPubKeyCredParamsItem(CoinbaseEngPrimeApiApiPublicKeyCredentialParameters pubKeyCredParamsItem) {
    this.pubKeyCredParams.add(pubKeyCredParamsItem);
    return this;
  }

   /**
   * Get pubKeyCredParams
   * @return pubKeyCredParams
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseEngPrimeApiApiPublicKeyCredentialParameters> getPubKeyCredParams() {
    return pubKeyCredParams;
  }

  public void setPubKeyCredParams(List<CoinbaseEngPrimeApiApiPublicKeyCredentialParameters> pubKeyCredParams) {
    this.pubKeyCredParams = pubKeyCredParams;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse excludeCredentials(List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> excludeCredentials) {
    this.excludeCredentials = excludeCredentials;
    return this;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse addExcludeCredentialsItem(CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor excludeCredentialsItem) {
    if (this.excludeCredentials == null) {
      this.excludeCredentials = new ArrayList<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor>();
    }
    this.excludeCredentials.add(excludeCredentialsItem);
    return this;
  }

   /**
   * Get excludeCredentials
   * @return excludeCredentials
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> getExcludeCredentials() {
    return excludeCredentials;
  }

  public void setExcludeCredentials(List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> excludeCredentials) {
    this.excludeCredentials = excludeCredentials;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse authenticatorSelection(CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria authenticatorSelection) {
    this.authenticatorSelection = authenticatorSelection;
    return this;
  }

   /**
   * Get authenticatorSelection
   * @return authenticatorSelection
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria getAuthenticatorSelection() {
    return authenticatorSelection;
  }

  public void setAuthenticatorSelection(CoinbaseEngPrimeApiApiAuthenticatorSelectionCriteria authenticatorSelection) {
    this.authenticatorSelection = authenticatorSelection;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse attestation(String attestation) {
    this.attestation = attestation;
    return this;
  }

   /**
   * Get attestation
   * @return attestation
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAttestation() {
    return attestation;
  }

  public void setAttestation(String attestation) {
    this.attestation = attestation;
  }

  public CoinbaseEngPrimeApiApiGetFidoRegistrationResponse extensions(CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs extensions) {
    this.extensions = extensions;
    return this;
  }

   /**
   * Get extensions
   * @return extensions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs getExtensions() {
    return extensions;
  }

  public void setExtensions(CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs extensions) {
    this.extensions = extensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiGetFidoRegistrationResponse coinbaseEngPrimeApiApiGetFidoRegistrationResponse = (CoinbaseEngPrimeApiApiGetFidoRegistrationResponse) o;
    return Objects.equals(this.rp, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.rp) &&
        Objects.equals(this.user, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.user) &&
        Objects.equals(this.challenge, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.challenge) &&
        Objects.equals(this.pubKeyCredParams, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.pubKeyCredParams) &&
        Objects.equals(this.excludeCredentials, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.excludeCredentials) &&
        Objects.equals(this.authenticatorSelection, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.authenticatorSelection) &&
        Objects.equals(this.attestation, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.attestation) &&
        Objects.equals(this.extensions, coinbaseEngPrimeApiApiGetFidoRegistrationResponse.extensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(rp, user, challenge, pubKeyCredParams, excludeCredentials, authenticatorSelection, attestation, extensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiGetFidoRegistrationResponse {\n");
    
    sb.append("    rp: ").append(toIndentedString(rp)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    pubKeyCredParams: ").append(toIndentedString(pubKeyCredParams)).append("\n");
    sb.append("    excludeCredentials: ").append(toIndentedString(excludeCredentials)).append("\n");
    sb.append("    authenticatorSelection: ").append(toIndentedString(authenticatorSelection)).append("\n");
    sb.append("    attestation: ").append(toIndentedString(attestation)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

