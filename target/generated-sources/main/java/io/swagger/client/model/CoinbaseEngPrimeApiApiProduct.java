/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiProductPermissions;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiProduct
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiProduct {
  @SerializedName("product_id")
  private String productId = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("volume_24h")
  private String volume24h = null;

  @SerializedName("volume_percentage_change_24h")
  private String volumePercentageChange24h = null;

  @SerializedName("base_increment")
  private String baseIncrement = null;

  @SerializedName("quote_increment")
  private String quoteIncrement = null;

  @SerializedName("base_min_size")
  private String baseMinSize = null;

  @SerializedName("base_max_size")
  private String baseMaxSize = null;

  @SerializedName("quote_min_size")
  private String quoteMinSize = null;

  @SerializedName("quote_max_size")
  private String quoteMaxSize = null;

  @SerializedName("price_percentage_change_24h")
  private String pricePercentageChange24h = null;

  @SerializedName("high_24h")
  private String high24h = null;

  @SerializedName("low_24h")
  private String low24h = null;

  @SerializedName("high_52w")
  private String high52w = null;

  @SerializedName("low_52w")
  private String low52w = null;

  @SerializedName("market_cap")
  private String marketCap = null;

  @SerializedName("permissions")
  private List<CoinbaseEngPrimeApiApiProductPermissions> permissions = null;

  @SerializedName("price_percentage_change_mtd")
  private String pricePercentageChangeMtd = null;

  @SerializedName("price_percentage_change_ytd")
  private String pricePercentageChangeYtd = null;

  @SerializedName("usd_volume_24h")
  private String usdVolume24h = null;

  @SerializedName("price_increment")
  private String priceIncrement = null;

  public CoinbaseEngPrimeApiApiProduct productId(String productId) {
    this.productId = productId;
    return this;
  }

   /**
   * The id for the product pair, written as base-quote
   * @return productId
  **/
  @ApiModelProperty(required = true, value = "The id for the product pair, written as base-quote")
  public String getProductId() {
    return productId;
  }

  public void setProductId(String productId) {
    this.productId = productId;
  }

  public CoinbaseEngPrimeApiApiProduct price(String price) {
    this.price = price;
    return this;
  }

   /**
   * The quote price for one unit of base asset
   * @return price
  **/
  @ApiModelProperty(required = true, value = "The quote price for one unit of base asset")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CoinbaseEngPrimeApiApiProduct volume24h(String volume24h) {
    this.volume24h = volume24h;
    return this;
  }

   /**
   * How much base currency has been used for trading current product in the last 24 hours
   * @return volume24h
  **/
  @ApiModelProperty(required = true, value = "How much base currency has been used for trading current product in the last 24 hours")
  public String getVolume24h() {
    return volume24h;
  }

  public void setVolume24h(String volume24h) {
    this.volume24h = volume24h;
  }

  public CoinbaseEngPrimeApiApiProduct volumePercentageChange24h(String volumePercentageChange24h) {
    this.volumePercentageChange24h = volumePercentageChange24h;
    return this;
  }

   /**
   * Compare previous 24 hour window (48-24 hours ago) with current 24 hour window (24 hours ago-current), expressed in percent
   * @return volumePercentageChange24h
  **/
  @ApiModelProperty(required = true, value = "Compare previous 24 hour window (48-24 hours ago) with current 24 hour window (24 hours ago-current), expressed in percent")
  public String getVolumePercentageChange24h() {
    return volumePercentageChange24h;
  }

  public void setVolumePercentageChange24h(String volumePercentageChange24h) {
    this.volumePercentageChange24h = volumePercentageChange24h;
  }

  public CoinbaseEngPrimeApiApiProduct baseIncrement(String baseIncrement) {
    this.baseIncrement = baseIncrement;
    return this;
  }

   /**
   * The smallest possible unit of base currency *relative to current product* - if product is ETH-DAI, base increment is .0001, if product is ETH-USD, base increment is .00000001
   * @return baseIncrement
  **/
  @ApiModelProperty(required = true, value = "The smallest possible unit of base currency *relative to current product* - if product is ETH-DAI, base increment is .0001, if product is ETH-USD, base increment is .00000001")
  public String getBaseIncrement() {
    return baseIncrement;
  }

  public void setBaseIncrement(String baseIncrement) {
    this.baseIncrement = baseIncrement;
  }

  public CoinbaseEngPrimeApiApiProduct quoteIncrement(String quoteIncrement) {
    this.quoteIncrement = quoteIncrement;
    return this;
  }

   /**
   * The smallest possible unit of quote currency *relative to current product* - if product is ALGO-USD, quote increment is .001, if product is ETH-USD, quote increment is .01
   * @return quoteIncrement
  **/
  @ApiModelProperty(required = true, value = "The smallest possible unit of quote currency *relative to current product* - if product is ALGO-USD, quote increment is .001, if product is ETH-USD, quote increment is .01")
  public String getQuoteIncrement() {
    return quoteIncrement;
  }

  public void setQuoteIncrement(String quoteIncrement) {
    this.quoteIncrement = quoteIncrement;
  }

  public CoinbaseEngPrimeApiApiProduct baseMinSize(String baseMinSize) {
    this.baseMinSize = baseMinSize;
    return this;
  }

   /**
   * The minimum size (base asset) for which an order can be placed
   * @return baseMinSize
  **/
  @ApiModelProperty(required = true, value = "The minimum size (base asset) for which an order can be placed")
  public String getBaseMinSize() {
    return baseMinSize;
  }

  public void setBaseMinSize(String baseMinSize) {
    this.baseMinSize = baseMinSize;
  }

  public CoinbaseEngPrimeApiApiProduct baseMaxSize(String baseMaxSize) {
    this.baseMaxSize = baseMaxSize;
    return this;
  }

   /**
   * The maximum size (base asset) for which an order can be placed
   * @return baseMaxSize
  **/
  @ApiModelProperty(required = true, value = "The maximum size (base asset) for which an order can be placed")
  public String getBaseMaxSize() {
    return baseMaxSize;
  }

  public void setBaseMaxSize(String baseMaxSize) {
    this.baseMaxSize = baseMaxSize;
  }

  public CoinbaseEngPrimeApiApiProduct quoteMinSize(String quoteMinSize) {
    this.quoteMinSize = quoteMinSize;
    return this;
  }

   /**
   * The minimum size (quote asset) for which an order can be placed
   * @return quoteMinSize
  **/
  @ApiModelProperty(required = true, value = "The minimum size (quote asset) for which an order can be placed")
  public String getQuoteMinSize() {
    return quoteMinSize;
  }

  public void setQuoteMinSize(String quoteMinSize) {
    this.quoteMinSize = quoteMinSize;
  }

  public CoinbaseEngPrimeApiApiProduct quoteMaxSize(String quoteMaxSize) {
    this.quoteMaxSize = quoteMaxSize;
    return this;
  }

   /**
   * The maximum size (quote asset) for which an order can be placed
   * @return quoteMaxSize
  **/
  @ApiModelProperty(required = true, value = "The maximum size (quote asset) for which an order can be placed")
  public String getQuoteMaxSize() {
    return quoteMaxSize;
  }

  public void setQuoteMaxSize(String quoteMaxSize) {
    this.quoteMaxSize = quoteMaxSize;
  }

  public CoinbaseEngPrimeApiApiProduct pricePercentageChange24h(String pricePercentageChange24h) {
    this.pricePercentageChange24h = pricePercentageChange24h;
    return this;
  }

   /**
   * Compare price of one unit of base asset at beginning &amp; end of 24 hour window: (currentPrice - previousPrice) / currentPrice
   * @return pricePercentageChange24h
  **/
  @ApiModelProperty(value = "Compare price of one unit of base asset at beginning & end of 24 hour window: (currentPrice - previousPrice) / currentPrice")
  public String getPricePercentageChange24h() {
    return pricePercentageChange24h;
  }

  public void setPricePercentageChange24h(String pricePercentageChange24h) {
    this.pricePercentageChange24h = pricePercentageChange24h;
  }

  public CoinbaseEngPrimeApiApiProduct high24h(String high24h) {
    this.high24h = high24h;
    return this;
  }

   /**
   * Highest price value in the last 24 hours
   * @return high24h
  **/
  @ApiModelProperty(value = "Highest price value in the last 24 hours")
  public String getHigh24h() {
    return high24h;
  }

  public void setHigh24h(String high24h) {
    this.high24h = high24h;
  }

  public CoinbaseEngPrimeApiApiProduct low24h(String low24h) {
    this.low24h = low24h;
    return this;
  }

   /**
   * Lowest price value in the last 24 hours
   * @return low24h
  **/
  @ApiModelProperty(value = "Lowest price value in the last 24 hours")
  public String getLow24h() {
    return low24h;
  }

  public void setLow24h(String low24h) {
    this.low24h = low24h;
  }

  public CoinbaseEngPrimeApiApiProduct high52w(String high52w) {
    this.high52w = high52w;
    return this;
  }

   /**
   * Highest price value in the last 52 weeks
   * @return high52w
  **/
  @ApiModelProperty(value = "Highest price value in the last 52 weeks")
  public String getHigh52w() {
    return high52w;
  }

  public void setHigh52w(String high52w) {
    this.high52w = high52w;
  }

  public CoinbaseEngPrimeApiApiProduct low52w(String low52w) {
    this.low52w = low52w;
    return this;
  }

   /**
   * Lowest price value in the last 52 weeks
   * @return low52w
  **/
  @ApiModelProperty(value = "Lowest price value in the last 52 weeks")
  public String getLow52w() {
    return low52w;
  }

  public void setLow52w(String low52w) {
    this.low52w = low52w;
  }

  public CoinbaseEngPrimeApiApiProduct marketCap(String marketCap) {
    this.marketCap = marketCap;
    return this;
  }

   /**
   * Total market valuation of the asset pair in quote
   * @return marketCap
  **/
  @ApiModelProperty(value = "Total market valuation of the asset pair in quote")
  public String getMarketCap() {
    return marketCap;
  }

  public void setMarketCap(String marketCap) {
    this.marketCap = marketCap;
  }

  public CoinbaseEngPrimeApiApiProduct permissions(List<CoinbaseEngPrimeApiApiProductPermissions> permissions) {
    this.permissions = permissions;
    return this;
  }

  public CoinbaseEngPrimeApiApiProduct addPermissionsItem(CoinbaseEngPrimeApiApiProductPermissions permissionsItem) {
    if (this.permissions == null) {
      this.permissions = new ArrayList<CoinbaseEngPrimeApiApiProductPermissions>();
    }
    this.permissions.add(permissionsItem);
    return this;
  }

   /**
   * Permissions given to user for product
   * @return permissions
  **/
  @ApiModelProperty(value = "Permissions given to user for product")
  public List<CoinbaseEngPrimeApiApiProductPermissions> getPermissions() {
    return permissions;
  }

  public void setPermissions(List<CoinbaseEngPrimeApiApiProductPermissions> permissions) {
    this.permissions = permissions;
  }

  public CoinbaseEngPrimeApiApiProduct pricePercentageChangeMtd(String pricePercentageChangeMtd) {
    this.pricePercentageChangeMtd = pricePercentageChangeMtd;
    return this;
  }

   /**
   * Compare price of one unit of base asset at beginning of the month vs now: (currentPrice - previousPrice) / currentPrice
   * @return pricePercentageChangeMtd
  **/
  @ApiModelProperty(value = "Compare price of one unit of base asset at beginning of the month vs now: (currentPrice - previousPrice) / currentPrice")
  public String getPricePercentageChangeMtd() {
    return pricePercentageChangeMtd;
  }

  public void setPricePercentageChangeMtd(String pricePercentageChangeMtd) {
    this.pricePercentageChangeMtd = pricePercentageChangeMtd;
  }

  public CoinbaseEngPrimeApiApiProduct pricePercentageChangeYtd(String pricePercentageChangeYtd) {
    this.pricePercentageChangeYtd = pricePercentageChangeYtd;
    return this;
  }

   /**
   * Compare price of one unit of base asset at beginning of the year vs now: (currentPrice - previousPrice) / currentPrice
   * @return pricePercentageChangeYtd
  **/
  @ApiModelProperty(value = "Compare price of one unit of base asset at beginning of the year vs now: (currentPrice - previousPrice) / currentPrice")
  public String getPricePercentageChangeYtd() {
    return pricePercentageChangeYtd;
  }

  public void setPricePercentageChangeYtd(String pricePercentageChangeYtd) {
    this.pricePercentageChangeYtd = pricePercentageChangeYtd;
  }

  public CoinbaseEngPrimeApiApiProduct usdVolume24h(String usdVolume24h) {
    this.usdVolume24h = usdVolume24h;
    return this;
  }

   /**
   * How much base currency, converted to USD, has been used for trading current product in the last 24 hours
   * @return usdVolume24h
  **/
  @ApiModelProperty(value = "How much base currency, converted to USD, has been used for trading current product in the last 24 hours")
  public String getUsdVolume24h() {
    return usdVolume24h;
  }

  public void setUsdVolume24h(String usdVolume24h) {
    this.usdVolume24h = usdVolume24h;
  }

  public CoinbaseEngPrimeApiApiProduct priceIncrement(String priceIncrement) {
    this.priceIncrement = priceIncrement;
    return this;
  }

   /**
   * The smallest possible unit of price in quote currency *relative to current product*
   * @return priceIncrement
  **/
  @ApiModelProperty(value = "The smallest possible unit of price in quote currency *relative to current product*")
  public String getPriceIncrement() {
    return priceIncrement;
  }

  public void setPriceIncrement(String priceIncrement) {
    this.priceIncrement = priceIncrement;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiProduct coinbaseEngPrimeApiApiProduct = (CoinbaseEngPrimeApiApiProduct) o;
    return Objects.equals(this.productId, coinbaseEngPrimeApiApiProduct.productId) &&
        Objects.equals(this.price, coinbaseEngPrimeApiApiProduct.price) &&
        Objects.equals(this.volume24h, coinbaseEngPrimeApiApiProduct.volume24h) &&
        Objects.equals(this.volumePercentageChange24h, coinbaseEngPrimeApiApiProduct.volumePercentageChange24h) &&
        Objects.equals(this.baseIncrement, coinbaseEngPrimeApiApiProduct.baseIncrement) &&
        Objects.equals(this.quoteIncrement, coinbaseEngPrimeApiApiProduct.quoteIncrement) &&
        Objects.equals(this.baseMinSize, coinbaseEngPrimeApiApiProduct.baseMinSize) &&
        Objects.equals(this.baseMaxSize, coinbaseEngPrimeApiApiProduct.baseMaxSize) &&
        Objects.equals(this.quoteMinSize, coinbaseEngPrimeApiApiProduct.quoteMinSize) &&
        Objects.equals(this.quoteMaxSize, coinbaseEngPrimeApiApiProduct.quoteMaxSize) &&
        Objects.equals(this.pricePercentageChange24h, coinbaseEngPrimeApiApiProduct.pricePercentageChange24h) &&
        Objects.equals(this.high24h, coinbaseEngPrimeApiApiProduct.high24h) &&
        Objects.equals(this.low24h, coinbaseEngPrimeApiApiProduct.low24h) &&
        Objects.equals(this.high52w, coinbaseEngPrimeApiApiProduct.high52w) &&
        Objects.equals(this.low52w, coinbaseEngPrimeApiApiProduct.low52w) &&
        Objects.equals(this.marketCap, coinbaseEngPrimeApiApiProduct.marketCap) &&
        Objects.equals(this.permissions, coinbaseEngPrimeApiApiProduct.permissions) &&
        Objects.equals(this.pricePercentageChangeMtd, coinbaseEngPrimeApiApiProduct.pricePercentageChangeMtd) &&
        Objects.equals(this.pricePercentageChangeYtd, coinbaseEngPrimeApiApiProduct.pricePercentageChangeYtd) &&
        Objects.equals(this.usdVolume24h, coinbaseEngPrimeApiApiProduct.usdVolume24h) &&
        Objects.equals(this.priceIncrement, coinbaseEngPrimeApiApiProduct.priceIncrement);
  }

  @Override
  public int hashCode() {
    return Objects.hash(productId, price, volume24h, volumePercentageChange24h, baseIncrement, quoteIncrement, baseMinSize, baseMaxSize, quoteMinSize, quoteMaxSize, pricePercentageChange24h, high24h, low24h, high52w, low52w, marketCap, permissions, pricePercentageChangeMtd, pricePercentageChangeYtd, usdVolume24h, priceIncrement);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiProduct {\n");
    
    sb.append("    productId: ").append(toIndentedString(productId)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    volume24h: ").append(toIndentedString(volume24h)).append("\n");
    sb.append("    volumePercentageChange24h: ").append(toIndentedString(volumePercentageChange24h)).append("\n");
    sb.append("    baseIncrement: ").append(toIndentedString(baseIncrement)).append("\n");
    sb.append("    quoteIncrement: ").append(toIndentedString(quoteIncrement)).append("\n");
    sb.append("    baseMinSize: ").append(toIndentedString(baseMinSize)).append("\n");
    sb.append("    baseMaxSize: ").append(toIndentedString(baseMaxSize)).append("\n");
    sb.append("    quoteMinSize: ").append(toIndentedString(quoteMinSize)).append("\n");
    sb.append("    quoteMaxSize: ").append(toIndentedString(quoteMaxSize)).append("\n");
    sb.append("    pricePercentageChange24h: ").append(toIndentedString(pricePercentageChange24h)).append("\n");
    sb.append("    high24h: ").append(toIndentedString(high24h)).append("\n");
    sb.append("    low24h: ").append(toIndentedString(low24h)).append("\n");
    sb.append("    high52w: ").append(toIndentedString(high52w)).append("\n");
    sb.append("    low52w: ").append(toIndentedString(low52w)).append("\n");
    sb.append("    marketCap: ").append(toIndentedString(marketCap)).append("\n");
    sb.append("    permissions: ").append(toIndentedString(permissions)).append("\n");
    sb.append("    pricePercentageChangeMtd: ").append(toIndentedString(pricePercentageChangeMtd)).append("\n");
    sb.append("    pricePercentageChangeYtd: ").append(toIndentedString(pricePercentageChangeYtd)).append("\n");
    sb.append("    usdVolume24h: ").append(toIndentedString(usdVolume24h)).append("\n");
    sb.append("    priceIncrement: ").append(toIndentedString(priceIncrement)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

