/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiToken
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiToken {
  @SerializedName("contract_address")
  private String contractAddress = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("protocol_name")
  private String protocolName = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("network")
  private String network = null;

  @SerializedName("type")
  private String type = null;

  @SerializedName("site_url")
  private String siteUrl = null;

  @SerializedName("icon_url")
  private String iconUrl = null;

  @SerializedName("protocol_logo_url")
  private String protocolLogoUrl = null;

  @SerializedName("network_display_name")
  private String networkDisplayName = null;

  public CoinbaseEngPrimeApiApiToken contractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
    return this;
  }

   /**
   * Get contractAddress
   * @return contractAddress
  **/
  @ApiModelProperty(value = "")
  public String getContractAddress() {
    return contractAddress;
  }

  public void setContractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
  }

  public CoinbaseEngPrimeApiApiToken symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CoinbaseEngPrimeApiApiToken amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseEngPrimeApiApiToken name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseEngPrimeApiApiToken protocolName(String protocolName) {
    this.protocolName = protocolName;
    return this;
  }

   /**
   * Get protocolName
   * @return protocolName
  **/
  @ApiModelProperty(value = "")
  public String getProtocolName() {
    return protocolName;
  }

  public void setProtocolName(String protocolName) {
    this.protocolName = protocolName;
  }

  public CoinbaseEngPrimeApiApiToken price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(value = "")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CoinbaseEngPrimeApiApiToken network(String network) {
    this.network = network;
    return this;
  }

   /**
   * Get network
   * @return network
  **/
  @ApiModelProperty(value = "")
  public String getNetwork() {
    return network;
  }

  public void setNetwork(String network) {
    this.network = network;
  }

  public CoinbaseEngPrimeApiApiToken type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }

  public CoinbaseEngPrimeApiApiToken siteUrl(String siteUrl) {
    this.siteUrl = siteUrl;
    return this;
  }

   /**
   * Get siteUrl
   * @return siteUrl
  **/
  @ApiModelProperty(value = "")
  public String getSiteUrl() {
    return siteUrl;
  }

  public void setSiteUrl(String siteUrl) {
    this.siteUrl = siteUrl;
  }

  public CoinbaseEngPrimeApiApiToken iconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
    return this;
  }

   /**
   * Get iconUrl
   * @return iconUrl
  **/
  @ApiModelProperty(value = "")
  public String getIconUrl() {
    return iconUrl;
  }

  public void setIconUrl(String iconUrl) {
    this.iconUrl = iconUrl;
  }

  public CoinbaseEngPrimeApiApiToken protocolLogoUrl(String protocolLogoUrl) {
    this.protocolLogoUrl = protocolLogoUrl;
    return this;
  }

   /**
   * Get protocolLogoUrl
   * @return protocolLogoUrl
  **/
  @ApiModelProperty(value = "")
  public String getProtocolLogoUrl() {
    return protocolLogoUrl;
  }

  public void setProtocolLogoUrl(String protocolLogoUrl) {
    this.protocolLogoUrl = protocolLogoUrl;
  }

  public CoinbaseEngPrimeApiApiToken networkDisplayName(String networkDisplayName) {
    this.networkDisplayName = networkDisplayName;
    return this;
  }

   /**
   * Get networkDisplayName
   * @return networkDisplayName
  **/
  @ApiModelProperty(value = "")
  public String getNetworkDisplayName() {
    return networkDisplayName;
  }

  public void setNetworkDisplayName(String networkDisplayName) {
    this.networkDisplayName = networkDisplayName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiToken coinbaseEngPrimeApiApiToken = (CoinbaseEngPrimeApiApiToken) o;
    return Objects.equals(this.contractAddress, coinbaseEngPrimeApiApiToken.contractAddress) &&
        Objects.equals(this.symbol, coinbaseEngPrimeApiApiToken.symbol) &&
        Objects.equals(this.amount, coinbaseEngPrimeApiApiToken.amount) &&
        Objects.equals(this.name, coinbaseEngPrimeApiApiToken.name) &&
        Objects.equals(this.protocolName, coinbaseEngPrimeApiApiToken.protocolName) &&
        Objects.equals(this.price, coinbaseEngPrimeApiApiToken.price) &&
        Objects.equals(this.network, coinbaseEngPrimeApiApiToken.network) &&
        Objects.equals(this.type, coinbaseEngPrimeApiApiToken.type) &&
        Objects.equals(this.siteUrl, coinbaseEngPrimeApiApiToken.siteUrl) &&
        Objects.equals(this.iconUrl, coinbaseEngPrimeApiApiToken.iconUrl) &&
        Objects.equals(this.protocolLogoUrl, coinbaseEngPrimeApiApiToken.protocolLogoUrl) &&
        Objects.equals(this.networkDisplayName, coinbaseEngPrimeApiApiToken.networkDisplayName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(contractAddress, symbol, amount, name, protocolName, price, network, type, siteUrl, iconUrl, protocolLogoUrl, networkDisplayName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiToken {\n");
    
    sb.append("    contractAddress: ").append(toIndentedString(contractAddress)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    protocolName: ").append(toIndentedString(protocolName)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    network: ").append(toIndentedString(network)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("    siteUrl: ").append(toIndentedString(siteUrl)).append("\n");
    sb.append("    iconUrl: ").append(toIndentedString(iconUrl)).append("\n");
    sb.append("    protocolLogoUrl: ").append(toIndentedString(protocolLogoUrl)).append("\n");
    sb.append("    networkDisplayName: ").append(toIndentedString(networkDisplayName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

