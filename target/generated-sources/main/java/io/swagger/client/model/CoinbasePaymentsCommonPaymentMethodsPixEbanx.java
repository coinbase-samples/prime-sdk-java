/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbasePaymentsCommonPaymentMethodsPixEbanxPixDeposit;
import io.swagger.client.model.CoinbasePaymentsCommonPaymentMethodsPixEbanxPixWithdrawal;
import java.io.IOException;

/**
 * CoinbasePaymentsCommonPaymentMethodsPixEbanx
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbasePaymentsCommonPaymentMethodsPixEbanx {
  @SerializedName("payment_method_id")
  private String paymentMethodId = null;

  @SerializedName("user_uuid")
  private String userUuid = null;

  @SerializedName("deposit")
  private CoinbasePaymentsCommonPaymentMethodsPixEbanxPixDeposit deposit = null;

  @SerializedName("withdrawal")
  private CoinbasePaymentsCommonPaymentMethodsPixEbanxPixWithdrawal withdrawal = null;

  public CoinbasePaymentsCommonPaymentMethodsPixEbanx paymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
    return this;
  }

   /**
   * Get paymentMethodId
   * @return paymentMethodId
  **/
  @ApiModelProperty(value = "")
  public String getPaymentMethodId() {
    return paymentMethodId;
  }

  public void setPaymentMethodId(String paymentMethodId) {
    this.paymentMethodId = paymentMethodId;
  }

  public CoinbasePaymentsCommonPaymentMethodsPixEbanx userUuid(String userUuid) {
    this.userUuid = userUuid;
    return this;
  }

   /**
   * Get userUuid
   * @return userUuid
  **/
  @ApiModelProperty(value = "")
  public String getUserUuid() {
    return userUuid;
  }

  public void setUserUuid(String userUuid) {
    this.userUuid = userUuid;
  }

  public CoinbasePaymentsCommonPaymentMethodsPixEbanx deposit(CoinbasePaymentsCommonPaymentMethodsPixEbanxPixDeposit deposit) {
    this.deposit = deposit;
    return this;
  }

   /**
   * Get deposit
   * @return deposit
  **/
  @ApiModelProperty(value = "")
  public CoinbasePaymentsCommonPaymentMethodsPixEbanxPixDeposit getDeposit() {
    return deposit;
  }

  public void setDeposit(CoinbasePaymentsCommonPaymentMethodsPixEbanxPixDeposit deposit) {
    this.deposit = deposit;
  }

  public CoinbasePaymentsCommonPaymentMethodsPixEbanx withdrawal(CoinbasePaymentsCommonPaymentMethodsPixEbanxPixWithdrawal withdrawal) {
    this.withdrawal = withdrawal;
    return this;
  }

   /**
   * Get withdrawal
   * @return withdrawal
  **/
  @ApiModelProperty(value = "")
  public CoinbasePaymentsCommonPaymentMethodsPixEbanxPixWithdrawal getWithdrawal() {
    return withdrawal;
  }

  public void setWithdrawal(CoinbasePaymentsCommonPaymentMethodsPixEbanxPixWithdrawal withdrawal) {
    this.withdrawal = withdrawal;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbasePaymentsCommonPaymentMethodsPixEbanx coinbasePaymentsCommonPaymentMethodsPixEbanx = (CoinbasePaymentsCommonPaymentMethodsPixEbanx) o;
    return Objects.equals(this.paymentMethodId, coinbasePaymentsCommonPaymentMethodsPixEbanx.paymentMethodId) &&
        Objects.equals(this.userUuid, coinbasePaymentsCommonPaymentMethodsPixEbanx.userUuid) &&
        Objects.equals(this.deposit, coinbasePaymentsCommonPaymentMethodsPixEbanx.deposit) &&
        Objects.equals(this.withdrawal, coinbasePaymentsCommonPaymentMethodsPixEbanx.withdrawal);
  }

  @Override
  public int hashCode() {
    return Objects.hash(paymentMethodId, userUuid, deposit, withdrawal);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbasePaymentsCommonPaymentMethodsPixEbanx {\n");
    
    sb.append("    paymentMethodId: ").append(toIndentedString(paymentMethodId)).append("\n");
    sb.append("    userUuid: ").append(toIndentedString(userUuid)).append("\n");
    sb.append("    deposit: ").append(toIndentedString(deposit)).append("\n");
    sb.append("    withdrawal: ").append(toIndentedString(withdrawal)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

