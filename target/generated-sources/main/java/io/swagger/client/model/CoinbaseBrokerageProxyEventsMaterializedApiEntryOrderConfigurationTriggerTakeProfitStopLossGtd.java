/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import org.threeten.bp.OffsetDateTime;

/**
 * CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd {
  @SerializedName("quote_size")
  private String quoteSize = null;

  @SerializedName("base_size")
  private String baseSize = null;

  @SerializedName("take_profit_price")
  private String takeProfitPrice = null;

  @SerializedName("stop_loss_price")
  private String stopLossPrice = null;

  @SerializedName("stop_limit_price")
  private String stopLimitPrice = null;

  @SerializedName("end_time")
  private OffsetDateTime endTime = null;

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd quoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
    return this;
  }

   /**
   * Get quoteSize
   * @return quoteSize
  **/
  @ApiModelProperty(value = "")
  public String getQuoteSize() {
    return quoteSize;
  }

  public void setQuoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd baseSize(String baseSize) {
    this.baseSize = baseSize;
    return this;
  }

   /**
   * Get baseSize
   * @return baseSize
  **/
  @ApiModelProperty(value = "")
  public String getBaseSize() {
    return baseSize;
  }

  public void setBaseSize(String baseSize) {
    this.baseSize = baseSize;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd takeProfitPrice(String takeProfitPrice) {
    this.takeProfitPrice = takeProfitPrice;
    return this;
  }

   /**
   * Get takeProfitPrice
   * @return takeProfitPrice
  **/
  @ApiModelProperty(value = "")
  public String getTakeProfitPrice() {
    return takeProfitPrice;
  }

  public void setTakeProfitPrice(String takeProfitPrice) {
    this.takeProfitPrice = takeProfitPrice;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd stopLossPrice(String stopLossPrice) {
    this.stopLossPrice = stopLossPrice;
    return this;
  }

   /**
   * Get stopLossPrice
   * @return stopLossPrice
  **/
  @ApiModelProperty(value = "")
  public String getStopLossPrice() {
    return stopLossPrice;
  }

  public void setStopLossPrice(String stopLossPrice) {
    this.stopLossPrice = stopLossPrice;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd stopLimitPrice(String stopLimitPrice) {
    this.stopLimitPrice = stopLimitPrice;
    return this;
  }

   /**
   * Get stopLimitPrice
   * @return stopLimitPrice
  **/
  @ApiModelProperty(value = "")
  public String getStopLimitPrice() {
    return stopLimitPrice;
  }

  public void setStopLimitPrice(String stopLimitPrice) {
    this.stopLimitPrice = stopLimitPrice;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd endTime(OffsetDateTime endTime) {
    this.endTime = endTime;
    return this;
  }

   /**
   * Get endTime
   * @return endTime
  **/
  @ApiModelProperty(value = "")
  public OffsetDateTime getEndTime() {
    return endTime;
  }

  public void setEndTime(OffsetDateTime endTime) {
    this.endTime = endTime;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd = (CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd) o;
    return Objects.equals(this.quoteSize, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd.quoteSize) &&
        Objects.equals(this.baseSize, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd.baseSize) &&
        Objects.equals(this.takeProfitPrice, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd.takeProfitPrice) &&
        Objects.equals(this.stopLossPrice, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd.stopLossPrice) &&
        Objects.equals(this.stopLimitPrice, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd.stopLimitPrice) &&
        Objects.equals(this.endTime, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd.endTime);
  }

  @Override
  public int hashCode() {
    return Objects.hash(quoteSize, baseSize, takeProfitPrice, stopLossPrice, stopLimitPrice, endTime);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd {\n");
    
    sb.append("    quoteSize: ").append(toIndentedString(quoteSize)).append("\n");
    sb.append("    baseSize: ").append(toIndentedString(baseSize)).append("\n");
    sb.append("    takeProfitPrice: ").append(toIndentedString(takeProfitPrice)).append("\n");
    sb.append("    stopLossPrice: ").append(toIndentedString(stopLossPrice)).append("\n");
    sb.append("    stopLimitPrice: ").append(toIndentedString(stopLimitPrice)).append("\n");
    sb.append("    endTime: ").append(toIndentedString(endTime)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

