/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeCategory;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeRole;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseCustodyApiUserChangeAuditValue
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiUserChangeAuditValue {
  @SerializedName("num_all_approvers")
  private Integer numAllApprovers = null;

  @SerializedName("category")
  private CoinbaseCustodyApiUserChangeCategory category = null;

  @SerializedName("all_user_ids")
  private List<String> allUserIds = null;

  @SerializedName("approved_user_ids")
  private List<String> approvedUserIds = null;

  @SerializedName("rejected_user_ids")
  private List<String> rejectedUserIds = null;

  @SerializedName("num_approvals_required")
  private Integer numApprovalsRequired = null;

  @SerializedName("role_from")
  private CoinbaseCustodyApiUserChangeRole roleFrom = null;

  @SerializedName("role_to")
  private CoinbaseCustodyApiUserChangeRole roleTo = null;

  @SerializedName("roles_from")
  private List<CoinbaseCustodyApiUserChangeRole> rolesFrom = null;

  @SerializedName("roles_to")
  private List<CoinbaseCustodyApiUserChangeRole> rolesTo = null;

  public CoinbaseCustodyApiUserChangeAuditValue numAllApprovers(Integer numAllApprovers) {
    this.numAllApprovers = numAllApprovers;
    return this;
  }

   /**
   * Get numAllApprovers
   * @return numAllApprovers
  **/
  @ApiModelProperty(value = "")
  public Integer getNumAllApprovers() {
    return numAllApprovers;
  }

  public void setNumAllApprovers(Integer numAllApprovers) {
    this.numAllApprovers = numAllApprovers;
  }

  public CoinbaseCustodyApiUserChangeAuditValue category(CoinbaseCustodyApiUserChangeCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeCategory getCategory() {
    return category;
  }

  public void setCategory(CoinbaseCustodyApiUserChangeCategory category) {
    this.category = category;
  }

  public CoinbaseCustodyApiUserChangeAuditValue allUserIds(List<String> allUserIds) {
    this.allUserIds = allUserIds;
    return this;
  }

  public CoinbaseCustodyApiUserChangeAuditValue addAllUserIdsItem(String allUserIdsItem) {
    if (this.allUserIds == null) {
      this.allUserIds = new ArrayList<String>();
    }
    this.allUserIds.add(allUserIdsItem);
    return this;
  }

   /**
   * Get allUserIds
   * @return allUserIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getAllUserIds() {
    return allUserIds;
  }

  public void setAllUserIds(List<String> allUserIds) {
    this.allUserIds = allUserIds;
  }

  public CoinbaseCustodyApiUserChangeAuditValue approvedUserIds(List<String> approvedUserIds) {
    this.approvedUserIds = approvedUserIds;
    return this;
  }

  public CoinbaseCustodyApiUserChangeAuditValue addApprovedUserIdsItem(String approvedUserIdsItem) {
    if (this.approvedUserIds == null) {
      this.approvedUserIds = new ArrayList<String>();
    }
    this.approvedUserIds.add(approvedUserIdsItem);
    return this;
  }

   /**
   * Get approvedUserIds
   * @return approvedUserIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getApprovedUserIds() {
    return approvedUserIds;
  }

  public void setApprovedUserIds(List<String> approvedUserIds) {
    this.approvedUserIds = approvedUserIds;
  }

  public CoinbaseCustodyApiUserChangeAuditValue rejectedUserIds(List<String> rejectedUserIds) {
    this.rejectedUserIds = rejectedUserIds;
    return this;
  }

  public CoinbaseCustodyApiUserChangeAuditValue addRejectedUserIdsItem(String rejectedUserIdsItem) {
    if (this.rejectedUserIds == null) {
      this.rejectedUserIds = new ArrayList<String>();
    }
    this.rejectedUserIds.add(rejectedUserIdsItem);
    return this;
  }

   /**
   * Get rejectedUserIds
   * @return rejectedUserIds
  **/
  @ApiModelProperty(value = "")
  public List<String> getRejectedUserIds() {
    return rejectedUserIds;
  }

  public void setRejectedUserIds(List<String> rejectedUserIds) {
    this.rejectedUserIds = rejectedUserIds;
  }

  public CoinbaseCustodyApiUserChangeAuditValue numApprovalsRequired(Integer numApprovalsRequired) {
    this.numApprovalsRequired = numApprovalsRequired;
    return this;
  }

   /**
   * Get numApprovalsRequired
   * @return numApprovalsRequired
  **/
  @ApiModelProperty(value = "")
  public Integer getNumApprovalsRequired() {
    return numApprovalsRequired;
  }

  public void setNumApprovalsRequired(Integer numApprovalsRequired) {
    this.numApprovalsRequired = numApprovalsRequired;
  }

  public CoinbaseCustodyApiUserChangeAuditValue roleFrom(CoinbaseCustodyApiUserChangeRole roleFrom) {
    this.roleFrom = roleFrom;
    return this;
  }

   /**
   * Get roleFrom
   * @return roleFrom
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeRole getRoleFrom() {
    return roleFrom;
  }

  public void setRoleFrom(CoinbaseCustodyApiUserChangeRole roleFrom) {
    this.roleFrom = roleFrom;
  }

  public CoinbaseCustodyApiUserChangeAuditValue roleTo(CoinbaseCustodyApiUserChangeRole roleTo) {
    this.roleTo = roleTo;
    return this;
  }

   /**
   * Get roleTo
   * @return roleTo
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeRole getRoleTo() {
    return roleTo;
  }

  public void setRoleTo(CoinbaseCustodyApiUserChangeRole roleTo) {
    this.roleTo = roleTo;
  }

  public CoinbaseCustodyApiUserChangeAuditValue rolesFrom(List<CoinbaseCustodyApiUserChangeRole> rolesFrom) {
    this.rolesFrom = rolesFrom;
    return this;
  }

  public CoinbaseCustodyApiUserChangeAuditValue addRolesFromItem(CoinbaseCustodyApiUserChangeRole rolesFromItem) {
    if (this.rolesFrom == null) {
      this.rolesFrom = new ArrayList<CoinbaseCustodyApiUserChangeRole>();
    }
    this.rolesFrom.add(rolesFromItem);
    return this;
  }

   /**
   * Get rolesFrom
   * @return rolesFrom
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseCustodyApiUserChangeRole> getRolesFrom() {
    return rolesFrom;
  }

  public void setRolesFrom(List<CoinbaseCustodyApiUserChangeRole> rolesFrom) {
    this.rolesFrom = rolesFrom;
  }

  public CoinbaseCustodyApiUserChangeAuditValue rolesTo(List<CoinbaseCustodyApiUserChangeRole> rolesTo) {
    this.rolesTo = rolesTo;
    return this;
  }

  public CoinbaseCustodyApiUserChangeAuditValue addRolesToItem(CoinbaseCustodyApiUserChangeRole rolesToItem) {
    if (this.rolesTo == null) {
      this.rolesTo = new ArrayList<CoinbaseCustodyApiUserChangeRole>();
    }
    this.rolesTo.add(rolesToItem);
    return this;
  }

   /**
   * Get rolesTo
   * @return rolesTo
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseCustodyApiUserChangeRole> getRolesTo() {
    return rolesTo;
  }

  public void setRolesTo(List<CoinbaseCustodyApiUserChangeRole> rolesTo) {
    this.rolesTo = rolesTo;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiUserChangeAuditValue coinbaseCustodyApiUserChangeAuditValue = (CoinbaseCustodyApiUserChangeAuditValue) o;
    return Objects.equals(this.numAllApprovers, coinbaseCustodyApiUserChangeAuditValue.numAllApprovers) &&
        Objects.equals(this.category, coinbaseCustodyApiUserChangeAuditValue.category) &&
        Objects.equals(this.allUserIds, coinbaseCustodyApiUserChangeAuditValue.allUserIds) &&
        Objects.equals(this.approvedUserIds, coinbaseCustodyApiUserChangeAuditValue.approvedUserIds) &&
        Objects.equals(this.rejectedUserIds, coinbaseCustodyApiUserChangeAuditValue.rejectedUserIds) &&
        Objects.equals(this.numApprovalsRequired, coinbaseCustodyApiUserChangeAuditValue.numApprovalsRequired) &&
        Objects.equals(this.roleFrom, coinbaseCustodyApiUserChangeAuditValue.roleFrom) &&
        Objects.equals(this.roleTo, coinbaseCustodyApiUserChangeAuditValue.roleTo) &&
        Objects.equals(this.rolesFrom, coinbaseCustodyApiUserChangeAuditValue.rolesFrom) &&
        Objects.equals(this.rolesTo, coinbaseCustodyApiUserChangeAuditValue.rolesTo);
  }

  @Override
  public int hashCode() {
    return Objects.hash(numAllApprovers, category, allUserIds, approvedUserIds, rejectedUserIds, numApprovalsRequired, roleFrom, roleTo, rolesFrom, rolesTo);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiUserChangeAuditValue {\n");
    
    sb.append("    numAllApprovers: ").append(toIndentedString(numAllApprovers)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    allUserIds: ").append(toIndentedString(allUserIds)).append("\n");
    sb.append("    approvedUserIds: ").append(toIndentedString(approvedUserIds)).append("\n");
    sb.append("    rejectedUserIds: ").append(toIndentedString(rejectedUserIds)).append("\n");
    sb.append("    numApprovalsRequired: ").append(toIndentedString(numApprovalsRequired)).append("\n");
    sb.append("    roleFrom: ").append(toIndentedString(roleFrom)).append("\n");
    sb.append("    roleTo: ").append(toIndentedString(roleTo)).append("\n");
    sb.append("    rolesFrom: ").append(toIndentedString(rolesFrom)).append("\n");
    sb.append("    rolesTo: ").append(toIndentedString(rolesTo)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

