/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeCategory;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeRole;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeSecondaryRole;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiPostUserUpdateRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPostUserUpdateRequest {
  @SerializedName("portfolio_id")
  private String portfolioId = null;

  @SerializedName("user_id")
  private String userId = null;

  @SerializedName("role")
  private CoinbaseCustodyApiUserChangeRole role = null;

  @SerializedName("category")
  private CoinbaseCustodyApiUserChangeCategory category = null;

  @SerializedName("secondary_role")
  private List<CoinbaseCustodyApiUserChangeSecondaryRole> secondaryRole = null;

  @SerializedName("roles")
  private List<CoinbaseCustodyApiUserChangeRole> roles = null;

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest userId(String userId) {
    this.userId = userId;
    return this;
  }

   /**
   * Get userId
   * @return userId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUserId() {
    return userId;
  }

  public void setUserId(String userId) {
    this.userId = userId;
  }

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest role(CoinbaseCustodyApiUserChangeRole role) {
    this.role = role;
    return this;
  }

   /**
   * Get role
   * @return role
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeRole getRole() {
    return role;
  }

  public void setRole(CoinbaseCustodyApiUserChangeRole role) {
    this.role = role;
  }

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest category(CoinbaseCustodyApiUserChangeCategory category) {
    this.category = category;
    return this;
  }

   /**
   * Get category
   * @return category
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiUserChangeCategory getCategory() {
    return category;
  }

  public void setCategory(CoinbaseCustodyApiUserChangeCategory category) {
    this.category = category;
  }

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest secondaryRole(List<CoinbaseCustodyApiUserChangeSecondaryRole> secondaryRole) {
    this.secondaryRole = secondaryRole;
    return this;
  }

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest addSecondaryRoleItem(CoinbaseCustodyApiUserChangeSecondaryRole secondaryRoleItem) {
    if (this.secondaryRole == null) {
      this.secondaryRole = new ArrayList<CoinbaseCustodyApiUserChangeSecondaryRole>();
    }
    this.secondaryRole.add(secondaryRoleItem);
    return this;
  }

   /**
   * Get secondaryRole
   * @return secondaryRole
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseCustodyApiUserChangeSecondaryRole> getSecondaryRole() {
    return secondaryRole;
  }

  public void setSecondaryRole(List<CoinbaseCustodyApiUserChangeSecondaryRole> secondaryRole) {
    this.secondaryRole = secondaryRole;
  }

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest roles(List<CoinbaseCustodyApiUserChangeRole> roles) {
    this.roles = roles;
    return this;
  }

  public CoinbaseEngPrimeApiApiPostUserUpdateRequest addRolesItem(CoinbaseCustodyApiUserChangeRole rolesItem) {
    if (this.roles == null) {
      this.roles = new ArrayList<CoinbaseCustodyApiUserChangeRole>();
    }
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseCustodyApiUserChangeRole> getRoles() {
    return roles;
  }

  public void setRoles(List<CoinbaseCustodyApiUserChangeRole> roles) {
    this.roles = roles;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPostUserUpdateRequest coinbaseEngPrimeApiApiPostUserUpdateRequest = (CoinbaseEngPrimeApiApiPostUserUpdateRequest) o;
    return Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiPostUserUpdateRequest.portfolioId) &&
        Objects.equals(this.userId, coinbaseEngPrimeApiApiPostUserUpdateRequest.userId) &&
        Objects.equals(this.role, coinbaseEngPrimeApiApiPostUserUpdateRequest.role) &&
        Objects.equals(this.category, coinbaseEngPrimeApiApiPostUserUpdateRequest.category) &&
        Objects.equals(this.secondaryRole, coinbaseEngPrimeApiApiPostUserUpdateRequest.secondaryRole) &&
        Objects.equals(this.roles, coinbaseEngPrimeApiApiPostUserUpdateRequest.roles);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioId, userId, role, category, secondaryRole, roles);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPostUserUpdateRequest {\n");
    
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("    userId: ").append(toIndentedString(userId)).append("\n");
    sb.append("    role: ").append(toIndentedString(role)).append("\n");
    sb.append("    category: ").append(toIndentedString(category)).append("\n");
    sb.append("    secondaryRole: ").append(toIndentedString(secondaryRole)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

