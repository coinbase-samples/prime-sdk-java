/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseBrokerageProxyTradingApiLadderPriceLevel
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyTradingApiLadderPriceLevel {
  @SerializedName("price")
  private String price = null;

  @SerializedName("ask_size")
  private String askSize = null;

  @SerializedName("ask_sum_size")
  private String askSumSize = null;

  @SerializedName("bid_size")
  private String bidSize = null;

  @SerializedName("bid_sum_size")
  private String bidSumSize = null;

  public CoinbaseBrokerageProxyTradingApiLadderPriceLevel price(String price) {
    this.price = price;
    return this;
  }

   /**
   * The price of the associated orders
   * @return price
  **/
  @ApiModelProperty(required = true, value = "The price of the associated orders")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CoinbaseBrokerageProxyTradingApiLadderPriceLevel askSize(String askSize) {
    this.askSize = askSize;
    return this;
  }

   /**
   * The sum of all ask orders at this associated price
   * @return askSize
  **/
  @ApiModelProperty(required = true, value = "The sum of all ask orders at this associated price")
  public String getAskSize() {
    return askSize;
  }

  public void setAskSize(String askSize) {
    this.askSize = askSize;
  }

  public CoinbaseBrokerageProxyTradingApiLadderPriceLevel askSumSize(String askSumSize) {
    this.askSumSize = askSumSize;
    return this;
  }

   /**
   * The sum of all ask orders inclusive from the lowest ask price to this associated price
   * @return askSumSize
  **/
  @ApiModelProperty(required = true, value = "The sum of all ask orders inclusive from the lowest ask price to this associated price")
  public String getAskSumSize() {
    return askSumSize;
  }

  public void setAskSumSize(String askSumSize) {
    this.askSumSize = askSumSize;
  }

  public CoinbaseBrokerageProxyTradingApiLadderPriceLevel bidSize(String bidSize) {
    this.bidSize = bidSize;
    return this;
  }

   /**
   * The sum of all bid orders at this associated price
   * @return bidSize
  **/
  @ApiModelProperty(required = true, value = "The sum of all bid orders at this associated price")
  public String getBidSize() {
    return bidSize;
  }

  public void setBidSize(String bidSize) {
    this.bidSize = bidSize;
  }

  public CoinbaseBrokerageProxyTradingApiLadderPriceLevel bidSumSize(String bidSumSize) {
    this.bidSumSize = bidSumSize;
    return this;
  }

   /**
   * The sum of all bid orders inclusive from the highest bid price to this associated price
   * @return bidSumSize
  **/
  @ApiModelProperty(required = true, value = "The sum of all bid orders inclusive from the highest bid price to this associated price")
  public String getBidSumSize() {
    return bidSumSize;
  }

  public void setBidSumSize(String bidSumSize) {
    this.bidSumSize = bidSumSize;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyTradingApiLadderPriceLevel coinbaseBrokerageProxyTradingApiLadderPriceLevel = (CoinbaseBrokerageProxyTradingApiLadderPriceLevel) o;
    return Objects.equals(this.price, coinbaseBrokerageProxyTradingApiLadderPriceLevel.price) &&
        Objects.equals(this.askSize, coinbaseBrokerageProxyTradingApiLadderPriceLevel.askSize) &&
        Objects.equals(this.askSumSize, coinbaseBrokerageProxyTradingApiLadderPriceLevel.askSumSize) &&
        Objects.equals(this.bidSize, coinbaseBrokerageProxyTradingApiLadderPriceLevel.bidSize) &&
        Objects.equals(this.bidSumSize, coinbaseBrokerageProxyTradingApiLadderPriceLevel.bidSumSize);
  }

  @Override
  public int hashCode() {
    return Objects.hash(price, askSize, askSumSize, bidSize, bidSumSize);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyTradingApiLadderPriceLevel {\n");
    
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    askSize: ").append(toIndentedString(askSize)).append("\n");
    sb.append("    askSumSize: ").append(toIndentedString(askSumSize)).append("\n");
    sb.append("    bidSize: ").append(toIndentedString(bidSize)).append("\n");
    sb.append("    bidSumSize: ").append(toIndentedString(bidSumSize)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

