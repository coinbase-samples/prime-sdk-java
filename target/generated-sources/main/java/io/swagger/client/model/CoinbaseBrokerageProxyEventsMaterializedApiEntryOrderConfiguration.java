/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationBlockTradeLimitLimitFok;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtc;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtd;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtc;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtd;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationMarketMarketIoc;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitFok;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitIoc;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtc;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtd;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtc;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtd;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtc;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTwapLimitGtd;
import io.swagger.client.model.CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationVwapLimitGtd;
import java.io.IOException;

/**
 * CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration {
  @SerializedName("market_market_ioc")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationMarketMarketIoc marketMarketIoc = null;

  @SerializedName("sor_limit_ioc")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitIoc sorLimitIoc = null;

  @SerializedName("limit_limit_gtc")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtc limitLimitGtc = null;

  @SerializedName("limit_limit_gtd")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtd limitLimitGtd = null;

  @SerializedName("twap_limit_gtd")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTwapLimitGtd twapLimitGtd = null;

  @SerializedName("stop_limit_stop_limit_gtc")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtc stopLimitStopLimitGtc = null;

  @SerializedName("stop_limit_stop_limit_gtd")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtd stopLimitStopLimitGtd = null;

  @SerializedName("block_trade_limit_limit_fok")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationBlockTradeLimitLimitFok blockTradeLimitLimitFok = null;

  @SerializedName("liquidation_market_gtc")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtc liquidationMarketGtc = null;

  @SerializedName("liquidation_market_gtd")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtd liquidationMarketGtd = null;

  @SerializedName("vwap_limit_gtd")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationVwapLimitGtd vwapLimitGtd = null;

  @SerializedName("sor_limit_fok")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitFok sorLimitFok = null;

  @SerializedName("trigger_stop_limit_gtc")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtc triggerStopLimitGtc = null;

  @SerializedName("trigger_stop_limit_gtd")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtd triggerStopLimitGtd = null;

  @SerializedName("trigger_take_profit_stop_loss_gtc")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtc triggerTakeProfitStopLossGtc = null;

  @SerializedName("trigger_take_profit_stop_loss_gtd")
  private CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd triggerTakeProfitStopLossGtd = null;

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration marketMarketIoc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationMarketMarketIoc marketMarketIoc) {
    this.marketMarketIoc = marketMarketIoc;
    return this;
  }

   /**
   * Get marketMarketIoc
   * @return marketMarketIoc
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationMarketMarketIoc getMarketMarketIoc() {
    return marketMarketIoc;
  }

  public void setMarketMarketIoc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationMarketMarketIoc marketMarketIoc) {
    this.marketMarketIoc = marketMarketIoc;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration sorLimitIoc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitIoc sorLimitIoc) {
    this.sorLimitIoc = sorLimitIoc;
    return this;
  }

   /**
   * Get sorLimitIoc
   * @return sorLimitIoc
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitIoc getSorLimitIoc() {
    return sorLimitIoc;
  }

  public void setSorLimitIoc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitIoc sorLimitIoc) {
    this.sorLimitIoc = sorLimitIoc;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration limitLimitGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtc limitLimitGtc) {
    this.limitLimitGtc = limitLimitGtc;
    return this;
  }

   /**
   * Get limitLimitGtc
   * @return limitLimitGtc
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtc getLimitLimitGtc() {
    return limitLimitGtc;
  }

  public void setLimitLimitGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtc limitLimitGtc) {
    this.limitLimitGtc = limitLimitGtc;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration limitLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtd limitLimitGtd) {
    this.limitLimitGtd = limitLimitGtd;
    return this;
  }

   /**
   * Get limitLimitGtd
   * @return limitLimitGtd
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtd getLimitLimitGtd() {
    return limitLimitGtd;
  }

  public void setLimitLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLimitLimitGtd limitLimitGtd) {
    this.limitLimitGtd = limitLimitGtd;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration twapLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTwapLimitGtd twapLimitGtd) {
    this.twapLimitGtd = twapLimitGtd;
    return this;
  }

   /**
   * Get twapLimitGtd
   * @return twapLimitGtd
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTwapLimitGtd getTwapLimitGtd() {
    return twapLimitGtd;
  }

  public void setTwapLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTwapLimitGtd twapLimitGtd) {
    this.twapLimitGtd = twapLimitGtd;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration stopLimitStopLimitGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtc stopLimitStopLimitGtc) {
    this.stopLimitStopLimitGtc = stopLimitStopLimitGtc;
    return this;
  }

   /**
   * Get stopLimitStopLimitGtc
   * @return stopLimitStopLimitGtc
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtc getStopLimitStopLimitGtc() {
    return stopLimitStopLimitGtc;
  }

  public void setStopLimitStopLimitGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtc stopLimitStopLimitGtc) {
    this.stopLimitStopLimitGtc = stopLimitStopLimitGtc;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration stopLimitStopLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtd stopLimitStopLimitGtd) {
    this.stopLimitStopLimitGtd = stopLimitStopLimitGtd;
    return this;
  }

   /**
   * Get stopLimitStopLimitGtd
   * @return stopLimitStopLimitGtd
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtd getStopLimitStopLimitGtd() {
    return stopLimitStopLimitGtd;
  }

  public void setStopLimitStopLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationStopLimitStopLimitGtd stopLimitStopLimitGtd) {
    this.stopLimitStopLimitGtd = stopLimitStopLimitGtd;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration blockTradeLimitLimitFok(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationBlockTradeLimitLimitFok blockTradeLimitLimitFok) {
    this.blockTradeLimitLimitFok = blockTradeLimitLimitFok;
    return this;
  }

   /**
   * Get blockTradeLimitLimitFok
   * @return blockTradeLimitLimitFok
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationBlockTradeLimitLimitFok getBlockTradeLimitLimitFok() {
    return blockTradeLimitLimitFok;
  }

  public void setBlockTradeLimitLimitFok(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationBlockTradeLimitLimitFok blockTradeLimitLimitFok) {
    this.blockTradeLimitLimitFok = blockTradeLimitLimitFok;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration liquidationMarketGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtc liquidationMarketGtc) {
    this.liquidationMarketGtc = liquidationMarketGtc;
    return this;
  }

   /**
   * Get liquidationMarketGtc
   * @return liquidationMarketGtc
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtc getLiquidationMarketGtc() {
    return liquidationMarketGtc;
  }

  public void setLiquidationMarketGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtc liquidationMarketGtc) {
    this.liquidationMarketGtc = liquidationMarketGtc;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration liquidationMarketGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtd liquidationMarketGtd) {
    this.liquidationMarketGtd = liquidationMarketGtd;
    return this;
  }

   /**
   * Get liquidationMarketGtd
   * @return liquidationMarketGtd
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtd getLiquidationMarketGtd() {
    return liquidationMarketGtd;
  }

  public void setLiquidationMarketGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationLiquidationMarketGtd liquidationMarketGtd) {
    this.liquidationMarketGtd = liquidationMarketGtd;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration vwapLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationVwapLimitGtd vwapLimitGtd) {
    this.vwapLimitGtd = vwapLimitGtd;
    return this;
  }

   /**
   * Get vwapLimitGtd
   * @return vwapLimitGtd
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationVwapLimitGtd getVwapLimitGtd() {
    return vwapLimitGtd;
  }

  public void setVwapLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationVwapLimitGtd vwapLimitGtd) {
    this.vwapLimitGtd = vwapLimitGtd;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration sorLimitFok(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitFok sorLimitFok) {
    this.sorLimitFok = sorLimitFok;
    return this;
  }

   /**
   * Get sorLimitFok
   * @return sorLimitFok
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitFok getSorLimitFok() {
    return sorLimitFok;
  }

  public void setSorLimitFok(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationSorLimitFok sorLimitFok) {
    this.sorLimitFok = sorLimitFok;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration triggerStopLimitGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtc triggerStopLimitGtc) {
    this.triggerStopLimitGtc = triggerStopLimitGtc;
    return this;
  }

   /**
   * Get triggerStopLimitGtc
   * @return triggerStopLimitGtc
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtc getTriggerStopLimitGtc() {
    return triggerStopLimitGtc;
  }

  public void setTriggerStopLimitGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtc triggerStopLimitGtc) {
    this.triggerStopLimitGtc = triggerStopLimitGtc;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration triggerStopLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtd triggerStopLimitGtd) {
    this.triggerStopLimitGtd = triggerStopLimitGtd;
    return this;
  }

   /**
   * Get triggerStopLimitGtd
   * @return triggerStopLimitGtd
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtd getTriggerStopLimitGtd() {
    return triggerStopLimitGtd;
  }

  public void setTriggerStopLimitGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerStopLimitGtd triggerStopLimitGtd) {
    this.triggerStopLimitGtd = triggerStopLimitGtd;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration triggerTakeProfitStopLossGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtc triggerTakeProfitStopLossGtc) {
    this.triggerTakeProfitStopLossGtc = triggerTakeProfitStopLossGtc;
    return this;
  }

   /**
   * Get triggerTakeProfitStopLossGtc
   * @return triggerTakeProfitStopLossGtc
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtc getTriggerTakeProfitStopLossGtc() {
    return triggerTakeProfitStopLossGtc;
  }

  public void setTriggerTakeProfitStopLossGtc(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtc triggerTakeProfitStopLossGtc) {
    this.triggerTakeProfitStopLossGtc = triggerTakeProfitStopLossGtc;
  }

  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration triggerTakeProfitStopLossGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd triggerTakeProfitStopLossGtd) {
    this.triggerTakeProfitStopLossGtd = triggerTakeProfitStopLossGtd;
    return this;
  }

   /**
   * Get triggerTakeProfitStopLossGtd
   * @return triggerTakeProfitStopLossGtd
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd getTriggerTakeProfitStopLossGtd() {
    return triggerTakeProfitStopLossGtd;
  }

  public void setTriggerTakeProfitStopLossGtd(CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfigurationTriggerTakeProfitStopLossGtd triggerTakeProfitStopLossGtd) {
    this.triggerTakeProfitStopLossGtd = triggerTakeProfitStopLossGtd;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration = (CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration) o;
    return Objects.equals(this.marketMarketIoc, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.marketMarketIoc) &&
        Objects.equals(this.sorLimitIoc, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.sorLimitIoc) &&
        Objects.equals(this.limitLimitGtc, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.limitLimitGtc) &&
        Objects.equals(this.limitLimitGtd, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.limitLimitGtd) &&
        Objects.equals(this.twapLimitGtd, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.twapLimitGtd) &&
        Objects.equals(this.stopLimitStopLimitGtc, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.stopLimitStopLimitGtc) &&
        Objects.equals(this.stopLimitStopLimitGtd, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.stopLimitStopLimitGtd) &&
        Objects.equals(this.blockTradeLimitLimitFok, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.blockTradeLimitLimitFok) &&
        Objects.equals(this.liquidationMarketGtc, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.liquidationMarketGtc) &&
        Objects.equals(this.liquidationMarketGtd, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.liquidationMarketGtd) &&
        Objects.equals(this.vwapLimitGtd, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.vwapLimitGtd) &&
        Objects.equals(this.sorLimitFok, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.sorLimitFok) &&
        Objects.equals(this.triggerStopLimitGtc, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.triggerStopLimitGtc) &&
        Objects.equals(this.triggerStopLimitGtd, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.triggerStopLimitGtd) &&
        Objects.equals(this.triggerTakeProfitStopLossGtc, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.triggerTakeProfitStopLossGtc) &&
        Objects.equals(this.triggerTakeProfitStopLossGtd, coinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration.triggerTakeProfitStopLossGtd);
  }

  @Override
  public int hashCode() {
    return Objects.hash(marketMarketIoc, sorLimitIoc, limitLimitGtc, limitLimitGtd, twapLimitGtd, stopLimitStopLimitGtc, stopLimitStopLimitGtd, blockTradeLimitLimitFok, liquidationMarketGtc, liquidationMarketGtd, vwapLimitGtd, sorLimitFok, triggerStopLimitGtc, triggerStopLimitGtd, triggerTakeProfitStopLossGtc, triggerTakeProfitStopLossGtd);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyEventsMaterializedApiEntryOrderConfiguration {\n");
    
    sb.append("    marketMarketIoc: ").append(toIndentedString(marketMarketIoc)).append("\n");
    sb.append("    sorLimitIoc: ").append(toIndentedString(sorLimitIoc)).append("\n");
    sb.append("    limitLimitGtc: ").append(toIndentedString(limitLimitGtc)).append("\n");
    sb.append("    limitLimitGtd: ").append(toIndentedString(limitLimitGtd)).append("\n");
    sb.append("    twapLimitGtd: ").append(toIndentedString(twapLimitGtd)).append("\n");
    sb.append("    stopLimitStopLimitGtc: ").append(toIndentedString(stopLimitStopLimitGtc)).append("\n");
    sb.append("    stopLimitStopLimitGtd: ").append(toIndentedString(stopLimitStopLimitGtd)).append("\n");
    sb.append("    blockTradeLimitLimitFok: ").append(toIndentedString(blockTradeLimitLimitFok)).append("\n");
    sb.append("    liquidationMarketGtc: ").append(toIndentedString(liquidationMarketGtc)).append("\n");
    sb.append("    liquidationMarketGtd: ").append(toIndentedString(liquidationMarketGtd)).append("\n");
    sb.append("    vwapLimitGtd: ").append(toIndentedString(vwapLimitGtd)).append("\n");
    sb.append("    sorLimitFok: ").append(toIndentedString(sorLimitFok)).append("\n");
    sb.append("    triggerStopLimitGtc: ").append(toIndentedString(triggerStopLimitGtc)).append("\n");
    sb.append("    triggerStopLimitGtd: ").append(toIndentedString(triggerStopLimitGtd)).append("\n");
    sb.append("    triggerTakeProfitStopLossGtc: ").append(toIndentedString(triggerTakeProfitStopLossGtc)).append("\n");
    sb.append("    triggerTakeProfitStopLossGtd: ").append(toIndentedString(triggerTakeProfitStopLossGtd)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

