/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.ScannerAmount;
import io.swagger.client.model.ScannerTime;
import java.io.IOException;

/**
 * ScannerBalanceApprovalOperation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class ScannerBalanceApprovalOperation {
  @SerializedName("from_address")
  private String fromAddress = null;

  @SerializedName("spender_address")
  private String spenderAddress = null;

  @SerializedName("amount")
  private ScannerAmount amount = null;

  @SerializedName("allowance")
  private ScannerAmount allowance = null;

  @SerializedName("current_balance")
  private ScannerAmount currentBalance = null;

  @SerializedName("is_spender_address_eoa")
  private Boolean isSpenderAddressEoa = null;

  @SerializedName("expiry")
  private ScannerTime expiry = null;

  public ScannerBalanceApprovalOperation fromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
    return this;
  }

   /**
   * Get fromAddress
   * @return fromAddress
  **/
  @ApiModelProperty(value = "")
  public String getFromAddress() {
    return fromAddress;
  }

  public void setFromAddress(String fromAddress) {
    this.fromAddress = fromAddress;
  }

  public ScannerBalanceApprovalOperation spenderAddress(String spenderAddress) {
    this.spenderAddress = spenderAddress;
    return this;
  }

   /**
   * Get spenderAddress
   * @return spenderAddress
  **/
  @ApiModelProperty(value = "")
  public String getSpenderAddress() {
    return spenderAddress;
  }

  public void setSpenderAddress(String spenderAddress) {
    this.spenderAddress = spenderAddress;
  }

  public ScannerBalanceApprovalOperation amount(ScannerAmount amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(value = "")
  public ScannerAmount getAmount() {
    return amount;
  }

  public void setAmount(ScannerAmount amount) {
    this.amount = amount;
  }

  public ScannerBalanceApprovalOperation allowance(ScannerAmount allowance) {
    this.allowance = allowance;
    return this;
  }

   /**
   * Get allowance
   * @return allowance
  **/
  @ApiModelProperty(value = "")
  public ScannerAmount getAllowance() {
    return allowance;
  }

  public void setAllowance(ScannerAmount allowance) {
    this.allowance = allowance;
  }

  public ScannerBalanceApprovalOperation currentBalance(ScannerAmount currentBalance) {
    this.currentBalance = currentBalance;
    return this;
  }

   /**
   * Get currentBalance
   * @return currentBalance
  **/
  @ApiModelProperty(value = "")
  public ScannerAmount getCurrentBalance() {
    return currentBalance;
  }

  public void setCurrentBalance(ScannerAmount currentBalance) {
    this.currentBalance = currentBalance;
  }

  public ScannerBalanceApprovalOperation isSpenderAddressEoa(Boolean isSpenderAddressEoa) {
    this.isSpenderAddressEoa = isSpenderAddressEoa;
    return this;
  }

   /**
   * Get isSpenderAddressEoa
   * @return isSpenderAddressEoa
  **/
  @ApiModelProperty(value = "")
  public Boolean isIsSpenderAddressEoa() {
    return isSpenderAddressEoa;
  }

  public void setIsSpenderAddressEoa(Boolean isSpenderAddressEoa) {
    this.isSpenderAddressEoa = isSpenderAddressEoa;
  }

  public ScannerBalanceApprovalOperation expiry(ScannerTime expiry) {
    this.expiry = expiry;
    return this;
  }

   /**
   * Get expiry
   * @return expiry
  **/
  @ApiModelProperty(value = "")
  public ScannerTime getExpiry() {
    return expiry;
  }

  public void setExpiry(ScannerTime expiry) {
    this.expiry = expiry;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ScannerBalanceApprovalOperation scannerBalanceApprovalOperation = (ScannerBalanceApprovalOperation) o;
    return Objects.equals(this.fromAddress, scannerBalanceApprovalOperation.fromAddress) &&
        Objects.equals(this.spenderAddress, scannerBalanceApprovalOperation.spenderAddress) &&
        Objects.equals(this.amount, scannerBalanceApprovalOperation.amount) &&
        Objects.equals(this.allowance, scannerBalanceApprovalOperation.allowance) &&
        Objects.equals(this.currentBalance, scannerBalanceApprovalOperation.currentBalance) &&
        Objects.equals(this.isSpenderAddressEoa, scannerBalanceApprovalOperation.isSpenderAddressEoa) &&
        Objects.equals(this.expiry, scannerBalanceApprovalOperation.expiry);
  }

  @Override
  public int hashCode() {
    return Objects.hash(fromAddress, spenderAddress, amount, allowance, currentBalance, isSpenderAddressEoa, expiry);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ScannerBalanceApprovalOperation {\n");
    
    sb.append("    fromAddress: ").append(toIndentedString(fromAddress)).append("\n");
    sb.append("    spenderAddress: ").append(toIndentedString(spenderAddress)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    allowance: ").append(toIndentedString(allowance)).append("\n");
    sb.append("    currentBalance: ").append(toIndentedString(currentBalance)).append("\n");
    sb.append("    isSpenderAddressEoa: ").append(toIndentedString(isSpenderAddressEoa)).append("\n");
    sb.append("    expiry: ").append(toIndentedString(expiry)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

