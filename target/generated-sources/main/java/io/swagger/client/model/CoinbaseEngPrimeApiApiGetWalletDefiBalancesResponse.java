/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiReward;
import io.swagger.client.model.CoinbaseEngPrimeApiApiStake;
import io.swagger.client.model.CoinbaseEngPrimeApiApiSupplyAndBorrow;
import io.swagger.client.model.CoinbaseEngPrimeApiApiYieldFarm;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse {
  @SerializedName("lending")
  private CoinbaseEngPrimeApiApiSupplyAndBorrow lending = null;

  @SerializedName("liquidity_pools")
  private CoinbaseEngPrimeApiApiSupplyAndBorrow liquidityPools = null;

  @SerializedName("yield_farming")
  private CoinbaseEngPrimeApiApiYieldFarm yieldFarming = null;

  @SerializedName("staked")
  private CoinbaseEngPrimeApiApiStake staked = null;

  @SerializedName("rewards")
  private CoinbaseEngPrimeApiApiReward rewards = null;

  @SerializedName("deposits")
  private CoinbaseEngPrimeApiApiStake deposits = null;

  public CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse lending(CoinbaseEngPrimeApiApiSupplyAndBorrow lending) {
    this.lending = lending;
    return this;
  }

   /**
   * Get lending
   * @return lending
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiSupplyAndBorrow getLending() {
    return lending;
  }

  public void setLending(CoinbaseEngPrimeApiApiSupplyAndBorrow lending) {
    this.lending = lending;
  }

  public CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse liquidityPools(CoinbaseEngPrimeApiApiSupplyAndBorrow liquidityPools) {
    this.liquidityPools = liquidityPools;
    return this;
  }

   /**
   * Get liquidityPools
   * @return liquidityPools
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiSupplyAndBorrow getLiquidityPools() {
    return liquidityPools;
  }

  public void setLiquidityPools(CoinbaseEngPrimeApiApiSupplyAndBorrow liquidityPools) {
    this.liquidityPools = liquidityPools;
  }

  public CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse yieldFarming(CoinbaseEngPrimeApiApiYieldFarm yieldFarming) {
    this.yieldFarming = yieldFarming;
    return this;
  }

   /**
   * Get yieldFarming
   * @return yieldFarming
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiYieldFarm getYieldFarming() {
    return yieldFarming;
  }

  public void setYieldFarming(CoinbaseEngPrimeApiApiYieldFarm yieldFarming) {
    this.yieldFarming = yieldFarming;
  }

  public CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse staked(CoinbaseEngPrimeApiApiStake staked) {
    this.staked = staked;
    return this;
  }

   /**
   * Get staked
   * @return staked
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiStake getStaked() {
    return staked;
  }

  public void setStaked(CoinbaseEngPrimeApiApiStake staked) {
    this.staked = staked;
  }

  public CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse rewards(CoinbaseEngPrimeApiApiReward rewards) {
    this.rewards = rewards;
    return this;
  }

   /**
   * Get rewards
   * @return rewards
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiReward getRewards() {
    return rewards;
  }

  public void setRewards(CoinbaseEngPrimeApiApiReward rewards) {
    this.rewards = rewards;
  }

  public CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse deposits(CoinbaseEngPrimeApiApiStake deposits) {
    this.deposits = deposits;
    return this;
  }

   /**
   * Get deposits
   * @return deposits
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiStake getDeposits() {
    return deposits;
  }

  public void setDeposits(CoinbaseEngPrimeApiApiStake deposits) {
    this.deposits = deposits;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse coinbaseEngPrimeApiApiGetWalletDefiBalancesResponse = (CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse) o;
    return Objects.equals(this.lending, coinbaseEngPrimeApiApiGetWalletDefiBalancesResponse.lending) &&
        Objects.equals(this.liquidityPools, coinbaseEngPrimeApiApiGetWalletDefiBalancesResponse.liquidityPools) &&
        Objects.equals(this.yieldFarming, coinbaseEngPrimeApiApiGetWalletDefiBalancesResponse.yieldFarming) &&
        Objects.equals(this.staked, coinbaseEngPrimeApiApiGetWalletDefiBalancesResponse.staked) &&
        Objects.equals(this.rewards, coinbaseEngPrimeApiApiGetWalletDefiBalancesResponse.rewards) &&
        Objects.equals(this.deposits, coinbaseEngPrimeApiApiGetWalletDefiBalancesResponse.deposits);
  }

  @Override
  public int hashCode() {
    return Objects.hash(lending, liquidityPools, yieldFarming, staked, rewards, deposits);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiGetWalletDefiBalancesResponse {\n");
    
    sb.append("    lending: ").append(toIndentedString(lending)).append("\n");
    sb.append("    liquidityPools: ").append(toIndentedString(liquidityPools)).append("\n");
    sb.append("    yieldFarming: ").append(toIndentedString(yieldFarming)).append("\n");
    sb.append("    staked: ").append(toIndentedString(staked)).append("\n");
    sb.append("    rewards: ").append(toIndentedString(rewards)).append("\n");
    sb.append("    deposits: ").append(toIndentedString(deposits)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

