/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseTwsDerivativeSettlementActionSettlementMovement;
import io.swagger.client.model.CoinbaseTwsLedgerHoldReplacement;
import java.io.IOException;

/**
 * CoinbaseTwsDerivativeSettlementAction
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsDerivativeSettlementAction {
  @SerializedName("transfer_cfm")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement transferCfm = null;

  @SerializedName("cfm_spot")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement cfmSpot = null;

  @SerializedName("transfer_spot")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement transferSpot = null;

  @SerializedName("spot_cfm")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement spotCfm = null;

  @SerializedName("excess_reset")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement excessReset = null;

  @SerializedName("equity_reset")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement equityReset = null;

  @SerializedName("spot_hold_replacement")
  private CoinbaseTwsLedgerHoldReplacement spotHoldReplacement = null;

  @SerializedName("cfm_transfer")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement cfmTransfer = null;

  @SerializedName("spot_transfer")
  private CoinbaseTwsDerivativeSettlementActionSettlementMovement spotTransfer = null;

  public CoinbaseTwsDerivativeSettlementAction transferCfm(CoinbaseTwsDerivativeSettlementActionSettlementMovement transferCfm) {
    this.transferCfm = transferCfm;
    return this;
  }

   /**
   * transfer USD Customer A &#x3D;&gt; ION XTP
   * @return transferCfm
  **/
  @ApiModelProperty(value = "transfer USD Customer A => ION XTP")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getTransferCfm() {
    return transferCfm;
  }

  public void setTransferCfm(CoinbaseTwsDerivativeSettlementActionSettlementMovement transferCfm) {
    this.transferCfm = transferCfm;
  }

  public CoinbaseTwsDerivativeSettlementAction cfmSpot(CoinbaseTwsDerivativeSettlementActionSettlementMovement cfmSpot) {
    this.cfmSpot = cfmSpot;
    return this;
  }

   /**
   * ION XTP -&gt; SPOT USD Customer A
   * @return cfmSpot
  **/
  @ApiModelProperty(value = "ION XTP -> SPOT USD Customer A")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getCfmSpot() {
    return cfmSpot;
  }

  public void setCfmSpot(CoinbaseTwsDerivativeSettlementActionSettlementMovement cfmSpot) {
    this.cfmSpot = cfmSpot;
  }

  public CoinbaseTwsDerivativeSettlementAction transferSpot(CoinbaseTwsDerivativeSettlementActionSettlementMovement transferSpot) {
    this.transferSpot = transferSpot;
    return this;
  }

   /**
   * Transfer USD Customer A -&gt; SPOT USD Customer A
   * @return transferSpot
  **/
  @ApiModelProperty(value = "Transfer USD Customer A -> SPOT USD Customer A")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getTransferSpot() {
    return transferSpot;
  }

  public void setTransferSpot(CoinbaseTwsDerivativeSettlementActionSettlementMovement transferSpot) {
    this.transferSpot = transferSpot;
  }

  public CoinbaseTwsDerivativeSettlementAction spotCfm(CoinbaseTwsDerivativeSettlementActionSettlementMovement spotCfm) {
    this.spotCfm = spotCfm;
    return this;
  }

   /**
   * SPOT USD to ION XTP
   * @return spotCfm
  **/
  @ApiModelProperty(value = "SPOT USD to ION XTP")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getSpotCfm() {
    return spotCfm;
  }

  public void setSpotCfm(CoinbaseTwsDerivativeSettlementActionSettlementMovement spotCfm) {
    this.spotCfm = spotCfm;
  }

  public CoinbaseTwsDerivativeSettlementAction excessReset(CoinbaseTwsDerivativeSettlementActionSettlementMovement excessReset) {
    this.excessReset = excessReset;
    return this;
  }

   /**
   * Get excessReset
   * @return excessReset
  **/
  @ApiModelProperty(value = "")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getExcessReset() {
    return excessReset;
  }

  public void setExcessReset(CoinbaseTwsDerivativeSettlementActionSettlementMovement excessReset) {
    this.excessReset = excessReset;
  }

  public CoinbaseTwsDerivativeSettlementAction equityReset(CoinbaseTwsDerivativeSettlementActionSettlementMovement equityReset) {
    this.equityReset = equityReset;
    return this;
  }

   /**
   * Opposite entry on Equity USD Customer A
   * @return equityReset
  **/
  @ApiModelProperty(value = "Opposite entry on Equity USD Customer A")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getEquityReset() {
    return equityReset;
  }

  public void setEquityReset(CoinbaseTwsDerivativeSettlementActionSettlementMovement equityReset) {
    this.equityReset = equityReset;
  }

  public CoinbaseTwsDerivativeSettlementAction spotHoldReplacement(CoinbaseTwsLedgerHoldReplacement spotHoldReplacement) {
    this.spotHoldReplacement = spotHoldReplacement;
    return this;
  }

   /**
   * Get spotHoldReplacement
   * @return spotHoldReplacement
  **/
  @ApiModelProperty(value = "")
  public CoinbaseTwsLedgerHoldReplacement getSpotHoldReplacement() {
    return spotHoldReplacement;
  }

  public void setSpotHoldReplacement(CoinbaseTwsLedgerHoldReplacement spotHoldReplacement) {
    this.spotHoldReplacement = spotHoldReplacement;
  }

  public CoinbaseTwsDerivativeSettlementAction cfmTransfer(CoinbaseTwsDerivativeSettlementActionSettlementMovement cfmTransfer) {
    this.cfmTransfer = cfmTransfer;
    return this;
  }

   /**
   * ION XTP -&gt; Transfer USD Customer A
   * @return cfmTransfer
  **/
  @ApiModelProperty(value = "ION XTP -> Transfer USD Customer A")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getCfmTransfer() {
    return cfmTransfer;
  }

  public void setCfmTransfer(CoinbaseTwsDerivativeSettlementActionSettlementMovement cfmTransfer) {
    this.cfmTransfer = cfmTransfer;
  }

  public CoinbaseTwsDerivativeSettlementAction spotTransfer(CoinbaseTwsDerivativeSettlementActionSettlementMovement spotTransfer) {
    this.spotTransfer = spotTransfer;
    return this;
  }

   /**
   * SPOT USD Customer A -&gt; Transfer USD Customer A
   * @return spotTransfer
  **/
  @ApiModelProperty(value = "SPOT USD Customer A -> Transfer USD Customer A")
  public CoinbaseTwsDerivativeSettlementActionSettlementMovement getSpotTransfer() {
    return spotTransfer;
  }

  public void setSpotTransfer(CoinbaseTwsDerivativeSettlementActionSettlementMovement spotTransfer) {
    this.spotTransfer = spotTransfer;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsDerivativeSettlementAction coinbaseTwsDerivativeSettlementAction = (CoinbaseTwsDerivativeSettlementAction) o;
    return Objects.equals(this.transferCfm, coinbaseTwsDerivativeSettlementAction.transferCfm) &&
        Objects.equals(this.cfmSpot, coinbaseTwsDerivativeSettlementAction.cfmSpot) &&
        Objects.equals(this.transferSpot, coinbaseTwsDerivativeSettlementAction.transferSpot) &&
        Objects.equals(this.spotCfm, coinbaseTwsDerivativeSettlementAction.spotCfm) &&
        Objects.equals(this.excessReset, coinbaseTwsDerivativeSettlementAction.excessReset) &&
        Objects.equals(this.equityReset, coinbaseTwsDerivativeSettlementAction.equityReset) &&
        Objects.equals(this.spotHoldReplacement, coinbaseTwsDerivativeSettlementAction.spotHoldReplacement) &&
        Objects.equals(this.cfmTransfer, coinbaseTwsDerivativeSettlementAction.cfmTransfer) &&
        Objects.equals(this.spotTransfer, coinbaseTwsDerivativeSettlementAction.spotTransfer);
  }

  @Override
  public int hashCode() {
    return Objects.hash(transferCfm, cfmSpot, transferSpot, spotCfm, excessReset, equityReset, spotHoldReplacement, cfmTransfer, spotTransfer);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsDerivativeSettlementAction {\n");
    
    sb.append("    transferCfm: ").append(toIndentedString(transferCfm)).append("\n");
    sb.append("    cfmSpot: ").append(toIndentedString(cfmSpot)).append("\n");
    sb.append("    transferSpot: ").append(toIndentedString(transferSpot)).append("\n");
    sb.append("    spotCfm: ").append(toIndentedString(spotCfm)).append("\n");
    sb.append("    excessReset: ").append(toIndentedString(excessReset)).append("\n");
    sb.append("    equityReset: ").append(toIndentedString(equityReset)).append("\n");
    sb.append("    spotHoldReplacement: ").append(toIndentedString(spotHoldReplacement)).append("\n");
    sb.append("    cfmTransfer: ").append(toIndentedString(cfmTransfer)).append("\n");
    sb.append("    spotTransfer: ").append(toIndentedString(spotTransfer)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

