/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrderSide;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiAllocationAmount
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiAllocationAmount {
  @SerializedName("base_size")
  private String baseSize = null;

  @SerializedName("base_side")
  private CoinbaseEngPrimeApiApiOrderSide baseSide = null;

  @SerializedName("quote_size")
  private String quoteSize = null;

  @SerializedName("quote_side")
  private CoinbaseEngPrimeApiApiOrderSide quoteSide = null;

  @SerializedName("quote_size_fee_inclusive")
  private String quoteSizeFeeInclusive = null;

  @SerializedName("percent_of_total")
  private String percentOfTotal = null;

  @SerializedName("commission")
  private String commission = null;

  public CoinbaseEngPrimeApiApiAllocationAmount baseSize(String baseSize) {
    this.baseSize = baseSize;
    return this;
  }

   /**
   * The base size for the amount field
   * @return baseSize
  **/
  @ApiModelProperty(required = true, value = "The base size for the amount field")
  public String getBaseSize() {
    return baseSize;
  }

  public void setBaseSize(String baseSize) {
    this.baseSize = baseSize;
  }

  public CoinbaseEngPrimeApiApiAllocationAmount baseSide(CoinbaseEngPrimeApiApiOrderSide baseSide) {
    this.baseSide = baseSide;
    return this;
  }

   /**
   * The side of the base amount field (used for net allocation)
   * @return baseSide
  **/
  @ApiModelProperty(value = "The side of the base amount field (used for net allocation)")
  public CoinbaseEngPrimeApiApiOrderSide getBaseSide() {
    return baseSide;
  }

  public void setBaseSide(CoinbaseEngPrimeApiApiOrderSide baseSide) {
    this.baseSide = baseSide;
  }

  public CoinbaseEngPrimeApiApiAllocationAmount quoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
    return this;
  }

   /**
   * The quote size for the amount field
   * @return quoteSize
  **/
  @ApiModelProperty(required = true, value = "The quote size for the amount field")
  public String getQuoteSize() {
    return quoteSize;
  }

  public void setQuoteSize(String quoteSize) {
    this.quoteSize = quoteSize;
  }

  public CoinbaseEngPrimeApiApiAllocationAmount quoteSide(CoinbaseEngPrimeApiApiOrderSide quoteSide) {
    this.quoteSide = quoteSide;
    return this;
  }

   /**
   * The side of the quote amount field (used for net allocation)
   * @return quoteSide
  **/
  @ApiModelProperty(value = "The side of the quote amount field (used for net allocation)")
  public CoinbaseEngPrimeApiApiOrderSide getQuoteSide() {
    return quoteSide;
  }

  public void setQuoteSide(CoinbaseEngPrimeApiApiOrderSide quoteSide) {
    this.quoteSide = quoteSide;
  }

  public CoinbaseEngPrimeApiApiAllocationAmount quoteSizeFeeInclusive(String quoteSizeFeeInclusive) {
    this.quoteSizeFeeInclusive = quoteSizeFeeInclusive;
    return this;
  }

   /**
   * The quote size for the amount field, inclusive of fees
   * @return quoteSizeFeeInclusive
  **/
  @ApiModelProperty(value = "The quote size for the amount field, inclusive of fees")
  public String getQuoteSizeFeeInclusive() {
    return quoteSizeFeeInclusive;
  }

  public void setQuoteSizeFeeInclusive(String quoteSizeFeeInclusive) {
    this.quoteSizeFeeInclusive = quoteSizeFeeInclusive;
  }

  public CoinbaseEngPrimeApiApiAllocationAmount percentOfTotal(String percentOfTotal) {
    this.percentOfTotal = percentOfTotal;
    return this;
  }

   /**
   * The percent of total for the amount field
   * @return percentOfTotal
  **/
  @ApiModelProperty(required = true, value = "The percent of total for the amount field")
  public String getPercentOfTotal() {
    return percentOfTotal;
  }

  public void setPercentOfTotal(String percentOfTotal) {
    this.percentOfTotal = percentOfTotal;
  }

  public CoinbaseEngPrimeApiApiAllocationAmount commission(String commission) {
    this.commission = commission;
    return this;
  }

   /**
   * The commission for the amount field in quote
   * @return commission
  **/
  @ApiModelProperty(required = true, value = "The commission for the amount field in quote")
  public String getCommission() {
    return commission;
  }

  public void setCommission(String commission) {
    this.commission = commission;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiAllocationAmount coinbaseEngPrimeApiApiAllocationAmount = (CoinbaseEngPrimeApiApiAllocationAmount) o;
    return Objects.equals(this.baseSize, coinbaseEngPrimeApiApiAllocationAmount.baseSize) &&
        Objects.equals(this.baseSide, coinbaseEngPrimeApiApiAllocationAmount.baseSide) &&
        Objects.equals(this.quoteSize, coinbaseEngPrimeApiApiAllocationAmount.quoteSize) &&
        Objects.equals(this.quoteSide, coinbaseEngPrimeApiApiAllocationAmount.quoteSide) &&
        Objects.equals(this.quoteSizeFeeInclusive, coinbaseEngPrimeApiApiAllocationAmount.quoteSizeFeeInclusive) &&
        Objects.equals(this.percentOfTotal, coinbaseEngPrimeApiApiAllocationAmount.percentOfTotal) &&
        Objects.equals(this.commission, coinbaseEngPrimeApiApiAllocationAmount.commission);
  }

  @Override
  public int hashCode() {
    return Objects.hash(baseSize, baseSide, quoteSize, quoteSide, quoteSizeFeeInclusive, percentOfTotal, commission);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiAllocationAmount {\n");
    
    sb.append("    baseSize: ").append(toIndentedString(baseSize)).append("\n");
    sb.append("    baseSide: ").append(toIndentedString(baseSide)).append("\n");
    sb.append("    quoteSize: ").append(toIndentedString(quoteSize)).append("\n");
    sb.append("    quoteSide: ").append(toIndentedString(quoteSide)).append("\n");
    sb.append("    quoteSizeFeeInclusive: ").append(toIndentedString(quoteSizeFeeInclusive)).append("\n");
    sb.append("    percentOfTotal: ").append(toIndentedString(percentOfTotal)).append("\n");
    sb.append("    commission: ").append(toIndentedString(commission)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

