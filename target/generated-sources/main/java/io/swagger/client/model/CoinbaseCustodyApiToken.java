/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiAssignedValueStrategy;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CoinbaseCustodyApiToken
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiToken {
  @SerializedName("currency_symbol")
  private String currencySymbol = null;

  @SerializedName("token_id")
  private String tokenId = null;

  @SerializedName("image_url")
  private String imageUrl = null;

  @SerializedName("image_thumbnail_url")
  private String imageThumbnailUrl = null;

  @SerializedName("attributes")
  private Map<String, String> attributes = null;

  @SerializedName("assigned_value_amount")
  private String assignedValueAmount = null;

  @SerializedName("assigned_value_currency_symbol")
  private String assignedValueCurrencySymbol = null;

  @SerializedName("assigned_value_strategy")
  private CoinbaseCustodyApiAssignedValueStrategy assignedValueStrategy = null;

  public CoinbaseCustodyApiToken currencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
    return this;
  }

   /**
   * Get currencySymbol
   * @return currencySymbol
  **/
  @ApiModelProperty(value = "")
  public String getCurrencySymbol() {
    return currencySymbol;
  }

  public void setCurrencySymbol(String currencySymbol) {
    this.currencySymbol = currencySymbol;
  }

  public CoinbaseCustodyApiToken tokenId(String tokenId) {
    this.tokenId = tokenId;
    return this;
  }

   /**
   * Get tokenId
   * @return tokenId
  **/
  @ApiModelProperty(value = "")
  public String getTokenId() {
    return tokenId;
  }

  public void setTokenId(String tokenId) {
    this.tokenId = tokenId;
  }

  public CoinbaseCustodyApiToken imageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
    return this;
  }

   /**
   * Get imageUrl
   * @return imageUrl
  **/
  @ApiModelProperty(value = "")
  public String getImageUrl() {
    return imageUrl;
  }

  public void setImageUrl(String imageUrl) {
    this.imageUrl = imageUrl;
  }

  public CoinbaseCustodyApiToken imageThumbnailUrl(String imageThumbnailUrl) {
    this.imageThumbnailUrl = imageThumbnailUrl;
    return this;
  }

   /**
   * Get imageThumbnailUrl
   * @return imageThumbnailUrl
  **/
  @ApiModelProperty(value = "")
  public String getImageThumbnailUrl() {
    return imageThumbnailUrl;
  }

  public void setImageThumbnailUrl(String imageThumbnailUrl) {
    this.imageThumbnailUrl = imageThumbnailUrl;
  }

  public CoinbaseCustodyApiToken attributes(Map<String, String> attributes) {
    this.attributes = attributes;
    return this;
  }

  public CoinbaseCustodyApiToken putAttributesItem(String key, String attributesItem) {
    if (this.attributes == null) {
      this.attributes = new HashMap<String, String>();
    }
    this.attributes.put(key, attributesItem);
    return this;
  }

   /**
   * Get attributes
   * @return attributes
  **/
  @ApiModelProperty(value = "")
  public Map<String, String> getAttributes() {
    return attributes;
  }

  public void setAttributes(Map<String, String> attributes) {
    this.attributes = attributes;
  }

  public CoinbaseCustodyApiToken assignedValueAmount(String assignedValueAmount) {
    this.assignedValueAmount = assignedValueAmount;
    return this;
  }

   /**
   * Get assignedValueAmount
   * @return assignedValueAmount
  **/
  @ApiModelProperty(value = "")
  public String getAssignedValueAmount() {
    return assignedValueAmount;
  }

  public void setAssignedValueAmount(String assignedValueAmount) {
    this.assignedValueAmount = assignedValueAmount;
  }

  public CoinbaseCustodyApiToken assignedValueCurrencySymbol(String assignedValueCurrencySymbol) {
    this.assignedValueCurrencySymbol = assignedValueCurrencySymbol;
    return this;
  }

   /**
   * Get assignedValueCurrencySymbol
   * @return assignedValueCurrencySymbol
  **/
  @ApiModelProperty(value = "")
  public String getAssignedValueCurrencySymbol() {
    return assignedValueCurrencySymbol;
  }

  public void setAssignedValueCurrencySymbol(String assignedValueCurrencySymbol) {
    this.assignedValueCurrencySymbol = assignedValueCurrencySymbol;
  }

  public CoinbaseCustodyApiToken assignedValueStrategy(CoinbaseCustodyApiAssignedValueStrategy assignedValueStrategy) {
    this.assignedValueStrategy = assignedValueStrategy;
    return this;
  }

   /**
   * Get assignedValueStrategy
   * @return assignedValueStrategy
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiAssignedValueStrategy getAssignedValueStrategy() {
    return assignedValueStrategy;
  }

  public void setAssignedValueStrategy(CoinbaseCustodyApiAssignedValueStrategy assignedValueStrategy) {
    this.assignedValueStrategy = assignedValueStrategy;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiToken coinbaseCustodyApiToken = (CoinbaseCustodyApiToken) o;
    return Objects.equals(this.currencySymbol, coinbaseCustodyApiToken.currencySymbol) &&
        Objects.equals(this.tokenId, coinbaseCustodyApiToken.tokenId) &&
        Objects.equals(this.imageUrl, coinbaseCustodyApiToken.imageUrl) &&
        Objects.equals(this.imageThumbnailUrl, coinbaseCustodyApiToken.imageThumbnailUrl) &&
        Objects.equals(this.attributes, coinbaseCustodyApiToken.attributes) &&
        Objects.equals(this.assignedValueAmount, coinbaseCustodyApiToken.assignedValueAmount) &&
        Objects.equals(this.assignedValueCurrencySymbol, coinbaseCustodyApiToken.assignedValueCurrencySymbol) &&
        Objects.equals(this.assignedValueStrategy, coinbaseCustodyApiToken.assignedValueStrategy);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencySymbol, tokenId, imageUrl, imageThumbnailUrl, attributes, assignedValueAmount, assignedValueCurrencySymbol, assignedValueStrategy);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiToken {\n");
    
    sb.append("    currencySymbol: ").append(toIndentedString(currencySymbol)).append("\n");
    sb.append("    tokenId: ").append(toIndentedString(tokenId)).append("\n");
    sb.append("    imageUrl: ").append(toIndentedString(imageUrl)).append("\n");
    sb.append("    imageThumbnailUrl: ").append(toIndentedString(imageThumbnailUrl)).append("\n");
    sb.append("    attributes: ").append(toIndentedString(attributes)).append("\n");
    sb.append("    assignedValueAmount: ").append(toIndentedString(assignedValueAmount)).append("\n");
    sb.append("    assignedValueCurrencySymbol: ").append(toIndentedString(assignedValueCurrencySymbol)).append("\n");
    sb.append("    assignedValueStrategy: ").append(toIndentedString(assignedValueStrategy)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

