/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EngPrimePolicyApiEvaluationResult;
import io.swagger.client.model.ScannerScanMessageResponse;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiWeb3MessageActivityDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiWeb3MessageActivityDetails {
  @SerializedName("message")
  private String message = null;

  @SerializedName("signed_message")
  private String signedMessage = null;

  @SerializedName("network_name")
  private String networkName = null;

  @SerializedName("dapp_name")
  private String dappName = null;

  @SerializedName("dapp_url")
  private String dappUrl = null;

  @SerializedName("operation_name")
  private String operationName = null;

  @SerializedName("source_wallet_id")
  private String sourceWalletId = null;

  @SerializedName("ready_for_signing")
  private Boolean readyForSigning = null;

  @SerializedName("signing_initiated_timestamp")
  private String signingInitiatedTimestamp = null;

  @SerializedName("evaluation_result")
  private EngPrimePolicyApiEvaluationResult evaluationResult = null;

  @SerializedName("message_scanner_result")
  private ScannerScanMessageResponse messageScannerResult = null;

  @SerializedName("source_address")
  private String sourceAddress = null;

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Get message
   * @return message
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails signedMessage(String signedMessage) {
    this.signedMessage = signedMessage;
    return this;
  }

   /**
   * Get signedMessage
   * @return signedMessage
  **/
  @ApiModelProperty(value = "")
  public String getSignedMessage() {
    return signedMessage;
  }

  public void setSignedMessage(String signedMessage) {
    this.signedMessage = signedMessage;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails networkName(String networkName) {
    this.networkName = networkName;
    return this;
  }

   /**
   * Get networkName
   * @return networkName
  **/
  @ApiModelProperty(value = "")
  public String getNetworkName() {
    return networkName;
  }

  public void setNetworkName(String networkName) {
    this.networkName = networkName;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails dappName(String dappName) {
    this.dappName = dappName;
    return this;
  }

   /**
   * Get dappName
   * @return dappName
  **/
  @ApiModelProperty(value = "")
  public String getDappName() {
    return dappName;
  }

  public void setDappName(String dappName) {
    this.dappName = dappName;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails dappUrl(String dappUrl) {
    this.dappUrl = dappUrl;
    return this;
  }

   /**
   * Get dappUrl
   * @return dappUrl
  **/
  @ApiModelProperty(value = "")
  public String getDappUrl() {
    return dappUrl;
  }

  public void setDappUrl(String dappUrl) {
    this.dappUrl = dappUrl;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails operationName(String operationName) {
    this.operationName = operationName;
    return this;
  }

   /**
   * Get operationName
   * @return operationName
  **/
  @ApiModelProperty(value = "")
  public String getOperationName() {
    return operationName;
  }

  public void setOperationName(String operationName) {
    this.operationName = operationName;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails sourceWalletId(String sourceWalletId) {
    this.sourceWalletId = sourceWalletId;
    return this;
  }

   /**
   * Get sourceWalletId
   * @return sourceWalletId
  **/
  @ApiModelProperty(value = "")
  public String getSourceWalletId() {
    return sourceWalletId;
  }

  public void setSourceWalletId(String sourceWalletId) {
    this.sourceWalletId = sourceWalletId;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails readyForSigning(Boolean readyForSigning) {
    this.readyForSigning = readyForSigning;
    return this;
  }

   /**
   * Get readyForSigning
   * @return readyForSigning
  **/
  @ApiModelProperty(value = "")
  public Boolean isReadyForSigning() {
    return readyForSigning;
  }

  public void setReadyForSigning(Boolean readyForSigning) {
    this.readyForSigning = readyForSigning;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails signingInitiatedTimestamp(String signingInitiatedTimestamp) {
    this.signingInitiatedTimestamp = signingInitiatedTimestamp;
    return this;
  }

   /**
   * Get signingInitiatedTimestamp
   * @return signingInitiatedTimestamp
  **/
  @ApiModelProperty(value = "")
  public String getSigningInitiatedTimestamp() {
    return signingInitiatedTimestamp;
  }

  public void setSigningInitiatedTimestamp(String signingInitiatedTimestamp) {
    this.signingInitiatedTimestamp = signingInitiatedTimestamp;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails evaluationResult(EngPrimePolicyApiEvaluationResult evaluationResult) {
    this.evaluationResult = evaluationResult;
    return this;
  }

   /**
   * Get evaluationResult
   * @return evaluationResult
  **/
  @ApiModelProperty(value = "")
  public EngPrimePolicyApiEvaluationResult getEvaluationResult() {
    return evaluationResult;
  }

  public void setEvaluationResult(EngPrimePolicyApiEvaluationResult evaluationResult) {
    this.evaluationResult = evaluationResult;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails messageScannerResult(ScannerScanMessageResponse messageScannerResult) {
    this.messageScannerResult = messageScannerResult;
    return this;
  }

   /**
   * Get messageScannerResult
   * @return messageScannerResult
  **/
  @ApiModelProperty(value = "")
  public ScannerScanMessageResponse getMessageScannerResult() {
    return messageScannerResult;
  }

  public void setMessageScannerResult(ScannerScanMessageResponse messageScannerResult) {
    this.messageScannerResult = messageScannerResult;
  }

  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails sourceAddress(String sourceAddress) {
    this.sourceAddress = sourceAddress;
    return this;
  }

   /**
   * Get sourceAddress
   * @return sourceAddress
  **/
  @ApiModelProperty(value = "")
  public String getSourceAddress() {
    return sourceAddress;
  }

  public void setSourceAddress(String sourceAddress) {
    this.sourceAddress = sourceAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiWeb3MessageActivityDetails coinbaseEngPrimeApiApiWeb3MessageActivityDetails = (CoinbaseEngPrimeApiApiWeb3MessageActivityDetails) o;
    return Objects.equals(this.message, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.message) &&
        Objects.equals(this.signedMessage, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.signedMessage) &&
        Objects.equals(this.networkName, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.networkName) &&
        Objects.equals(this.dappName, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.dappName) &&
        Objects.equals(this.dappUrl, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.dappUrl) &&
        Objects.equals(this.operationName, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.operationName) &&
        Objects.equals(this.sourceWalletId, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.sourceWalletId) &&
        Objects.equals(this.readyForSigning, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.readyForSigning) &&
        Objects.equals(this.signingInitiatedTimestamp, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.signingInitiatedTimestamp) &&
        Objects.equals(this.evaluationResult, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.evaluationResult) &&
        Objects.equals(this.messageScannerResult, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.messageScannerResult) &&
        Objects.equals(this.sourceAddress, coinbaseEngPrimeApiApiWeb3MessageActivityDetails.sourceAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, signedMessage, networkName, dappName, dappUrl, operationName, sourceWalletId, readyForSigning, signingInitiatedTimestamp, evaluationResult, messageScannerResult, sourceAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiWeb3MessageActivityDetails {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    signedMessage: ").append(toIndentedString(signedMessage)).append("\n");
    sb.append("    networkName: ").append(toIndentedString(networkName)).append("\n");
    sb.append("    dappName: ").append(toIndentedString(dappName)).append("\n");
    sb.append("    dappUrl: ").append(toIndentedString(dappUrl)).append("\n");
    sb.append("    operationName: ").append(toIndentedString(operationName)).append("\n");
    sb.append("    sourceWalletId: ").append(toIndentedString(sourceWalletId)).append("\n");
    sb.append("    readyForSigning: ").append(toIndentedString(readyForSigning)).append("\n");
    sb.append("    signingInitiatedTimestamp: ").append(toIndentedString(signingInitiatedTimestamp)).append("\n");
    sb.append("    evaluationResult: ").append(toIndentedString(evaluationResult)).append("\n");
    sb.append("    messageScannerResult: ").append(toIndentedString(messageScannerResult)).append("\n");
    sb.append("    sourceAddress: ").append(toIndentedString(sourceAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

