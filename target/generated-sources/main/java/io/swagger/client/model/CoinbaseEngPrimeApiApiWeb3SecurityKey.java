/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAssociation;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3SecurityKeyStatus;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiWeb3SecurityKey
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiWeb3SecurityKey {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("issued_date")
  private String issuedDate = null;

  @SerializedName("fingerprint")
  private String fingerprint = null;

  @SerializedName("status")
  private CoinbaseEngPrimeApiApiWeb3SecurityKeyStatus status = null;

  @SerializedName("associations")
  private List<CoinbaseEngPrimeApiApiAssociation> associations = null;

  @SerializedName("certificate")
  private byte[] certificate = null;

  public CoinbaseEngPrimeApiApiWeb3SecurityKey id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseEngPrimeApiApiWeb3SecurityKey name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseEngPrimeApiApiWeb3SecurityKey issuedDate(String issuedDate) {
    this.issuedDate = issuedDate;
    return this;
  }

   /**
   * Get issuedDate
   * @return issuedDate
  **/
  @ApiModelProperty(value = "")
  public String getIssuedDate() {
    return issuedDate;
  }

  public void setIssuedDate(String issuedDate) {
    this.issuedDate = issuedDate;
  }

  public CoinbaseEngPrimeApiApiWeb3SecurityKey fingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
    return this;
  }

   /**
   * Get fingerprint
   * @return fingerprint
  **/
  @ApiModelProperty(value = "")
  public String getFingerprint() {
    return fingerprint;
  }

  public void setFingerprint(String fingerprint) {
    this.fingerprint = fingerprint;
  }

  public CoinbaseEngPrimeApiApiWeb3SecurityKey status(CoinbaseEngPrimeApiApiWeb3SecurityKeyStatus status) {
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWeb3SecurityKeyStatus getStatus() {
    return status;
  }

  public void setStatus(CoinbaseEngPrimeApiApiWeb3SecurityKeyStatus status) {
    this.status = status;
  }

  public CoinbaseEngPrimeApiApiWeb3SecurityKey associations(List<CoinbaseEngPrimeApiApiAssociation> associations) {
    this.associations = associations;
    return this;
  }

  public CoinbaseEngPrimeApiApiWeb3SecurityKey addAssociationsItem(CoinbaseEngPrimeApiApiAssociation associationsItem) {
    if (this.associations == null) {
      this.associations = new ArrayList<CoinbaseEngPrimeApiApiAssociation>();
    }
    this.associations.add(associationsItem);
    return this;
  }

   /**
   * Get associations
   * @return associations
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiAssociation> getAssociations() {
    return associations;
  }

  public void setAssociations(List<CoinbaseEngPrimeApiApiAssociation> associations) {
    this.associations = associations;
  }

  public CoinbaseEngPrimeApiApiWeb3SecurityKey certificate(byte[] certificate) {
    this.certificate = certificate;
    return this;
  }

   /**
   * Get certificate
   * @return certificate
  **/
  @ApiModelProperty(value = "")
  public byte[] getCertificate() {
    return certificate;
  }

  public void setCertificate(byte[] certificate) {
    this.certificate = certificate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiWeb3SecurityKey coinbaseEngPrimeApiApiWeb3SecurityKey = (CoinbaseEngPrimeApiApiWeb3SecurityKey) o;
    return Objects.equals(this.id, coinbaseEngPrimeApiApiWeb3SecurityKey.id) &&
        Objects.equals(this.name, coinbaseEngPrimeApiApiWeb3SecurityKey.name) &&
        Objects.equals(this.issuedDate, coinbaseEngPrimeApiApiWeb3SecurityKey.issuedDate) &&
        Objects.equals(this.fingerprint, coinbaseEngPrimeApiApiWeb3SecurityKey.fingerprint) &&
        Objects.equals(this.status, coinbaseEngPrimeApiApiWeb3SecurityKey.status) &&
        Objects.equals(this.associations, coinbaseEngPrimeApiApiWeb3SecurityKey.associations) &&
        Objects.equals(this.certificate, coinbaseEngPrimeApiApiWeb3SecurityKey.certificate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, issuedDate, fingerprint, status, associations, certificate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiWeb3SecurityKey {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    issuedDate: ").append(toIndentedString(issuedDate)).append("\n");
    sb.append("    fingerprint: ").append(toIndentedString(fingerprint)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    associations: ").append(toIndentedString(associations)).append("\n");
    sb.append("    certificate: ").append(toIndentedString(certificate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

