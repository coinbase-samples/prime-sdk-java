/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAdvancedTransferActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiConversionActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiMatchTransferActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiRewardActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiShortCollateralTransferActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiStakingCryptoRebateActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiTWSTransactionActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiTwsWalletActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiUserChangesActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3ActionActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3DepositActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3MessageActivityDetails;
import io.swagger.client.model.CoinbaseEngPrimeApiApiWeb3TransactionActivityDetails;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiPrimeActivityDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPrimeActivityDetails {
  @SerializedName("custody_activity_details")
  private CoinbaseCustodyApiActivityDetails custodyActivityDetails = null;

  @SerializedName("conversion_activity_details")
  private CoinbaseEngPrimeApiApiConversionActivityDetails conversionActivityDetails = null;

  @SerializedName("web3_transaction_activity_details")
  private CoinbaseEngPrimeApiApiWeb3TransactionActivityDetails web3TransactionActivityDetails = null;

  @SerializedName("tws_wallet_activity_details")
  private CoinbaseEngPrimeApiApiTwsWalletActivityDetails twsWalletActivityDetails = null;

  @SerializedName("web3_message_activity_details")
  private CoinbaseEngPrimeApiApiWeb3MessageActivityDetails web3MessageActivityDetails = null;

  @SerializedName("reward_activity_details")
  private CoinbaseEngPrimeApiApiRewardActivityDetails rewardActivityDetails = null;

  @SerializedName("web3_add_signer_activity_details")
  private CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails web3AddSignerActivityDetails = null;

  @SerializedName("web3_action_activity_details")
  private CoinbaseEngPrimeApiApiWeb3ActionActivityDetails web3ActionActivityDetails = null;

  @SerializedName("match_transfer_activity_details")
  private CoinbaseEngPrimeApiApiMatchTransferActivityDetails matchTransferActivityDetails = null;

  @SerializedName("staking_crypto_rebate_activity_details")
  private CoinbaseEngPrimeApiApiStakingCryptoRebateActivityDetails stakingCryptoRebateActivityDetails = null;

  @SerializedName("short_collateral_transfer_activity_details")
  private CoinbaseEngPrimeApiApiShortCollateralTransferActivityDetails shortCollateralTransferActivityDetails = null;

  @SerializedName("web3_deposit_activity_details")
  private CoinbaseEngPrimeApiApiWeb3DepositActivityDetails web3DepositActivityDetails = null;

  @SerializedName("tws_transaction_activity_details")
  private CoinbaseEngPrimeApiApiTWSTransactionActivityDetails twsTransactionActivityDetails = null;

  @SerializedName("advanced_transfer_activity_details")
  private CoinbaseEngPrimeApiApiAdvancedTransferActivityDetails advancedTransferActivityDetails = null;

  @SerializedName("user_changes_activity_details")
  private CoinbaseEngPrimeApiApiUserChangesActivityDetails userChangesActivityDetails = null;

  public CoinbaseEngPrimeApiApiPrimeActivityDetails custodyActivityDetails(CoinbaseCustodyApiActivityDetails custodyActivityDetails) {
    this.custodyActivityDetails = custodyActivityDetails;
    return this;
  }

   /**
   * Get custodyActivityDetails
   * @return custodyActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiActivityDetails getCustodyActivityDetails() {
    return custodyActivityDetails;
  }

  public void setCustodyActivityDetails(CoinbaseCustodyApiActivityDetails custodyActivityDetails) {
    this.custodyActivityDetails = custodyActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails conversionActivityDetails(CoinbaseEngPrimeApiApiConversionActivityDetails conversionActivityDetails) {
    this.conversionActivityDetails = conversionActivityDetails;
    return this;
  }

   /**
   * Get conversionActivityDetails
   * @return conversionActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiConversionActivityDetails getConversionActivityDetails() {
    return conversionActivityDetails;
  }

  public void setConversionActivityDetails(CoinbaseEngPrimeApiApiConversionActivityDetails conversionActivityDetails) {
    this.conversionActivityDetails = conversionActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails web3TransactionActivityDetails(CoinbaseEngPrimeApiApiWeb3TransactionActivityDetails web3TransactionActivityDetails) {
    this.web3TransactionActivityDetails = web3TransactionActivityDetails;
    return this;
  }

   /**
   * Get web3TransactionActivityDetails
   * @return web3TransactionActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWeb3TransactionActivityDetails getWeb3TransactionActivityDetails() {
    return web3TransactionActivityDetails;
  }

  public void setWeb3TransactionActivityDetails(CoinbaseEngPrimeApiApiWeb3TransactionActivityDetails web3TransactionActivityDetails) {
    this.web3TransactionActivityDetails = web3TransactionActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails twsWalletActivityDetails(CoinbaseEngPrimeApiApiTwsWalletActivityDetails twsWalletActivityDetails) {
    this.twsWalletActivityDetails = twsWalletActivityDetails;
    return this;
  }

   /**
   * Get twsWalletActivityDetails
   * @return twsWalletActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiTwsWalletActivityDetails getTwsWalletActivityDetails() {
    return twsWalletActivityDetails;
  }

  public void setTwsWalletActivityDetails(CoinbaseEngPrimeApiApiTwsWalletActivityDetails twsWalletActivityDetails) {
    this.twsWalletActivityDetails = twsWalletActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails web3MessageActivityDetails(CoinbaseEngPrimeApiApiWeb3MessageActivityDetails web3MessageActivityDetails) {
    this.web3MessageActivityDetails = web3MessageActivityDetails;
    return this;
  }

   /**
   * Get web3MessageActivityDetails
   * @return web3MessageActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWeb3MessageActivityDetails getWeb3MessageActivityDetails() {
    return web3MessageActivityDetails;
  }

  public void setWeb3MessageActivityDetails(CoinbaseEngPrimeApiApiWeb3MessageActivityDetails web3MessageActivityDetails) {
    this.web3MessageActivityDetails = web3MessageActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails rewardActivityDetails(CoinbaseEngPrimeApiApiRewardActivityDetails rewardActivityDetails) {
    this.rewardActivityDetails = rewardActivityDetails;
    return this;
  }

   /**
   * Get rewardActivityDetails
   * @return rewardActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiRewardActivityDetails getRewardActivityDetails() {
    return rewardActivityDetails;
  }

  public void setRewardActivityDetails(CoinbaseEngPrimeApiApiRewardActivityDetails rewardActivityDetails) {
    this.rewardActivityDetails = rewardActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails web3AddSignerActivityDetails(CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails web3AddSignerActivityDetails) {
    this.web3AddSignerActivityDetails = web3AddSignerActivityDetails;
    return this;
  }

   /**
   * Get web3AddSignerActivityDetails
   * @return web3AddSignerActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails getWeb3AddSignerActivityDetails() {
    return web3AddSignerActivityDetails;
  }

  public void setWeb3AddSignerActivityDetails(CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails web3AddSignerActivityDetails) {
    this.web3AddSignerActivityDetails = web3AddSignerActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails web3ActionActivityDetails(CoinbaseEngPrimeApiApiWeb3ActionActivityDetails web3ActionActivityDetails) {
    this.web3ActionActivityDetails = web3ActionActivityDetails;
    return this;
  }

   /**
   * Get web3ActionActivityDetails
   * @return web3ActionActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWeb3ActionActivityDetails getWeb3ActionActivityDetails() {
    return web3ActionActivityDetails;
  }

  public void setWeb3ActionActivityDetails(CoinbaseEngPrimeApiApiWeb3ActionActivityDetails web3ActionActivityDetails) {
    this.web3ActionActivityDetails = web3ActionActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails matchTransferActivityDetails(CoinbaseEngPrimeApiApiMatchTransferActivityDetails matchTransferActivityDetails) {
    this.matchTransferActivityDetails = matchTransferActivityDetails;
    return this;
  }

   /**
   * Get matchTransferActivityDetails
   * @return matchTransferActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiMatchTransferActivityDetails getMatchTransferActivityDetails() {
    return matchTransferActivityDetails;
  }

  public void setMatchTransferActivityDetails(CoinbaseEngPrimeApiApiMatchTransferActivityDetails matchTransferActivityDetails) {
    this.matchTransferActivityDetails = matchTransferActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails stakingCryptoRebateActivityDetails(CoinbaseEngPrimeApiApiStakingCryptoRebateActivityDetails stakingCryptoRebateActivityDetails) {
    this.stakingCryptoRebateActivityDetails = stakingCryptoRebateActivityDetails;
    return this;
  }

   /**
   * Get stakingCryptoRebateActivityDetails
   * @return stakingCryptoRebateActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiStakingCryptoRebateActivityDetails getStakingCryptoRebateActivityDetails() {
    return stakingCryptoRebateActivityDetails;
  }

  public void setStakingCryptoRebateActivityDetails(CoinbaseEngPrimeApiApiStakingCryptoRebateActivityDetails stakingCryptoRebateActivityDetails) {
    this.stakingCryptoRebateActivityDetails = stakingCryptoRebateActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails shortCollateralTransferActivityDetails(CoinbaseEngPrimeApiApiShortCollateralTransferActivityDetails shortCollateralTransferActivityDetails) {
    this.shortCollateralTransferActivityDetails = shortCollateralTransferActivityDetails;
    return this;
  }

   /**
   * Get shortCollateralTransferActivityDetails
   * @return shortCollateralTransferActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiShortCollateralTransferActivityDetails getShortCollateralTransferActivityDetails() {
    return shortCollateralTransferActivityDetails;
  }

  public void setShortCollateralTransferActivityDetails(CoinbaseEngPrimeApiApiShortCollateralTransferActivityDetails shortCollateralTransferActivityDetails) {
    this.shortCollateralTransferActivityDetails = shortCollateralTransferActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails web3DepositActivityDetails(CoinbaseEngPrimeApiApiWeb3DepositActivityDetails web3DepositActivityDetails) {
    this.web3DepositActivityDetails = web3DepositActivityDetails;
    return this;
  }

   /**
   * Get web3DepositActivityDetails
   * @return web3DepositActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiWeb3DepositActivityDetails getWeb3DepositActivityDetails() {
    return web3DepositActivityDetails;
  }

  public void setWeb3DepositActivityDetails(CoinbaseEngPrimeApiApiWeb3DepositActivityDetails web3DepositActivityDetails) {
    this.web3DepositActivityDetails = web3DepositActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails twsTransactionActivityDetails(CoinbaseEngPrimeApiApiTWSTransactionActivityDetails twsTransactionActivityDetails) {
    this.twsTransactionActivityDetails = twsTransactionActivityDetails;
    return this;
  }

   /**
   * Get twsTransactionActivityDetails
   * @return twsTransactionActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiTWSTransactionActivityDetails getTwsTransactionActivityDetails() {
    return twsTransactionActivityDetails;
  }

  public void setTwsTransactionActivityDetails(CoinbaseEngPrimeApiApiTWSTransactionActivityDetails twsTransactionActivityDetails) {
    this.twsTransactionActivityDetails = twsTransactionActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails advancedTransferActivityDetails(CoinbaseEngPrimeApiApiAdvancedTransferActivityDetails advancedTransferActivityDetails) {
    this.advancedTransferActivityDetails = advancedTransferActivityDetails;
    return this;
  }

   /**
   * Get advancedTransferActivityDetails
   * @return advancedTransferActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiAdvancedTransferActivityDetails getAdvancedTransferActivityDetails() {
    return advancedTransferActivityDetails;
  }

  public void setAdvancedTransferActivityDetails(CoinbaseEngPrimeApiApiAdvancedTransferActivityDetails advancedTransferActivityDetails) {
    this.advancedTransferActivityDetails = advancedTransferActivityDetails;
  }

  public CoinbaseEngPrimeApiApiPrimeActivityDetails userChangesActivityDetails(CoinbaseEngPrimeApiApiUserChangesActivityDetails userChangesActivityDetails) {
    this.userChangesActivityDetails = userChangesActivityDetails;
    return this;
  }

   /**
   * Get userChangesActivityDetails
   * @return userChangesActivityDetails
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiUserChangesActivityDetails getUserChangesActivityDetails() {
    return userChangesActivityDetails;
  }

  public void setUserChangesActivityDetails(CoinbaseEngPrimeApiApiUserChangesActivityDetails userChangesActivityDetails) {
    this.userChangesActivityDetails = userChangesActivityDetails;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPrimeActivityDetails coinbaseEngPrimeApiApiPrimeActivityDetails = (CoinbaseEngPrimeApiApiPrimeActivityDetails) o;
    return Objects.equals(this.custodyActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.custodyActivityDetails) &&
        Objects.equals(this.conversionActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.conversionActivityDetails) &&
        Objects.equals(this.web3TransactionActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.web3TransactionActivityDetails) &&
        Objects.equals(this.twsWalletActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.twsWalletActivityDetails) &&
        Objects.equals(this.web3MessageActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.web3MessageActivityDetails) &&
        Objects.equals(this.rewardActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.rewardActivityDetails) &&
        Objects.equals(this.web3AddSignerActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.web3AddSignerActivityDetails) &&
        Objects.equals(this.web3ActionActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.web3ActionActivityDetails) &&
        Objects.equals(this.matchTransferActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.matchTransferActivityDetails) &&
        Objects.equals(this.stakingCryptoRebateActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.stakingCryptoRebateActivityDetails) &&
        Objects.equals(this.shortCollateralTransferActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.shortCollateralTransferActivityDetails) &&
        Objects.equals(this.web3DepositActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.web3DepositActivityDetails) &&
        Objects.equals(this.twsTransactionActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.twsTransactionActivityDetails) &&
        Objects.equals(this.advancedTransferActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.advancedTransferActivityDetails) &&
        Objects.equals(this.userChangesActivityDetails, coinbaseEngPrimeApiApiPrimeActivityDetails.userChangesActivityDetails);
  }

  @Override
  public int hashCode() {
    return Objects.hash(custodyActivityDetails, conversionActivityDetails, web3TransactionActivityDetails, twsWalletActivityDetails, web3MessageActivityDetails, rewardActivityDetails, web3AddSignerActivityDetails, web3ActionActivityDetails, matchTransferActivityDetails, stakingCryptoRebateActivityDetails, shortCollateralTransferActivityDetails, web3DepositActivityDetails, twsTransactionActivityDetails, advancedTransferActivityDetails, userChangesActivityDetails);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPrimeActivityDetails {\n");
    
    sb.append("    custodyActivityDetails: ").append(toIndentedString(custodyActivityDetails)).append("\n");
    sb.append("    conversionActivityDetails: ").append(toIndentedString(conversionActivityDetails)).append("\n");
    sb.append("    web3TransactionActivityDetails: ").append(toIndentedString(web3TransactionActivityDetails)).append("\n");
    sb.append("    twsWalletActivityDetails: ").append(toIndentedString(twsWalletActivityDetails)).append("\n");
    sb.append("    web3MessageActivityDetails: ").append(toIndentedString(web3MessageActivityDetails)).append("\n");
    sb.append("    rewardActivityDetails: ").append(toIndentedString(rewardActivityDetails)).append("\n");
    sb.append("    web3AddSignerActivityDetails: ").append(toIndentedString(web3AddSignerActivityDetails)).append("\n");
    sb.append("    web3ActionActivityDetails: ").append(toIndentedString(web3ActionActivityDetails)).append("\n");
    sb.append("    matchTransferActivityDetails: ").append(toIndentedString(matchTransferActivityDetails)).append("\n");
    sb.append("    stakingCryptoRebateActivityDetails: ").append(toIndentedString(stakingCryptoRebateActivityDetails)).append("\n");
    sb.append("    shortCollateralTransferActivityDetails: ").append(toIndentedString(shortCollateralTransferActivityDetails)).append("\n");
    sb.append("    web3DepositActivityDetails: ").append(toIndentedString(web3DepositActivityDetails)).append("\n");
    sb.append("    twsTransactionActivityDetails: ").append(toIndentedString(twsTransactionActivityDetails)).append("\n");
    sb.append("    advancedTransferActivityDetails: ").append(toIndentedString(advancedTransferActivityDetails)).append("\n");
    sb.append("    userChangesActivityDetails: ").append(toIndentedString(userChangesActivityDetails)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

