/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiActivitySecondaryType;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiActivityStatus;
import io.swagger.client.model.CoinbaseEngPrimeActivityApiActivityType;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse {
  @SerializedName("currencies")
  private List<String> currencies = new ArrayList<String>();

  @SerializedName("statuses")
  private List<CoinbaseEngPrimeActivityApiActivityStatus> statuses = new ArrayList<CoinbaseEngPrimeActivityApiActivityStatus>();

  @SerializedName("types")
  private List<CoinbaseEngPrimeActivityApiActivityType> types = new ArrayList<CoinbaseEngPrimeActivityApiActivityType>();

  @SerializedName("secondary_types")
  private List<CoinbaseEngPrimeActivityApiActivitySecondaryType> secondaryTypes = null;

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse currencies(List<String> currencies) {
    this.currencies = currencies;
    return this;
  }

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse addCurrenciesItem(String currenciesItem) {
    this.currencies.add(currenciesItem);
    return this;
  }

   /**
   * Get currencies
   * @return currencies
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getCurrencies() {
    return currencies;
  }

  public void setCurrencies(List<String> currencies) {
    this.currencies = currencies;
  }

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse statuses(List<CoinbaseEngPrimeActivityApiActivityStatus> statuses) {
    this.statuses = statuses;
    return this;
  }

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse addStatusesItem(CoinbaseEngPrimeActivityApiActivityStatus statusesItem) {
    this.statuses.add(statusesItem);
    return this;
  }

   /**
   * Get statuses
   * @return statuses
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseEngPrimeActivityApiActivityStatus> getStatuses() {
    return statuses;
  }

  public void setStatuses(List<CoinbaseEngPrimeActivityApiActivityStatus> statuses) {
    this.statuses = statuses;
  }

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse types(List<CoinbaseEngPrimeActivityApiActivityType> types) {
    this.types = types;
    return this;
  }

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse addTypesItem(CoinbaseEngPrimeActivityApiActivityType typesItem) {
    this.types.add(typesItem);
    return this;
  }

   /**
   * Get types
   * @return types
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseEngPrimeActivityApiActivityType> getTypes() {
    return types;
  }

  public void setTypes(List<CoinbaseEngPrimeActivityApiActivityType> types) {
    this.types = types;
  }

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse secondaryTypes(List<CoinbaseEngPrimeActivityApiActivitySecondaryType> secondaryTypes) {
    this.secondaryTypes = secondaryTypes;
    return this;
  }

  public CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse addSecondaryTypesItem(CoinbaseEngPrimeActivityApiActivitySecondaryType secondaryTypesItem) {
    if (this.secondaryTypes == null) {
      this.secondaryTypes = new ArrayList<CoinbaseEngPrimeActivityApiActivitySecondaryType>();
    }
    this.secondaryTypes.add(secondaryTypesItem);
    return this;
  }

   /**
   * Get secondaryTypes
   * @return secondaryTypes
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeActivityApiActivitySecondaryType> getSecondaryTypes() {
    return secondaryTypes;
  }

  public void setSecondaryTypes(List<CoinbaseEngPrimeActivityApiActivitySecondaryType> secondaryTypes) {
    this.secondaryTypes = secondaryTypes;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse coinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse = (CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse) o;
    return Objects.equals(this.currencies, coinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse.currencies) &&
        Objects.equals(this.statuses, coinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse.statuses) &&
        Objects.equals(this.types, coinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse.types) &&
        Objects.equals(this.secondaryTypes, coinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse.secondaryTypes);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currencies, statuses, types, secondaryTypes);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiGetPrimeActivityFiltersResponse {\n");
    
    sb.append("    currencies: ").append(toIndentedString(currencies)).append("\n");
    sb.append("    statuses: ").append(toIndentedString(statuses)).append("\n");
    sb.append("    types: ").append(toIndentedString(types)).append("\n");
    sb.append("    secondaryTypes: ").append(toIndentedString(secondaryTypes)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

