/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiActivityTimelineEvent;
import io.swagger.client.model.CoinbaseCustodyApiAdminChangeRequestAuditData;
import io.swagger.client.model.CoinbaseCustodyApiApiKeyChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiBillingAddressChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiBillingPreferenceChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiDocumentSignatureAuditData;
import io.swagger.client.model.CoinbaseCustodyApiEmailListChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiGovernanceVoteAuditData;
import io.swagger.client.model.CoinbaseCustodyApiInvitationAuditData;
import io.swagger.client.model.CoinbaseCustodyApiPaymentMethodChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiRedoPlanAuditData;
import io.swagger.client.model.CoinbaseCustodyApiSettingsChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiSmartContractReleaseAuditData;
import io.swagger.client.model.CoinbaseCustodyApiTransactionAuditData;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiUserChangeRequestAuditData;
import io.swagger.client.model.CoinbaseCustodyApiWalletChangeAuditData;
import io.swagger.client.model.CoinbaseCustodyApiWithdrawalAddressChangeAuditData;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseCustodyApiActivityDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiActivityDetails {
  @SerializedName("wallet_change_data")
  private CoinbaseCustodyApiWalletChangeAuditData walletChangeData = null;

  @SerializedName("user_change_data")
  private CoinbaseCustodyApiUserChangeAuditData userChangeData = null;

  @SerializedName("smart_contract_release_data")
  private CoinbaseCustodyApiSmartContractReleaseAuditData smartContractReleaseData = null;

  @SerializedName("settings_change_data")
  private CoinbaseCustodyApiSettingsChangeAuditData settingsChangeData = null;

  @SerializedName("redo_plan_data")
  private CoinbaseCustodyApiRedoPlanAuditData redoPlanData = null;

  @SerializedName("withdrawal_address_change_data")
  private CoinbaseCustodyApiWithdrawalAddressChangeAuditData withdrawalAddressChangeData = null;

  @SerializedName("transaction_data")
  private CoinbaseCustodyApiTransactionAuditData transactionData = null;

  @SerializedName("invitation_data")
  private CoinbaseCustodyApiInvitationAuditData invitationData = null;

  @SerializedName("governance_vote_data")
  private CoinbaseCustodyApiGovernanceVoteAuditData governanceVoteData = null;

  @SerializedName("email_list_change_data")
  private CoinbaseCustodyApiEmailListChangeAuditData emailListChangeData = null;

  @SerializedName("document_signature_data")
  private CoinbaseCustodyApiDocumentSignatureAuditData documentSignatureData = null;

  @SerializedName("billing_preference_change_data")
  private CoinbaseCustodyApiBillingPreferenceChangeAuditData billingPreferenceChangeData = null;

  @SerializedName("billing_address_change_data")
  private CoinbaseCustodyApiBillingAddressChangeAuditData billingAddressChangeData = null;

  @SerializedName("api_key_change_data")
  private CoinbaseCustodyApiApiKeyChangeAuditData apiKeyChangeData = null;

  @SerializedName("admin_change_request_data")
  private CoinbaseCustodyApiAdminChangeRequestAuditData adminChangeRequestData = null;

  @SerializedName("payment_method_change_data")
  private CoinbaseCustodyApiPaymentMethodChangeAuditData paymentMethodChangeData = null;

  @SerializedName("user_change_request_data")
  private CoinbaseCustodyApiUserChangeRequestAuditData userChangeRequestData = null;

  @SerializedName("timeline_events")
  private List<CoinbaseCustodyApiActivityTimelineEvent> timelineEvents = null;

  public CoinbaseCustodyApiActivityDetails walletChangeData(CoinbaseCustodyApiWalletChangeAuditData walletChangeData) {
    this.walletChangeData = walletChangeData;
    return this;
  }

   /**
   * Get walletChangeData
   * @return walletChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiWalletChangeAuditData getWalletChangeData() {
    return walletChangeData;
  }

  public void setWalletChangeData(CoinbaseCustodyApiWalletChangeAuditData walletChangeData) {
    this.walletChangeData = walletChangeData;
  }

  public CoinbaseCustodyApiActivityDetails userChangeData(CoinbaseCustodyApiUserChangeAuditData userChangeData) {
    this.userChangeData = userChangeData;
    return this;
  }

   /**
   * Get userChangeData
   * @return userChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeAuditData getUserChangeData() {
    return userChangeData;
  }

  public void setUserChangeData(CoinbaseCustodyApiUserChangeAuditData userChangeData) {
    this.userChangeData = userChangeData;
  }

  public CoinbaseCustodyApiActivityDetails smartContractReleaseData(CoinbaseCustodyApiSmartContractReleaseAuditData smartContractReleaseData) {
    this.smartContractReleaseData = smartContractReleaseData;
    return this;
  }

   /**
   * Get smartContractReleaseData
   * @return smartContractReleaseData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiSmartContractReleaseAuditData getSmartContractReleaseData() {
    return smartContractReleaseData;
  }

  public void setSmartContractReleaseData(CoinbaseCustodyApiSmartContractReleaseAuditData smartContractReleaseData) {
    this.smartContractReleaseData = smartContractReleaseData;
  }

  public CoinbaseCustodyApiActivityDetails settingsChangeData(CoinbaseCustodyApiSettingsChangeAuditData settingsChangeData) {
    this.settingsChangeData = settingsChangeData;
    return this;
  }

   /**
   * Get settingsChangeData
   * @return settingsChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiSettingsChangeAuditData getSettingsChangeData() {
    return settingsChangeData;
  }

  public void setSettingsChangeData(CoinbaseCustodyApiSettingsChangeAuditData settingsChangeData) {
    this.settingsChangeData = settingsChangeData;
  }

  public CoinbaseCustodyApiActivityDetails redoPlanData(CoinbaseCustodyApiRedoPlanAuditData redoPlanData) {
    this.redoPlanData = redoPlanData;
    return this;
  }

   /**
   * Get redoPlanData
   * @return redoPlanData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiRedoPlanAuditData getRedoPlanData() {
    return redoPlanData;
  }

  public void setRedoPlanData(CoinbaseCustodyApiRedoPlanAuditData redoPlanData) {
    this.redoPlanData = redoPlanData;
  }

  public CoinbaseCustodyApiActivityDetails withdrawalAddressChangeData(CoinbaseCustodyApiWithdrawalAddressChangeAuditData withdrawalAddressChangeData) {
    this.withdrawalAddressChangeData = withdrawalAddressChangeData;
    return this;
  }

   /**
   * Get withdrawalAddressChangeData
   * @return withdrawalAddressChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiWithdrawalAddressChangeAuditData getWithdrawalAddressChangeData() {
    return withdrawalAddressChangeData;
  }

  public void setWithdrawalAddressChangeData(CoinbaseCustodyApiWithdrawalAddressChangeAuditData withdrawalAddressChangeData) {
    this.withdrawalAddressChangeData = withdrawalAddressChangeData;
  }

  public CoinbaseCustodyApiActivityDetails transactionData(CoinbaseCustodyApiTransactionAuditData transactionData) {
    this.transactionData = transactionData;
    return this;
  }

   /**
   * Get transactionData
   * @return transactionData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiTransactionAuditData getTransactionData() {
    return transactionData;
  }

  public void setTransactionData(CoinbaseCustodyApiTransactionAuditData transactionData) {
    this.transactionData = transactionData;
  }

  public CoinbaseCustodyApiActivityDetails invitationData(CoinbaseCustodyApiInvitationAuditData invitationData) {
    this.invitationData = invitationData;
    return this;
  }

   /**
   * Get invitationData
   * @return invitationData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiInvitationAuditData getInvitationData() {
    return invitationData;
  }

  public void setInvitationData(CoinbaseCustodyApiInvitationAuditData invitationData) {
    this.invitationData = invitationData;
  }

  public CoinbaseCustodyApiActivityDetails governanceVoteData(CoinbaseCustodyApiGovernanceVoteAuditData governanceVoteData) {
    this.governanceVoteData = governanceVoteData;
    return this;
  }

   /**
   * Get governanceVoteData
   * @return governanceVoteData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiGovernanceVoteAuditData getGovernanceVoteData() {
    return governanceVoteData;
  }

  public void setGovernanceVoteData(CoinbaseCustodyApiGovernanceVoteAuditData governanceVoteData) {
    this.governanceVoteData = governanceVoteData;
  }

  public CoinbaseCustodyApiActivityDetails emailListChangeData(CoinbaseCustodyApiEmailListChangeAuditData emailListChangeData) {
    this.emailListChangeData = emailListChangeData;
    return this;
  }

   /**
   * Get emailListChangeData
   * @return emailListChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiEmailListChangeAuditData getEmailListChangeData() {
    return emailListChangeData;
  }

  public void setEmailListChangeData(CoinbaseCustodyApiEmailListChangeAuditData emailListChangeData) {
    this.emailListChangeData = emailListChangeData;
  }

  public CoinbaseCustodyApiActivityDetails documentSignatureData(CoinbaseCustodyApiDocumentSignatureAuditData documentSignatureData) {
    this.documentSignatureData = documentSignatureData;
    return this;
  }

   /**
   * Get documentSignatureData
   * @return documentSignatureData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiDocumentSignatureAuditData getDocumentSignatureData() {
    return documentSignatureData;
  }

  public void setDocumentSignatureData(CoinbaseCustodyApiDocumentSignatureAuditData documentSignatureData) {
    this.documentSignatureData = documentSignatureData;
  }

  public CoinbaseCustodyApiActivityDetails billingPreferenceChangeData(CoinbaseCustodyApiBillingPreferenceChangeAuditData billingPreferenceChangeData) {
    this.billingPreferenceChangeData = billingPreferenceChangeData;
    return this;
  }

   /**
   * Get billingPreferenceChangeData
   * @return billingPreferenceChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiBillingPreferenceChangeAuditData getBillingPreferenceChangeData() {
    return billingPreferenceChangeData;
  }

  public void setBillingPreferenceChangeData(CoinbaseCustodyApiBillingPreferenceChangeAuditData billingPreferenceChangeData) {
    this.billingPreferenceChangeData = billingPreferenceChangeData;
  }

  public CoinbaseCustodyApiActivityDetails billingAddressChangeData(CoinbaseCustodyApiBillingAddressChangeAuditData billingAddressChangeData) {
    this.billingAddressChangeData = billingAddressChangeData;
    return this;
  }

   /**
   * Get billingAddressChangeData
   * @return billingAddressChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiBillingAddressChangeAuditData getBillingAddressChangeData() {
    return billingAddressChangeData;
  }

  public void setBillingAddressChangeData(CoinbaseCustodyApiBillingAddressChangeAuditData billingAddressChangeData) {
    this.billingAddressChangeData = billingAddressChangeData;
  }

  public CoinbaseCustodyApiActivityDetails apiKeyChangeData(CoinbaseCustodyApiApiKeyChangeAuditData apiKeyChangeData) {
    this.apiKeyChangeData = apiKeyChangeData;
    return this;
  }

   /**
   * Get apiKeyChangeData
   * @return apiKeyChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiApiKeyChangeAuditData getApiKeyChangeData() {
    return apiKeyChangeData;
  }

  public void setApiKeyChangeData(CoinbaseCustodyApiApiKeyChangeAuditData apiKeyChangeData) {
    this.apiKeyChangeData = apiKeyChangeData;
  }

  public CoinbaseCustodyApiActivityDetails adminChangeRequestData(CoinbaseCustodyApiAdminChangeRequestAuditData adminChangeRequestData) {
    this.adminChangeRequestData = adminChangeRequestData;
    return this;
  }

   /**
   * Get adminChangeRequestData
   * @return adminChangeRequestData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiAdminChangeRequestAuditData getAdminChangeRequestData() {
    return adminChangeRequestData;
  }

  public void setAdminChangeRequestData(CoinbaseCustodyApiAdminChangeRequestAuditData adminChangeRequestData) {
    this.adminChangeRequestData = adminChangeRequestData;
  }

  public CoinbaseCustodyApiActivityDetails paymentMethodChangeData(CoinbaseCustodyApiPaymentMethodChangeAuditData paymentMethodChangeData) {
    this.paymentMethodChangeData = paymentMethodChangeData;
    return this;
  }

   /**
   * Get paymentMethodChangeData
   * @return paymentMethodChangeData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiPaymentMethodChangeAuditData getPaymentMethodChangeData() {
    return paymentMethodChangeData;
  }

  public void setPaymentMethodChangeData(CoinbaseCustodyApiPaymentMethodChangeAuditData paymentMethodChangeData) {
    this.paymentMethodChangeData = paymentMethodChangeData;
  }

  public CoinbaseCustodyApiActivityDetails userChangeRequestData(CoinbaseCustodyApiUserChangeRequestAuditData userChangeRequestData) {
    this.userChangeRequestData = userChangeRequestData;
    return this;
  }

   /**
   * Get userChangeRequestData
   * @return userChangeRequestData
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiUserChangeRequestAuditData getUserChangeRequestData() {
    return userChangeRequestData;
  }

  public void setUserChangeRequestData(CoinbaseCustodyApiUserChangeRequestAuditData userChangeRequestData) {
    this.userChangeRequestData = userChangeRequestData;
  }

  public CoinbaseCustodyApiActivityDetails timelineEvents(List<CoinbaseCustodyApiActivityTimelineEvent> timelineEvents) {
    this.timelineEvents = timelineEvents;
    return this;
  }

  public CoinbaseCustodyApiActivityDetails addTimelineEventsItem(CoinbaseCustodyApiActivityTimelineEvent timelineEventsItem) {
    if (this.timelineEvents == null) {
      this.timelineEvents = new ArrayList<CoinbaseCustodyApiActivityTimelineEvent>();
    }
    this.timelineEvents.add(timelineEventsItem);
    return this;
  }

   /**
   * Get timelineEvents
   * @return timelineEvents
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseCustodyApiActivityTimelineEvent> getTimelineEvents() {
    return timelineEvents;
  }

  public void setTimelineEvents(List<CoinbaseCustodyApiActivityTimelineEvent> timelineEvents) {
    this.timelineEvents = timelineEvents;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiActivityDetails coinbaseCustodyApiActivityDetails = (CoinbaseCustodyApiActivityDetails) o;
    return Objects.equals(this.walletChangeData, coinbaseCustodyApiActivityDetails.walletChangeData) &&
        Objects.equals(this.userChangeData, coinbaseCustodyApiActivityDetails.userChangeData) &&
        Objects.equals(this.smartContractReleaseData, coinbaseCustodyApiActivityDetails.smartContractReleaseData) &&
        Objects.equals(this.settingsChangeData, coinbaseCustodyApiActivityDetails.settingsChangeData) &&
        Objects.equals(this.redoPlanData, coinbaseCustodyApiActivityDetails.redoPlanData) &&
        Objects.equals(this.withdrawalAddressChangeData, coinbaseCustodyApiActivityDetails.withdrawalAddressChangeData) &&
        Objects.equals(this.transactionData, coinbaseCustodyApiActivityDetails.transactionData) &&
        Objects.equals(this.invitationData, coinbaseCustodyApiActivityDetails.invitationData) &&
        Objects.equals(this.governanceVoteData, coinbaseCustodyApiActivityDetails.governanceVoteData) &&
        Objects.equals(this.emailListChangeData, coinbaseCustodyApiActivityDetails.emailListChangeData) &&
        Objects.equals(this.documentSignatureData, coinbaseCustodyApiActivityDetails.documentSignatureData) &&
        Objects.equals(this.billingPreferenceChangeData, coinbaseCustodyApiActivityDetails.billingPreferenceChangeData) &&
        Objects.equals(this.billingAddressChangeData, coinbaseCustodyApiActivityDetails.billingAddressChangeData) &&
        Objects.equals(this.apiKeyChangeData, coinbaseCustodyApiActivityDetails.apiKeyChangeData) &&
        Objects.equals(this.adminChangeRequestData, coinbaseCustodyApiActivityDetails.adminChangeRequestData) &&
        Objects.equals(this.paymentMethodChangeData, coinbaseCustodyApiActivityDetails.paymentMethodChangeData) &&
        Objects.equals(this.userChangeRequestData, coinbaseCustodyApiActivityDetails.userChangeRequestData) &&
        Objects.equals(this.timelineEvents, coinbaseCustodyApiActivityDetails.timelineEvents);
  }

  @Override
  public int hashCode() {
    return Objects.hash(walletChangeData, userChangeData, smartContractReleaseData, settingsChangeData, redoPlanData, withdrawalAddressChangeData, transactionData, invitationData, governanceVoteData, emailListChangeData, documentSignatureData, billingPreferenceChangeData, billingAddressChangeData, apiKeyChangeData, adminChangeRequestData, paymentMethodChangeData, userChangeRequestData, timelineEvents);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiActivityDetails {\n");
    
    sb.append("    walletChangeData: ").append(toIndentedString(walletChangeData)).append("\n");
    sb.append("    userChangeData: ").append(toIndentedString(userChangeData)).append("\n");
    sb.append("    smartContractReleaseData: ").append(toIndentedString(smartContractReleaseData)).append("\n");
    sb.append("    settingsChangeData: ").append(toIndentedString(settingsChangeData)).append("\n");
    sb.append("    redoPlanData: ").append(toIndentedString(redoPlanData)).append("\n");
    sb.append("    withdrawalAddressChangeData: ").append(toIndentedString(withdrawalAddressChangeData)).append("\n");
    sb.append("    transactionData: ").append(toIndentedString(transactionData)).append("\n");
    sb.append("    invitationData: ").append(toIndentedString(invitationData)).append("\n");
    sb.append("    governanceVoteData: ").append(toIndentedString(governanceVoteData)).append("\n");
    sb.append("    emailListChangeData: ").append(toIndentedString(emailListChangeData)).append("\n");
    sb.append("    documentSignatureData: ").append(toIndentedString(documentSignatureData)).append("\n");
    sb.append("    billingPreferenceChangeData: ").append(toIndentedString(billingPreferenceChangeData)).append("\n");
    sb.append("    billingAddressChangeData: ").append(toIndentedString(billingAddressChangeData)).append("\n");
    sb.append("    apiKeyChangeData: ").append(toIndentedString(apiKeyChangeData)).append("\n");
    sb.append("    adminChangeRequestData: ").append(toIndentedString(adminChangeRequestData)).append("\n");
    sb.append("    paymentMethodChangeData: ").append(toIndentedString(paymentMethodChangeData)).append("\n");
    sb.append("    userChangeRequestData: ").append(toIndentedString(userChangeRequestData)).append("\n");
    sb.append("    timelineEvents: ").append(toIndentedString(timelineEvents)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

