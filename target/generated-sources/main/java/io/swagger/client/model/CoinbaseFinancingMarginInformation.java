/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingAmount;
import io.swagger.client.model.CoinbaseFinancingAssetLongShortPosition;
import io.swagger.client.model.CoinbaseFinancingLoanInfo;
import io.swagger.client.model.CoinbaseFinancingMarginAddOn;
import io.swagger.client.model.CoinbaseFinancingMarginCallHistoryRecord;
import io.swagger.client.model.CoinbaseFinancingMarketRate;
import io.swagger.client.model.CoinbaseFinancingPMAssetInfo;
import io.swagger.client.model.CoinbaseFinancingPortfolioAsset;
import io.swagger.client.model.CoinbaseFinancingSettlementDue;
import io.swagger.client.model.CoinbaseFinancingTFAssetInfo;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseFinancingMarginInformation
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingMarginInformation {
  @SerializedName("entity_id")
  private String entityId = null;

  @SerializedName("margin_equity")
  private CoinbaseFinancingAmount marginEquity = null;

  @SerializedName("margin_requirement")
  private CoinbaseFinancingAmount marginRequirement = null;

  @SerializedName("excess_deficit")
  private CoinbaseFinancingAmount excessDeficit = null;

  @SerializedName("pm_credit_limit")
  private CoinbaseFinancingAmount pmCreditLimit = null;

  @SerializedName("pm_credit_consumed")
  private CoinbaseFinancingAmount pmCreditConsumed = null;

  @SerializedName("tf_credit_limit")
  private CoinbaseFinancingAmount tfCreditLimit = null;

  @SerializedName("tf_credit_consumed")
  private CoinbaseFinancingAmount tfCreditConsumed = null;

  @SerializedName("tf_adjusted_credit_consumed")
  private CoinbaseFinancingAmount tfAdjustedCreditConsumed = null;

  @SerializedName("tf_adjusted_equity")
  private CoinbaseFinancingAmount tfAdjustedEquity = null;

  @SerializedName("tf_adjusted_asset_value")
  private CoinbaseFinancingAmount tfAdjustedAssetValue = null;

  @SerializedName("tf_adjusted_liability_value")
  private CoinbaseFinancingAmount tfAdjustedLiabilityValue = null;

  @SerializedName("frozen")
  private Boolean frozen = null;

  @SerializedName("frozen_reason")
  private String frozenReason = null;

  @SerializedName("tf_enabled")
  private Boolean tfEnabled = null;

  @SerializedName("pm_enabled")
  private Boolean pmEnabled = null;

  @SerializedName("amounts_due")
  private List<CoinbaseFinancingSettlementDue> amountsDue = null;

  @SerializedName("margin_call_records")
  private List<CoinbaseFinancingMarginCallHistoryRecord> marginCallRecords = null;

  @SerializedName("tf_loans")
  private List<CoinbaseFinancingLoanInfo> tfLoans = null;

  @SerializedName("pm_loans")
  private List<CoinbaseFinancingLoanInfo> pmLoans = null;

  @SerializedName("short_collateral")
  private List<CoinbaseFinancingLoanInfo> shortCollateral = null;

  @SerializedName("asset_balances")
  private List<CoinbaseFinancingPortfolioAsset> assetBalances = null;

  @SerializedName("market_rates")
  private List<CoinbaseFinancingMarketRate> marketRates = null;

  @SerializedName("gross_market_value")
  private CoinbaseFinancingAmount grossMarketValue = null;

  @SerializedName("net_market_value")
  private CoinbaseFinancingAmount netMarketValue = null;

  @SerializedName("long_market_value")
  private CoinbaseFinancingAmount longMarketValue = null;

  @SerializedName("non_marginable_long_market_value")
  private CoinbaseFinancingAmount nonMarginableLongMarketValue = null;

  @SerializedName("short_market_value")
  private CoinbaseFinancingAmount shortMarketValue = null;

  @SerializedName("gross_leverage")
  private String grossLeverage = null;

  @SerializedName("net_exposure")
  private String netExposure = null;

  @SerializedName("portfolio_stress_triggered")
  private CoinbaseFinancingMarginAddOn portfolioStressTriggered = null;

  @SerializedName("all_margin_add_ons")
  private List<CoinbaseFinancingMarginAddOn> allMarginAddOns = null;

  @SerializedName("pm_asset_info")
  private List<CoinbaseFinancingPMAssetInfo> pmAssetInfo = null;

  @SerializedName("tf_asset_info")
  private List<CoinbaseFinancingTFAssetInfo> tfAssetInfo = null;

  @SerializedName("equity_percentage")
  private String equityPercentage = null;

  @SerializedName("short_collateral_balance")
  private String shortCollateralBalance = null;

  @SerializedName("cash_value")
  private String cashValue = null;

  @SerializedName("total_settlement_due")
  private String totalSettlementDue = null;

  @SerializedName("total_settlement_past_due")
  private String totalSettlementPastDue = null;

  @SerializedName("total_settlement_due_next")
  private String totalSettlementDueNext = null;

  @SerializedName("net_leverage")
  private String netLeverage = null;

  @SerializedName("base_margin_short")
  private CoinbaseFinancingAmount baseMarginShort = null;

  @SerializedName("base_margin_long")
  private CoinbaseFinancingAmount baseMarginLong = null;

  @SerializedName("base_margin_total")
  private CoinbaseFinancingAmount baseMarginTotal = null;

  @SerializedName("asset_long_short_positions")
  private List<CoinbaseFinancingAssetLongShortPosition> assetLongShortPositions = null;

  public CoinbaseFinancingMarginInformation entityId(String entityId) {
    this.entityId = entityId;
    return this;
  }

   /**
   * Get entityId
   * @return entityId
  **/
  @ApiModelProperty(value = "")
  public String getEntityId() {
    return entityId;
  }

  public void setEntityId(String entityId) {
    this.entityId = entityId;
  }

  public CoinbaseFinancingMarginInformation marginEquity(CoinbaseFinancingAmount marginEquity) {
    this.marginEquity = marginEquity;
    return this;
  }

   /**
   * Get marginEquity
   * @return marginEquity
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getMarginEquity() {
    return marginEquity;
  }

  public void setMarginEquity(CoinbaseFinancingAmount marginEquity) {
    this.marginEquity = marginEquity;
  }

  public CoinbaseFinancingMarginInformation marginRequirement(CoinbaseFinancingAmount marginRequirement) {
    this.marginRequirement = marginRequirement;
    return this;
  }

   /**
   * Get marginRequirement
   * @return marginRequirement
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getMarginRequirement() {
    return marginRequirement;
  }

  public void setMarginRequirement(CoinbaseFinancingAmount marginRequirement) {
    this.marginRequirement = marginRequirement;
  }

  public CoinbaseFinancingMarginInformation excessDeficit(CoinbaseFinancingAmount excessDeficit) {
    this.excessDeficit = excessDeficit;
    return this;
  }

   /**
   * Get excessDeficit
   * @return excessDeficit
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getExcessDeficit() {
    return excessDeficit;
  }

  public void setExcessDeficit(CoinbaseFinancingAmount excessDeficit) {
    this.excessDeficit = excessDeficit;
  }

  public CoinbaseFinancingMarginInformation pmCreditLimit(CoinbaseFinancingAmount pmCreditLimit) {
    this.pmCreditLimit = pmCreditLimit;
    return this;
  }

   /**
   * Get pmCreditLimit
   * @return pmCreditLimit
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getPmCreditLimit() {
    return pmCreditLimit;
  }

  public void setPmCreditLimit(CoinbaseFinancingAmount pmCreditLimit) {
    this.pmCreditLimit = pmCreditLimit;
  }

  public CoinbaseFinancingMarginInformation pmCreditConsumed(CoinbaseFinancingAmount pmCreditConsumed) {
    this.pmCreditConsumed = pmCreditConsumed;
    return this;
  }

   /**
   * Get pmCreditConsumed
   * @return pmCreditConsumed
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getPmCreditConsumed() {
    return pmCreditConsumed;
  }

  public void setPmCreditConsumed(CoinbaseFinancingAmount pmCreditConsumed) {
    this.pmCreditConsumed = pmCreditConsumed;
  }

  public CoinbaseFinancingMarginInformation tfCreditLimit(CoinbaseFinancingAmount tfCreditLimit) {
    this.tfCreditLimit = tfCreditLimit;
    return this;
  }

   /**
   * Get tfCreditLimit
   * @return tfCreditLimit
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfCreditLimit() {
    return tfCreditLimit;
  }

  public void setTfCreditLimit(CoinbaseFinancingAmount tfCreditLimit) {
    this.tfCreditLimit = tfCreditLimit;
  }

  public CoinbaseFinancingMarginInformation tfCreditConsumed(CoinbaseFinancingAmount tfCreditConsumed) {
    this.tfCreditConsumed = tfCreditConsumed;
    return this;
  }

   /**
   * Get tfCreditConsumed
   * @return tfCreditConsumed
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfCreditConsumed() {
    return tfCreditConsumed;
  }

  public void setTfCreditConsumed(CoinbaseFinancingAmount tfCreditConsumed) {
    this.tfCreditConsumed = tfCreditConsumed;
  }

  public CoinbaseFinancingMarginInformation tfAdjustedCreditConsumed(CoinbaseFinancingAmount tfAdjustedCreditConsumed) {
    this.tfAdjustedCreditConsumed = tfAdjustedCreditConsumed;
    return this;
  }

   /**
   * Get tfAdjustedCreditConsumed
   * @return tfAdjustedCreditConsumed
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfAdjustedCreditConsumed() {
    return tfAdjustedCreditConsumed;
  }

  public void setTfAdjustedCreditConsumed(CoinbaseFinancingAmount tfAdjustedCreditConsumed) {
    this.tfAdjustedCreditConsumed = tfAdjustedCreditConsumed;
  }

  public CoinbaseFinancingMarginInformation tfAdjustedEquity(CoinbaseFinancingAmount tfAdjustedEquity) {
    this.tfAdjustedEquity = tfAdjustedEquity;
    return this;
  }

   /**
   * Get tfAdjustedEquity
   * @return tfAdjustedEquity
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfAdjustedEquity() {
    return tfAdjustedEquity;
  }

  public void setTfAdjustedEquity(CoinbaseFinancingAmount tfAdjustedEquity) {
    this.tfAdjustedEquity = tfAdjustedEquity;
  }

  public CoinbaseFinancingMarginInformation tfAdjustedAssetValue(CoinbaseFinancingAmount tfAdjustedAssetValue) {
    this.tfAdjustedAssetValue = tfAdjustedAssetValue;
    return this;
  }

   /**
   * Get tfAdjustedAssetValue
   * @return tfAdjustedAssetValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfAdjustedAssetValue() {
    return tfAdjustedAssetValue;
  }

  public void setTfAdjustedAssetValue(CoinbaseFinancingAmount tfAdjustedAssetValue) {
    this.tfAdjustedAssetValue = tfAdjustedAssetValue;
  }

  public CoinbaseFinancingMarginInformation tfAdjustedLiabilityValue(CoinbaseFinancingAmount tfAdjustedLiabilityValue) {
    this.tfAdjustedLiabilityValue = tfAdjustedLiabilityValue;
    return this;
  }

   /**
   * Get tfAdjustedLiabilityValue
   * @return tfAdjustedLiabilityValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getTfAdjustedLiabilityValue() {
    return tfAdjustedLiabilityValue;
  }

  public void setTfAdjustedLiabilityValue(CoinbaseFinancingAmount tfAdjustedLiabilityValue) {
    this.tfAdjustedLiabilityValue = tfAdjustedLiabilityValue;
  }

  public CoinbaseFinancingMarginInformation frozen(Boolean frozen) {
    this.frozen = frozen;
    return this;
  }

   /**
   * Get frozen
   * @return frozen
  **/
  @ApiModelProperty(value = "")
  public Boolean isFrozen() {
    return frozen;
  }

  public void setFrozen(Boolean frozen) {
    this.frozen = frozen;
  }

  public CoinbaseFinancingMarginInformation frozenReason(String frozenReason) {
    this.frozenReason = frozenReason;
    return this;
  }

   /**
   * Get frozenReason
   * @return frozenReason
  **/
  @ApiModelProperty(value = "")
  public String getFrozenReason() {
    return frozenReason;
  }

  public void setFrozenReason(String frozenReason) {
    this.frozenReason = frozenReason;
  }

  public CoinbaseFinancingMarginInformation tfEnabled(Boolean tfEnabled) {
    this.tfEnabled = tfEnabled;
    return this;
  }

   /**
   * Get tfEnabled
   * @return tfEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isTfEnabled() {
    return tfEnabled;
  }

  public void setTfEnabled(Boolean tfEnabled) {
    this.tfEnabled = tfEnabled;
  }

  public CoinbaseFinancingMarginInformation pmEnabled(Boolean pmEnabled) {
    this.pmEnabled = pmEnabled;
    return this;
  }

   /**
   * Get pmEnabled
   * @return pmEnabled
  **/
  @ApiModelProperty(value = "")
  public Boolean isPmEnabled() {
    return pmEnabled;
  }

  public void setPmEnabled(Boolean pmEnabled) {
    this.pmEnabled = pmEnabled;
  }

  public CoinbaseFinancingMarginInformation amountsDue(List<CoinbaseFinancingSettlementDue> amountsDue) {
    this.amountsDue = amountsDue;
    return this;
  }

  public CoinbaseFinancingMarginInformation addAmountsDueItem(CoinbaseFinancingSettlementDue amountsDueItem) {
    if (this.amountsDue == null) {
      this.amountsDue = new ArrayList<CoinbaseFinancingSettlementDue>();
    }
    this.amountsDue.add(amountsDueItem);
    return this;
  }

   /**
   * Get amountsDue
   * @return amountsDue
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingSettlementDue> getAmountsDue() {
    return amountsDue;
  }

  public void setAmountsDue(List<CoinbaseFinancingSettlementDue> amountsDue) {
    this.amountsDue = amountsDue;
  }

  public CoinbaseFinancingMarginInformation marginCallRecords(List<CoinbaseFinancingMarginCallHistoryRecord> marginCallRecords) {
    this.marginCallRecords = marginCallRecords;
    return this;
  }

  public CoinbaseFinancingMarginInformation addMarginCallRecordsItem(CoinbaseFinancingMarginCallHistoryRecord marginCallRecordsItem) {
    if (this.marginCallRecords == null) {
      this.marginCallRecords = new ArrayList<CoinbaseFinancingMarginCallHistoryRecord>();
    }
    this.marginCallRecords.add(marginCallRecordsItem);
    return this;
  }

   /**
   * Get marginCallRecords
   * @return marginCallRecords
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingMarginCallHistoryRecord> getMarginCallRecords() {
    return marginCallRecords;
  }

  public void setMarginCallRecords(List<CoinbaseFinancingMarginCallHistoryRecord> marginCallRecords) {
    this.marginCallRecords = marginCallRecords;
  }

  public CoinbaseFinancingMarginInformation tfLoans(List<CoinbaseFinancingLoanInfo> tfLoans) {
    this.tfLoans = tfLoans;
    return this;
  }

  public CoinbaseFinancingMarginInformation addTfLoansItem(CoinbaseFinancingLoanInfo tfLoansItem) {
    if (this.tfLoans == null) {
      this.tfLoans = new ArrayList<CoinbaseFinancingLoanInfo>();
    }
    this.tfLoans.add(tfLoansItem);
    return this;
  }

   /**
   * Get tfLoans
   * @return tfLoans
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingLoanInfo> getTfLoans() {
    return tfLoans;
  }

  public void setTfLoans(List<CoinbaseFinancingLoanInfo> tfLoans) {
    this.tfLoans = tfLoans;
  }

  public CoinbaseFinancingMarginInformation pmLoans(List<CoinbaseFinancingLoanInfo> pmLoans) {
    this.pmLoans = pmLoans;
    return this;
  }

  public CoinbaseFinancingMarginInformation addPmLoansItem(CoinbaseFinancingLoanInfo pmLoansItem) {
    if (this.pmLoans == null) {
      this.pmLoans = new ArrayList<CoinbaseFinancingLoanInfo>();
    }
    this.pmLoans.add(pmLoansItem);
    return this;
  }

   /**
   * Get pmLoans
   * @return pmLoans
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingLoanInfo> getPmLoans() {
    return pmLoans;
  }

  public void setPmLoans(List<CoinbaseFinancingLoanInfo> pmLoans) {
    this.pmLoans = pmLoans;
  }

  public CoinbaseFinancingMarginInformation shortCollateral(List<CoinbaseFinancingLoanInfo> shortCollateral) {
    this.shortCollateral = shortCollateral;
    return this;
  }

  public CoinbaseFinancingMarginInformation addShortCollateralItem(CoinbaseFinancingLoanInfo shortCollateralItem) {
    if (this.shortCollateral == null) {
      this.shortCollateral = new ArrayList<CoinbaseFinancingLoanInfo>();
    }
    this.shortCollateral.add(shortCollateralItem);
    return this;
  }

   /**
   * Get shortCollateral
   * @return shortCollateral
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingLoanInfo> getShortCollateral() {
    return shortCollateral;
  }

  public void setShortCollateral(List<CoinbaseFinancingLoanInfo> shortCollateral) {
    this.shortCollateral = shortCollateral;
  }

  public CoinbaseFinancingMarginInformation assetBalances(List<CoinbaseFinancingPortfolioAsset> assetBalances) {
    this.assetBalances = assetBalances;
    return this;
  }

  public CoinbaseFinancingMarginInformation addAssetBalancesItem(CoinbaseFinancingPortfolioAsset assetBalancesItem) {
    if (this.assetBalances == null) {
      this.assetBalances = new ArrayList<CoinbaseFinancingPortfolioAsset>();
    }
    this.assetBalances.add(assetBalancesItem);
    return this;
  }

   /**
   * Get assetBalances
   * @return assetBalances
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingPortfolioAsset> getAssetBalances() {
    return assetBalances;
  }

  public void setAssetBalances(List<CoinbaseFinancingPortfolioAsset> assetBalances) {
    this.assetBalances = assetBalances;
  }

  public CoinbaseFinancingMarginInformation marketRates(List<CoinbaseFinancingMarketRate> marketRates) {
    this.marketRates = marketRates;
    return this;
  }

  public CoinbaseFinancingMarginInformation addMarketRatesItem(CoinbaseFinancingMarketRate marketRatesItem) {
    if (this.marketRates == null) {
      this.marketRates = new ArrayList<CoinbaseFinancingMarketRate>();
    }
    this.marketRates.add(marketRatesItem);
    return this;
  }

   /**
   * Get marketRates
   * @return marketRates
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingMarketRate> getMarketRates() {
    return marketRates;
  }

  public void setMarketRates(List<CoinbaseFinancingMarketRate> marketRates) {
    this.marketRates = marketRates;
  }

  public CoinbaseFinancingMarginInformation grossMarketValue(CoinbaseFinancingAmount grossMarketValue) {
    this.grossMarketValue = grossMarketValue;
    return this;
  }

   /**
   * Get grossMarketValue
   * @return grossMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getGrossMarketValue() {
    return grossMarketValue;
  }

  public void setGrossMarketValue(CoinbaseFinancingAmount grossMarketValue) {
    this.grossMarketValue = grossMarketValue;
  }

  public CoinbaseFinancingMarginInformation netMarketValue(CoinbaseFinancingAmount netMarketValue) {
    this.netMarketValue = netMarketValue;
    return this;
  }

   /**
   * Get netMarketValue
   * @return netMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getNetMarketValue() {
    return netMarketValue;
  }

  public void setNetMarketValue(CoinbaseFinancingAmount netMarketValue) {
    this.netMarketValue = netMarketValue;
  }

  public CoinbaseFinancingMarginInformation longMarketValue(CoinbaseFinancingAmount longMarketValue) {
    this.longMarketValue = longMarketValue;
    return this;
  }

   /**
   * Get longMarketValue
   * @return longMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getLongMarketValue() {
    return longMarketValue;
  }

  public void setLongMarketValue(CoinbaseFinancingAmount longMarketValue) {
    this.longMarketValue = longMarketValue;
  }

  public CoinbaseFinancingMarginInformation nonMarginableLongMarketValue(CoinbaseFinancingAmount nonMarginableLongMarketValue) {
    this.nonMarginableLongMarketValue = nonMarginableLongMarketValue;
    return this;
  }

   /**
   * Get nonMarginableLongMarketValue
   * @return nonMarginableLongMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getNonMarginableLongMarketValue() {
    return nonMarginableLongMarketValue;
  }

  public void setNonMarginableLongMarketValue(CoinbaseFinancingAmount nonMarginableLongMarketValue) {
    this.nonMarginableLongMarketValue = nonMarginableLongMarketValue;
  }

  public CoinbaseFinancingMarginInformation shortMarketValue(CoinbaseFinancingAmount shortMarketValue) {
    this.shortMarketValue = shortMarketValue;
    return this;
  }

   /**
   * Get shortMarketValue
   * @return shortMarketValue
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getShortMarketValue() {
    return shortMarketValue;
  }

  public void setShortMarketValue(CoinbaseFinancingAmount shortMarketValue) {
    this.shortMarketValue = shortMarketValue;
  }

  public CoinbaseFinancingMarginInformation grossLeverage(String grossLeverage) {
    this.grossLeverage = grossLeverage;
    return this;
  }

   /**
   * Get grossLeverage
   * @return grossLeverage
  **/
  @ApiModelProperty(value = "")
  public String getGrossLeverage() {
    return grossLeverage;
  }

  public void setGrossLeverage(String grossLeverage) {
    this.grossLeverage = grossLeverage;
  }

  public CoinbaseFinancingMarginInformation netExposure(String netExposure) {
    this.netExposure = netExposure;
    return this;
  }

   /**
   * Get netExposure
   * @return netExposure
  **/
  @ApiModelProperty(value = "")
  public String getNetExposure() {
    return netExposure;
  }

  public void setNetExposure(String netExposure) {
    this.netExposure = netExposure;
  }

  public CoinbaseFinancingMarginInformation portfolioStressTriggered(CoinbaseFinancingMarginAddOn portfolioStressTriggered) {
    this.portfolioStressTriggered = portfolioStressTriggered;
    return this;
  }

   /**
   * Get portfolioStressTriggered
   * @return portfolioStressTriggered
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingMarginAddOn getPortfolioStressTriggered() {
    return portfolioStressTriggered;
  }

  public void setPortfolioStressTriggered(CoinbaseFinancingMarginAddOn portfolioStressTriggered) {
    this.portfolioStressTriggered = portfolioStressTriggered;
  }

  public CoinbaseFinancingMarginInformation allMarginAddOns(List<CoinbaseFinancingMarginAddOn> allMarginAddOns) {
    this.allMarginAddOns = allMarginAddOns;
    return this;
  }

  public CoinbaseFinancingMarginInformation addAllMarginAddOnsItem(CoinbaseFinancingMarginAddOn allMarginAddOnsItem) {
    if (this.allMarginAddOns == null) {
      this.allMarginAddOns = new ArrayList<CoinbaseFinancingMarginAddOn>();
    }
    this.allMarginAddOns.add(allMarginAddOnsItem);
    return this;
  }

   /**
   * Get allMarginAddOns
   * @return allMarginAddOns
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingMarginAddOn> getAllMarginAddOns() {
    return allMarginAddOns;
  }

  public void setAllMarginAddOns(List<CoinbaseFinancingMarginAddOn> allMarginAddOns) {
    this.allMarginAddOns = allMarginAddOns;
  }

  public CoinbaseFinancingMarginInformation pmAssetInfo(List<CoinbaseFinancingPMAssetInfo> pmAssetInfo) {
    this.pmAssetInfo = pmAssetInfo;
    return this;
  }

  public CoinbaseFinancingMarginInformation addPmAssetInfoItem(CoinbaseFinancingPMAssetInfo pmAssetInfoItem) {
    if (this.pmAssetInfo == null) {
      this.pmAssetInfo = new ArrayList<CoinbaseFinancingPMAssetInfo>();
    }
    this.pmAssetInfo.add(pmAssetInfoItem);
    return this;
  }

   /**
   * Get pmAssetInfo
   * @return pmAssetInfo
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingPMAssetInfo> getPmAssetInfo() {
    return pmAssetInfo;
  }

  public void setPmAssetInfo(List<CoinbaseFinancingPMAssetInfo> pmAssetInfo) {
    this.pmAssetInfo = pmAssetInfo;
  }

  public CoinbaseFinancingMarginInformation tfAssetInfo(List<CoinbaseFinancingTFAssetInfo> tfAssetInfo) {
    this.tfAssetInfo = tfAssetInfo;
    return this;
  }

  public CoinbaseFinancingMarginInformation addTfAssetInfoItem(CoinbaseFinancingTFAssetInfo tfAssetInfoItem) {
    if (this.tfAssetInfo == null) {
      this.tfAssetInfo = new ArrayList<CoinbaseFinancingTFAssetInfo>();
    }
    this.tfAssetInfo.add(tfAssetInfoItem);
    return this;
  }

   /**
   * Get tfAssetInfo
   * @return tfAssetInfo
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingTFAssetInfo> getTfAssetInfo() {
    return tfAssetInfo;
  }

  public void setTfAssetInfo(List<CoinbaseFinancingTFAssetInfo> tfAssetInfo) {
    this.tfAssetInfo = tfAssetInfo;
  }

  public CoinbaseFinancingMarginInformation equityPercentage(String equityPercentage) {
    this.equityPercentage = equityPercentage;
    return this;
  }

   /**
   * Get equityPercentage
   * @return equityPercentage
  **/
  @ApiModelProperty(value = "")
  public String getEquityPercentage() {
    return equityPercentage;
  }

  public void setEquityPercentage(String equityPercentage) {
    this.equityPercentage = equityPercentage;
  }

  public CoinbaseFinancingMarginInformation shortCollateralBalance(String shortCollateralBalance) {
    this.shortCollateralBalance = shortCollateralBalance;
    return this;
  }

   /**
   * Get shortCollateralBalance
   * @return shortCollateralBalance
  **/
  @ApiModelProperty(value = "")
  public String getShortCollateralBalance() {
    return shortCollateralBalance;
  }

  public void setShortCollateralBalance(String shortCollateralBalance) {
    this.shortCollateralBalance = shortCollateralBalance;
  }

  public CoinbaseFinancingMarginInformation cashValue(String cashValue) {
    this.cashValue = cashValue;
    return this;
  }

   /**
   * Get cashValue
   * @return cashValue
  **/
  @ApiModelProperty(value = "")
  public String getCashValue() {
    return cashValue;
  }

  public void setCashValue(String cashValue) {
    this.cashValue = cashValue;
  }

  public CoinbaseFinancingMarginInformation totalSettlementDue(String totalSettlementDue) {
    this.totalSettlementDue = totalSettlementDue;
    return this;
  }

   /**
   * Get totalSettlementDue
   * @return totalSettlementDue
  **/
  @ApiModelProperty(value = "")
  public String getTotalSettlementDue() {
    return totalSettlementDue;
  }

  public void setTotalSettlementDue(String totalSettlementDue) {
    this.totalSettlementDue = totalSettlementDue;
  }

  public CoinbaseFinancingMarginInformation totalSettlementPastDue(String totalSettlementPastDue) {
    this.totalSettlementPastDue = totalSettlementPastDue;
    return this;
  }

   /**
   * Get totalSettlementPastDue
   * @return totalSettlementPastDue
  **/
  @ApiModelProperty(value = "")
  public String getTotalSettlementPastDue() {
    return totalSettlementPastDue;
  }

  public void setTotalSettlementPastDue(String totalSettlementPastDue) {
    this.totalSettlementPastDue = totalSettlementPastDue;
  }

  public CoinbaseFinancingMarginInformation totalSettlementDueNext(String totalSettlementDueNext) {
    this.totalSettlementDueNext = totalSettlementDueNext;
    return this;
  }

   /**
   * Get totalSettlementDueNext
   * @return totalSettlementDueNext
  **/
  @ApiModelProperty(value = "")
  public String getTotalSettlementDueNext() {
    return totalSettlementDueNext;
  }

  public void setTotalSettlementDueNext(String totalSettlementDueNext) {
    this.totalSettlementDueNext = totalSettlementDueNext;
  }

  public CoinbaseFinancingMarginInformation netLeverage(String netLeverage) {
    this.netLeverage = netLeverage;
    return this;
  }

   /**
   * Get netLeverage
   * @return netLeverage
  **/
  @ApiModelProperty(value = "")
  public String getNetLeverage() {
    return netLeverage;
  }

  public void setNetLeverage(String netLeverage) {
    this.netLeverage = netLeverage;
  }

  public CoinbaseFinancingMarginInformation baseMarginShort(CoinbaseFinancingAmount baseMarginShort) {
    this.baseMarginShort = baseMarginShort;
    return this;
  }

   /**
   * Get baseMarginShort
   * @return baseMarginShort
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getBaseMarginShort() {
    return baseMarginShort;
  }

  public void setBaseMarginShort(CoinbaseFinancingAmount baseMarginShort) {
    this.baseMarginShort = baseMarginShort;
  }

  public CoinbaseFinancingMarginInformation baseMarginLong(CoinbaseFinancingAmount baseMarginLong) {
    this.baseMarginLong = baseMarginLong;
    return this;
  }

   /**
   * Get baseMarginLong
   * @return baseMarginLong
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getBaseMarginLong() {
    return baseMarginLong;
  }

  public void setBaseMarginLong(CoinbaseFinancingAmount baseMarginLong) {
    this.baseMarginLong = baseMarginLong;
  }

  public CoinbaseFinancingMarginInformation baseMarginTotal(CoinbaseFinancingAmount baseMarginTotal) {
    this.baseMarginTotal = baseMarginTotal;
    return this;
  }

   /**
   * Get baseMarginTotal
   * @return baseMarginTotal
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingAmount getBaseMarginTotal() {
    return baseMarginTotal;
  }

  public void setBaseMarginTotal(CoinbaseFinancingAmount baseMarginTotal) {
    this.baseMarginTotal = baseMarginTotal;
  }

  public CoinbaseFinancingMarginInformation assetLongShortPositions(List<CoinbaseFinancingAssetLongShortPosition> assetLongShortPositions) {
    this.assetLongShortPositions = assetLongShortPositions;
    return this;
  }

  public CoinbaseFinancingMarginInformation addAssetLongShortPositionsItem(CoinbaseFinancingAssetLongShortPosition assetLongShortPositionsItem) {
    if (this.assetLongShortPositions == null) {
      this.assetLongShortPositions = new ArrayList<CoinbaseFinancingAssetLongShortPosition>();
    }
    this.assetLongShortPositions.add(assetLongShortPositionsItem);
    return this;
  }

   /**
   * Get assetLongShortPositions
   * @return assetLongShortPositions
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseFinancingAssetLongShortPosition> getAssetLongShortPositions() {
    return assetLongShortPositions;
  }

  public void setAssetLongShortPositions(List<CoinbaseFinancingAssetLongShortPosition> assetLongShortPositions) {
    this.assetLongShortPositions = assetLongShortPositions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingMarginInformation coinbaseFinancingMarginInformation = (CoinbaseFinancingMarginInformation) o;
    return Objects.equals(this.entityId, coinbaseFinancingMarginInformation.entityId) &&
        Objects.equals(this.marginEquity, coinbaseFinancingMarginInformation.marginEquity) &&
        Objects.equals(this.marginRequirement, coinbaseFinancingMarginInformation.marginRequirement) &&
        Objects.equals(this.excessDeficit, coinbaseFinancingMarginInformation.excessDeficit) &&
        Objects.equals(this.pmCreditLimit, coinbaseFinancingMarginInformation.pmCreditLimit) &&
        Objects.equals(this.pmCreditConsumed, coinbaseFinancingMarginInformation.pmCreditConsumed) &&
        Objects.equals(this.tfCreditLimit, coinbaseFinancingMarginInformation.tfCreditLimit) &&
        Objects.equals(this.tfCreditConsumed, coinbaseFinancingMarginInformation.tfCreditConsumed) &&
        Objects.equals(this.tfAdjustedCreditConsumed, coinbaseFinancingMarginInformation.tfAdjustedCreditConsumed) &&
        Objects.equals(this.tfAdjustedEquity, coinbaseFinancingMarginInformation.tfAdjustedEquity) &&
        Objects.equals(this.tfAdjustedAssetValue, coinbaseFinancingMarginInformation.tfAdjustedAssetValue) &&
        Objects.equals(this.tfAdjustedLiabilityValue, coinbaseFinancingMarginInformation.tfAdjustedLiabilityValue) &&
        Objects.equals(this.frozen, coinbaseFinancingMarginInformation.frozen) &&
        Objects.equals(this.frozenReason, coinbaseFinancingMarginInformation.frozenReason) &&
        Objects.equals(this.tfEnabled, coinbaseFinancingMarginInformation.tfEnabled) &&
        Objects.equals(this.pmEnabled, coinbaseFinancingMarginInformation.pmEnabled) &&
        Objects.equals(this.amountsDue, coinbaseFinancingMarginInformation.amountsDue) &&
        Objects.equals(this.marginCallRecords, coinbaseFinancingMarginInformation.marginCallRecords) &&
        Objects.equals(this.tfLoans, coinbaseFinancingMarginInformation.tfLoans) &&
        Objects.equals(this.pmLoans, coinbaseFinancingMarginInformation.pmLoans) &&
        Objects.equals(this.shortCollateral, coinbaseFinancingMarginInformation.shortCollateral) &&
        Objects.equals(this.assetBalances, coinbaseFinancingMarginInformation.assetBalances) &&
        Objects.equals(this.marketRates, coinbaseFinancingMarginInformation.marketRates) &&
        Objects.equals(this.grossMarketValue, coinbaseFinancingMarginInformation.grossMarketValue) &&
        Objects.equals(this.netMarketValue, coinbaseFinancingMarginInformation.netMarketValue) &&
        Objects.equals(this.longMarketValue, coinbaseFinancingMarginInformation.longMarketValue) &&
        Objects.equals(this.nonMarginableLongMarketValue, coinbaseFinancingMarginInformation.nonMarginableLongMarketValue) &&
        Objects.equals(this.shortMarketValue, coinbaseFinancingMarginInformation.shortMarketValue) &&
        Objects.equals(this.grossLeverage, coinbaseFinancingMarginInformation.grossLeverage) &&
        Objects.equals(this.netExposure, coinbaseFinancingMarginInformation.netExposure) &&
        Objects.equals(this.portfolioStressTriggered, coinbaseFinancingMarginInformation.portfolioStressTriggered) &&
        Objects.equals(this.allMarginAddOns, coinbaseFinancingMarginInformation.allMarginAddOns) &&
        Objects.equals(this.pmAssetInfo, coinbaseFinancingMarginInformation.pmAssetInfo) &&
        Objects.equals(this.tfAssetInfo, coinbaseFinancingMarginInformation.tfAssetInfo) &&
        Objects.equals(this.equityPercentage, coinbaseFinancingMarginInformation.equityPercentage) &&
        Objects.equals(this.shortCollateralBalance, coinbaseFinancingMarginInformation.shortCollateralBalance) &&
        Objects.equals(this.cashValue, coinbaseFinancingMarginInformation.cashValue) &&
        Objects.equals(this.totalSettlementDue, coinbaseFinancingMarginInformation.totalSettlementDue) &&
        Objects.equals(this.totalSettlementPastDue, coinbaseFinancingMarginInformation.totalSettlementPastDue) &&
        Objects.equals(this.totalSettlementDueNext, coinbaseFinancingMarginInformation.totalSettlementDueNext) &&
        Objects.equals(this.netLeverage, coinbaseFinancingMarginInformation.netLeverage) &&
        Objects.equals(this.baseMarginShort, coinbaseFinancingMarginInformation.baseMarginShort) &&
        Objects.equals(this.baseMarginLong, coinbaseFinancingMarginInformation.baseMarginLong) &&
        Objects.equals(this.baseMarginTotal, coinbaseFinancingMarginInformation.baseMarginTotal) &&
        Objects.equals(this.assetLongShortPositions, coinbaseFinancingMarginInformation.assetLongShortPositions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(entityId, marginEquity, marginRequirement, excessDeficit, pmCreditLimit, pmCreditConsumed, tfCreditLimit, tfCreditConsumed, tfAdjustedCreditConsumed, tfAdjustedEquity, tfAdjustedAssetValue, tfAdjustedLiabilityValue, frozen, frozenReason, tfEnabled, pmEnabled, amountsDue, marginCallRecords, tfLoans, pmLoans, shortCollateral, assetBalances, marketRates, grossMarketValue, netMarketValue, longMarketValue, nonMarginableLongMarketValue, shortMarketValue, grossLeverage, netExposure, portfolioStressTriggered, allMarginAddOns, pmAssetInfo, tfAssetInfo, equityPercentage, shortCollateralBalance, cashValue, totalSettlementDue, totalSettlementPastDue, totalSettlementDueNext, netLeverage, baseMarginShort, baseMarginLong, baseMarginTotal, assetLongShortPositions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingMarginInformation {\n");
    
    sb.append("    entityId: ").append(toIndentedString(entityId)).append("\n");
    sb.append("    marginEquity: ").append(toIndentedString(marginEquity)).append("\n");
    sb.append("    marginRequirement: ").append(toIndentedString(marginRequirement)).append("\n");
    sb.append("    excessDeficit: ").append(toIndentedString(excessDeficit)).append("\n");
    sb.append("    pmCreditLimit: ").append(toIndentedString(pmCreditLimit)).append("\n");
    sb.append("    pmCreditConsumed: ").append(toIndentedString(pmCreditConsumed)).append("\n");
    sb.append("    tfCreditLimit: ").append(toIndentedString(tfCreditLimit)).append("\n");
    sb.append("    tfCreditConsumed: ").append(toIndentedString(tfCreditConsumed)).append("\n");
    sb.append("    tfAdjustedCreditConsumed: ").append(toIndentedString(tfAdjustedCreditConsumed)).append("\n");
    sb.append("    tfAdjustedEquity: ").append(toIndentedString(tfAdjustedEquity)).append("\n");
    sb.append("    tfAdjustedAssetValue: ").append(toIndentedString(tfAdjustedAssetValue)).append("\n");
    sb.append("    tfAdjustedLiabilityValue: ").append(toIndentedString(tfAdjustedLiabilityValue)).append("\n");
    sb.append("    frozen: ").append(toIndentedString(frozen)).append("\n");
    sb.append("    frozenReason: ").append(toIndentedString(frozenReason)).append("\n");
    sb.append("    tfEnabled: ").append(toIndentedString(tfEnabled)).append("\n");
    sb.append("    pmEnabled: ").append(toIndentedString(pmEnabled)).append("\n");
    sb.append("    amountsDue: ").append(toIndentedString(amountsDue)).append("\n");
    sb.append("    marginCallRecords: ").append(toIndentedString(marginCallRecords)).append("\n");
    sb.append("    tfLoans: ").append(toIndentedString(tfLoans)).append("\n");
    sb.append("    pmLoans: ").append(toIndentedString(pmLoans)).append("\n");
    sb.append("    shortCollateral: ").append(toIndentedString(shortCollateral)).append("\n");
    sb.append("    assetBalances: ").append(toIndentedString(assetBalances)).append("\n");
    sb.append("    marketRates: ").append(toIndentedString(marketRates)).append("\n");
    sb.append("    grossMarketValue: ").append(toIndentedString(grossMarketValue)).append("\n");
    sb.append("    netMarketValue: ").append(toIndentedString(netMarketValue)).append("\n");
    sb.append("    longMarketValue: ").append(toIndentedString(longMarketValue)).append("\n");
    sb.append("    nonMarginableLongMarketValue: ").append(toIndentedString(nonMarginableLongMarketValue)).append("\n");
    sb.append("    shortMarketValue: ").append(toIndentedString(shortMarketValue)).append("\n");
    sb.append("    grossLeverage: ").append(toIndentedString(grossLeverage)).append("\n");
    sb.append("    netExposure: ").append(toIndentedString(netExposure)).append("\n");
    sb.append("    portfolioStressTriggered: ").append(toIndentedString(portfolioStressTriggered)).append("\n");
    sb.append("    allMarginAddOns: ").append(toIndentedString(allMarginAddOns)).append("\n");
    sb.append("    pmAssetInfo: ").append(toIndentedString(pmAssetInfo)).append("\n");
    sb.append("    tfAssetInfo: ").append(toIndentedString(tfAssetInfo)).append("\n");
    sb.append("    equityPercentage: ").append(toIndentedString(equityPercentage)).append("\n");
    sb.append("    shortCollateralBalance: ").append(toIndentedString(shortCollateralBalance)).append("\n");
    sb.append("    cashValue: ").append(toIndentedString(cashValue)).append("\n");
    sb.append("    totalSettlementDue: ").append(toIndentedString(totalSettlementDue)).append("\n");
    sb.append("    totalSettlementPastDue: ").append(toIndentedString(totalSettlementPastDue)).append("\n");
    sb.append("    totalSettlementDueNext: ").append(toIndentedString(totalSettlementDueNext)).append("\n");
    sb.append("    netLeverage: ").append(toIndentedString(netLeverage)).append("\n");
    sb.append("    baseMarginShort: ").append(toIndentedString(baseMarginShort)).append("\n");
    sb.append("    baseMarginLong: ").append(toIndentedString(baseMarginLong)).append("\n");
    sb.append("    baseMarginTotal: ").append(toIndentedString(baseMarginTotal)).append("\n");
    sb.append("    assetLongShortPositions: ").append(toIndentedString(assetLongShortPositions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

