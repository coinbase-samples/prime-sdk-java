/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseTwsDappContext;
import io.swagger.client.model.CoinbaseTwsNetworkMetadata;
import java.io.IOException;

/**
 * Message in Web3 Dapp. In contrast to transaction, a signed message payload is returned to DApp (and isn’t broadcasted).
 */
@ApiModel(description = "Message in Web3 Dapp. In contrast to transaction, a signed message payload is returned to DApp (and isn’t broadcasted).")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsWeb3MessageAction {
  @SerializedName("message")
  private String message = null;

  @SerializedName("network_metadata")
  private CoinbaseTwsNetworkMetadata networkMetadata = null;

  @SerializedName("dapp_context")
  private CoinbaseTwsDappContext dappContext = null;

  @SerializedName("original_message")
  private String originalMessage = null;

  @SerializedName("prefix")
  private String prefix = null;

  public CoinbaseTwsWeb3MessageAction message(String message) {
    this.message = message;
    return this;
  }

   /**
   * Unsigned message string
   * @return message
  **/
  @ApiModelProperty(value = "Unsigned message string")
  public String getMessage() {
    return message;
  }

  public void setMessage(String message) {
    this.message = message;
  }

  public CoinbaseTwsWeb3MessageAction networkMetadata(CoinbaseTwsNetworkMetadata networkMetadata) {
    this.networkMetadata = networkMetadata;
    return this;
  }

   /**
   * Network information for web3 transaction
   * @return networkMetadata
  **/
  @ApiModelProperty(value = "Network information for web3 transaction")
  public CoinbaseTwsNetworkMetadata getNetworkMetadata() {
    return networkMetadata;
  }

  public void setNetworkMetadata(CoinbaseTwsNetworkMetadata networkMetadata) {
    this.networkMetadata = networkMetadata;
  }

  public CoinbaseTwsWeb3MessageAction dappContext(CoinbaseTwsDappContext dappContext) {
    this.dappContext = dappContext;
    return this;
  }

   /**
   * Dapp information for web3 transaction
   * @return dappContext
  **/
  @ApiModelProperty(value = "Dapp information for web3 transaction")
  public CoinbaseTwsDappContext getDappContext() {
    return dappContext;
  }

  public void setDappContext(CoinbaseTwsDappContext dappContext) {
    this.dappContext = dappContext;
  }

  public CoinbaseTwsWeb3MessageAction originalMessage(String originalMessage) {
    this.originalMessage = originalMessage;
    return this;
  }

   /**
   * Original message string
   * @return originalMessage
  **/
  @ApiModelProperty(value = "Original message string")
  public String getOriginalMessage() {
    return originalMessage;
  }

  public void setOriginalMessage(String originalMessage) {
    this.originalMessage = originalMessage;
  }

  public CoinbaseTwsWeb3MessageAction prefix(String prefix) {
    this.prefix = prefix;
    return this;
  }

   /**
   * prefix string
   * @return prefix
  **/
  @ApiModelProperty(value = "prefix string")
  public String getPrefix() {
    return prefix;
  }

  public void setPrefix(String prefix) {
    this.prefix = prefix;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsWeb3MessageAction coinbaseTwsWeb3MessageAction = (CoinbaseTwsWeb3MessageAction) o;
    return Objects.equals(this.message, coinbaseTwsWeb3MessageAction.message) &&
        Objects.equals(this.networkMetadata, coinbaseTwsWeb3MessageAction.networkMetadata) &&
        Objects.equals(this.dappContext, coinbaseTwsWeb3MessageAction.dappContext) &&
        Objects.equals(this.originalMessage, coinbaseTwsWeb3MessageAction.originalMessage) &&
        Objects.equals(this.prefix, coinbaseTwsWeb3MessageAction.prefix);
  }

  @Override
  public int hashCode() {
    return Objects.hash(message, networkMetadata, dappContext, originalMessage, prefix);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsWeb3MessageAction {\n");
    
    sb.append("    message: ").append(toIndentedString(message)).append("\n");
    sb.append("    networkMetadata: ").append(toIndentedString(networkMetadata)).append("\n");
    sb.append("    dappContext: ").append(toIndentedString(dappContext)).append("\n");
    sb.append("    originalMessage: ").append(toIndentedString(originalMessage)).append("\n");
    sb.append("    prefix: ").append(toIndentedString(prefix)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

