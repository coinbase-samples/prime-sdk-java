/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets coinbase.custody.api.WalletType
 */
@JsonAdapter(CoinbaseCustodyApiWalletType.Adapter.class)
public enum CoinbaseCustodyApiWalletType {
  
  WALLET_TYPE_UNKNOWN("WALLET_TYPE_UNKNOWN"),
  
  STANDARD("STANDARD"),
  
  STAKING("STAKING"),
  
  VOTING("VOTING"),
  
  SECONDARY("SECONDARY"),
  
  SIGNALLING("SIGNALLING"),
  
  TRADABLE("TRADABLE"),
  
  CONTRACT("CONTRACT"),
  
  PRIME_OMNIBUS_QC("PRIME_OMNIBUS_QC");

  private String value;

  CoinbaseCustodyApiWalletType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbaseCustodyApiWalletType fromValue(String text) {
    for (CoinbaseCustodyApiWalletType b : CoinbaseCustodyApiWalletType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbaseCustodyApiWalletType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbaseCustodyApiWalletType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbaseCustodyApiWalletType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbaseCustodyApiWalletType.fromValue(String.valueOf(value));
    }
  }
}

