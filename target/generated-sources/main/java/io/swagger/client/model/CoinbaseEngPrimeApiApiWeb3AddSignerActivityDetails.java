/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiGetUserInformationResponse;
import io.swagger.client.model.CoinbaseCustodyApiRole;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails {
  @SerializedName("portfolio_name")
  private String portfolioName = null;

  @SerializedName("roles")
  private List<CoinbaseCustodyApiRole> roles = new ArrayList<CoinbaseCustodyApiRole>();

  @SerializedName("user_info")
  private CoinbaseCustodyApiGetUserInformationResponse userInfo = null;

  @SerializedName("reference_activity_id")
  private String referenceActivityId = null;

  @SerializedName("mpc_operation_name")
  private String mpcOperationName = null;

  public CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails portfolioName(String portfolioName) {
    this.portfolioName = portfolioName;
    return this;
  }

   /**
   * Get portfolioName
   * @return portfolioName
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPortfolioName() {
    return portfolioName;
  }

  public void setPortfolioName(String portfolioName) {
    this.portfolioName = portfolioName;
  }

  public CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails roles(List<CoinbaseCustodyApiRole> roles) {
    this.roles = roles;
    return this;
  }

  public CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails addRolesItem(CoinbaseCustodyApiRole rolesItem) {
    this.roles.add(rolesItem);
    return this;
  }

   /**
   * Get roles
   * @return roles
  **/
  @ApiModelProperty(required = true, value = "")
  public List<CoinbaseCustodyApiRole> getRoles() {
    return roles;
  }

  public void setRoles(List<CoinbaseCustodyApiRole> roles) {
    this.roles = roles;
  }

  public CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails userInfo(CoinbaseCustodyApiGetUserInformationResponse userInfo) {
    this.userInfo = userInfo;
    return this;
  }

   /**
   * Get userInfo
   * @return userInfo
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiGetUserInformationResponse getUserInfo() {
    return userInfo;
  }

  public void setUserInfo(CoinbaseCustodyApiGetUserInformationResponse userInfo) {
    this.userInfo = userInfo;
  }

  public CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails referenceActivityId(String referenceActivityId) {
    this.referenceActivityId = referenceActivityId;
    return this;
  }

   /**
   * Get referenceActivityId
   * @return referenceActivityId
  **/
  @ApiModelProperty(value = "")
  public String getReferenceActivityId() {
    return referenceActivityId;
  }

  public void setReferenceActivityId(String referenceActivityId) {
    this.referenceActivityId = referenceActivityId;
  }

  public CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails mpcOperationName(String mpcOperationName) {
    this.mpcOperationName = mpcOperationName;
    return this;
  }

   /**
   * Get mpcOperationName
   * @return mpcOperationName
  **/
  @ApiModelProperty(value = "")
  public String getMpcOperationName() {
    return mpcOperationName;
  }

  public void setMpcOperationName(String mpcOperationName) {
    this.mpcOperationName = mpcOperationName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails coinbaseEngPrimeApiApiWeb3AddSignerActivityDetails = (CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails) o;
    return Objects.equals(this.portfolioName, coinbaseEngPrimeApiApiWeb3AddSignerActivityDetails.portfolioName) &&
        Objects.equals(this.roles, coinbaseEngPrimeApiApiWeb3AddSignerActivityDetails.roles) &&
        Objects.equals(this.userInfo, coinbaseEngPrimeApiApiWeb3AddSignerActivityDetails.userInfo) &&
        Objects.equals(this.referenceActivityId, coinbaseEngPrimeApiApiWeb3AddSignerActivityDetails.referenceActivityId) &&
        Objects.equals(this.mpcOperationName, coinbaseEngPrimeApiApiWeb3AddSignerActivityDetails.mpcOperationName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(portfolioName, roles, userInfo, referenceActivityId, mpcOperationName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiWeb3AddSignerActivityDetails {\n");
    
    sb.append("    portfolioName: ").append(toIndentedString(portfolioName)).append("\n");
    sb.append("    roles: ").append(toIndentedString(roles)).append("\n");
    sb.append("    userInfo: ").append(toIndentedString(userInfo)).append("\n");
    sb.append("    referenceActivityId: ").append(toIndentedString(referenceActivityId)).append("\n");
    sb.append("    mpcOperationName: ").append(toIndentedString(mpcOperationName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

