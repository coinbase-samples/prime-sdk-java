/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiOrganizationDomicileCategory;
import io.swagger.client.model.CoinbaseRewardsOrchestrationEnrollment;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse {
  @SerializedName("enrollment")
  private CoinbaseRewardsOrchestrationEnrollment enrollment = null;

  @SerializedName("domicile_category")
  private CoinbaseEngPrimeApiApiOrganizationDomicileCategory domicileCategory = null;

  @SerializedName("actual_rate")
  private Double actualRate = null;

  public CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse enrollment(CoinbaseRewardsOrchestrationEnrollment enrollment) {
    this.enrollment = enrollment;
    return this;
  }

   /**
   * Get enrollment
   * @return enrollment
  **/
  @ApiModelProperty(value = "")
  public CoinbaseRewardsOrchestrationEnrollment getEnrollment() {
    return enrollment;
  }

  public void setEnrollment(CoinbaseRewardsOrchestrationEnrollment enrollment) {
    this.enrollment = enrollment;
  }

  public CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse domicileCategory(CoinbaseEngPrimeApiApiOrganizationDomicileCategory domicileCategory) {
    this.domicileCategory = domicileCategory;
    return this;
  }

   /**
   * Get domicileCategory
   * @return domicileCategory
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeApiApiOrganizationDomicileCategory getDomicileCategory() {
    return domicileCategory;
  }

  public void setDomicileCategory(CoinbaseEngPrimeApiApiOrganizationDomicileCategory domicileCategory) {
    this.domicileCategory = domicileCategory;
  }

  public CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse actualRate(Double actualRate) {
    this.actualRate = actualRate;
    return this;
  }

   /**
   * Get actualRate
   * @return actualRate
  **/
  @ApiModelProperty(value = "")
  public Double getActualRate() {
    return actualRate;
  }

  public void setActualRate(Double actualRate) {
    this.actualRate = actualRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse coinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse = (CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse) o;
    return Objects.equals(this.enrollment, coinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse.enrollment) &&
        Objects.equals(this.domicileCategory, coinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse.domicileCategory) &&
        Objects.equals(this.actualRate, coinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse.actualRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(enrollment, domicileCategory, actualRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiGetStablecoinRewardsEnrollmentResponse {\n");
    
    sb.append("    enrollment: ").append(toIndentedString(enrollment)).append("\n");
    sb.append("    domicileCategory: ").append(toIndentedString(domicileCategory)).append("\n");
    sb.append("    actualRate: ").append(toIndentedString(actualRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

