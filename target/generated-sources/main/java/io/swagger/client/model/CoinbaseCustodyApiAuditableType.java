/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets coinbase.custody.api.AuditableType
 */
@JsonAdapter(CoinbaseCustodyApiAuditableType.Adapter.class)
public enum CoinbaseCustodyApiAuditableType {
  
  UNKNOWN("AUDITABLE_TYPE_UNKNOWN"),
  
  SETTINGS_CHANGE("AUDITABLE_TYPE_SETTINGS_CHANGE"),
  
  WITHDRAWAL_ADDRESS_CHANGE("AUDITABLE_TYPE_WITHDRAWAL_ADDRESS_CHANGE"),
  
  API_KEY_CHANGE("AUDITABLE_TYPE_API_KEY_CHANGE"),
  
  BILLING_PREFERENCE_CHANGE("AUDITABLE_TYPE_BILLING_PREFERENCE_CHANGE"),
  
  GOVERNANCE_VOTE("AUDITABLE_TYPE_GOVERNANCE_VOTE"),
  
  INVITATION("AUDITABLE_TYPE_INVITATION"),
  
  USER_CHANGE("AUDITABLE_TYPE_USER_CHANGE"),
  
  TRANSACTION("AUDITABLE_TYPE_TRANSACTION"),
  
  WALLET_CHANGE("AUDITABLE_TYPE_WALLET_CHANGE"),
  
  SMART_CONTRACT_RELEASE("AUDITABLE_TYPE_SMART_CONTRACT_RELEASE"),
  
  ADMIN_CHANGE_REQUEST("AUDITABLE_TYPE_ADMIN_CHANGE_REQUEST"),
  
  BILLING_ADDRESS_CHANGE("AUDITABLE_TYPE_BILLING_ADDRESS_CHANGE"),
  
  DOCUMENT_SIGNATURE("AUDITABLE_TYPE_DOCUMENT_SIGNATURE"),
  
  EMAIL_LIST_CHANGE("AUDITABLE_TYPE_EMAIL_LIST_CHANGE"),
  
  TRANSFER("AUDITABLE_TYPE_TRANSFER"),
  
  REDO_PLAN("AUDITABLE_TYPE_REDO_PLAN"),
  
  PAYMENT_METHOD_CHANGE("AUDITABLE_TYPE_PAYMENT_METHOD_CHANGE"),
  
  USER_CHANGE_REQUEST("AUDITABLE_TYPE_USER_CHANGE_REQUEST");

  private String value;

  CoinbaseCustodyApiAuditableType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbaseCustodyApiAuditableType fromValue(String text) {
    for (CoinbaseCustodyApiAuditableType b : CoinbaseCustodyApiAuditableType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbaseCustodyApiAuditableType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbaseCustodyApiAuditableType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbaseCustodyApiAuditableType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbaseCustodyApiAuditableType.fromValue(String.valueOf(value));
    }
  }
}

