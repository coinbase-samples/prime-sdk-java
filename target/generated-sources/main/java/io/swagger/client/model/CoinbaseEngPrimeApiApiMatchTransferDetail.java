/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseEngPrimeApiApiMatchTransferDetail
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiMatchTransferDetail {
  @SerializedName("source_ctn_id")
  private String sourceCtnId = null;

  @SerializedName("destination_ctn_id")
  private String destinationCtnId = null;

  @SerializedName("amount")
  private String amount = null;

  @SerializedName("currency")
  private String currency = null;

  @SerializedName("notional_usd_amount")
  private String notionalUsdAmount = null;

  @SerializedName("source_wallet_name")
  private String sourceWalletName = null;

  @SerializedName("destination_wallet_name")
  private String destinationWalletName = null;

  @SerializedName("human_id")
  private String humanId = null;

  public CoinbaseEngPrimeApiApiMatchTransferDetail sourceCtnId(String sourceCtnId) {
    this.sourceCtnId = sourceCtnId;
    return this;
  }

   /**
   * Get sourceCtnId
   * @return sourceCtnId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSourceCtnId() {
    return sourceCtnId;
  }

  public void setSourceCtnId(String sourceCtnId) {
    this.sourceCtnId = sourceCtnId;
  }

  public CoinbaseEngPrimeApiApiMatchTransferDetail destinationCtnId(String destinationCtnId) {
    this.destinationCtnId = destinationCtnId;
    return this;
  }

   /**
   * Get destinationCtnId
   * @return destinationCtnId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDestinationCtnId() {
    return destinationCtnId;
  }

  public void setDestinationCtnId(String destinationCtnId) {
    this.destinationCtnId = destinationCtnId;
  }

  public CoinbaseEngPrimeApiApiMatchTransferDetail amount(String amount) {
    this.amount = amount;
    return this;
  }

   /**
   * Get amount
   * @return amount
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAmount() {
    return amount;
  }

  public void setAmount(String amount) {
    this.amount = amount;
  }

  public CoinbaseEngPrimeApiApiMatchTransferDetail currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * Get currency
   * @return currency
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public CoinbaseEngPrimeApiApiMatchTransferDetail notionalUsdAmount(String notionalUsdAmount) {
    this.notionalUsdAmount = notionalUsdAmount;
    return this;
  }

   /**
   * Get notionalUsdAmount
   * @return notionalUsdAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public String getNotionalUsdAmount() {
    return notionalUsdAmount;
  }

  public void setNotionalUsdAmount(String notionalUsdAmount) {
    this.notionalUsdAmount = notionalUsdAmount;
  }

  public CoinbaseEngPrimeApiApiMatchTransferDetail sourceWalletName(String sourceWalletName) {
    this.sourceWalletName = sourceWalletName;
    return this;
  }

   /**
   * Get sourceWalletName
   * @return sourceWalletName
  **/
  @ApiModelProperty(value = "")
  public String getSourceWalletName() {
    return sourceWalletName;
  }

  public void setSourceWalletName(String sourceWalletName) {
    this.sourceWalletName = sourceWalletName;
  }

  public CoinbaseEngPrimeApiApiMatchTransferDetail destinationWalletName(String destinationWalletName) {
    this.destinationWalletName = destinationWalletName;
    return this;
  }

   /**
   * Get destinationWalletName
   * @return destinationWalletName
  **/
  @ApiModelProperty(value = "")
  public String getDestinationWalletName() {
    return destinationWalletName;
  }

  public void setDestinationWalletName(String destinationWalletName) {
    this.destinationWalletName = destinationWalletName;
  }

  public CoinbaseEngPrimeApiApiMatchTransferDetail humanId(String humanId) {
    this.humanId = humanId;
    return this;
  }

   /**
   * Get humanId
   * @return humanId
  **/
  @ApiModelProperty(value = "")
  public String getHumanId() {
    return humanId;
  }

  public void setHumanId(String humanId) {
    this.humanId = humanId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiMatchTransferDetail coinbaseEngPrimeApiApiMatchTransferDetail = (CoinbaseEngPrimeApiApiMatchTransferDetail) o;
    return Objects.equals(this.sourceCtnId, coinbaseEngPrimeApiApiMatchTransferDetail.sourceCtnId) &&
        Objects.equals(this.destinationCtnId, coinbaseEngPrimeApiApiMatchTransferDetail.destinationCtnId) &&
        Objects.equals(this.amount, coinbaseEngPrimeApiApiMatchTransferDetail.amount) &&
        Objects.equals(this.currency, coinbaseEngPrimeApiApiMatchTransferDetail.currency) &&
        Objects.equals(this.notionalUsdAmount, coinbaseEngPrimeApiApiMatchTransferDetail.notionalUsdAmount) &&
        Objects.equals(this.sourceWalletName, coinbaseEngPrimeApiApiMatchTransferDetail.sourceWalletName) &&
        Objects.equals(this.destinationWalletName, coinbaseEngPrimeApiApiMatchTransferDetail.destinationWalletName) &&
        Objects.equals(this.humanId, coinbaseEngPrimeApiApiMatchTransferDetail.humanId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(sourceCtnId, destinationCtnId, amount, currency, notionalUsdAmount, sourceWalletName, destinationWalletName, humanId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiMatchTransferDetail {\n");
    
    sb.append("    sourceCtnId: ").append(toIndentedString(sourceCtnId)).append("\n");
    sb.append("    destinationCtnId: ").append(toIndentedString(destinationCtnId)).append("\n");
    sb.append("    amount: ").append(toIndentedString(amount)).append("\n");
    sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    sb.append("    notionalUsdAmount: ").append(toIndentedString(notionalUsdAmount)).append("\n");
    sb.append("    sourceWalletName: ").append(toIndentedString(sourceWalletName)).append("\n");
    sb.append("    destinationWalletName: ").append(toIndentedString(destinationWalletName)).append("\n");
    sb.append("    humanId: ").append(toIndentedString(humanId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

