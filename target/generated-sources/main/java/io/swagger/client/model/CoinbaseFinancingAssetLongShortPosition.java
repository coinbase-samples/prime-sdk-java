/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseFinancingAssetLongShortPosition
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingAssetLongShortPosition {
  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("long_amount")
  private String longAmount = null;

  @SerializedName("long_notional_amount")
  private String longNotionalAmount = null;

  @SerializedName("short_amount")
  private String shortAmount = null;

  @SerializedName("short_notional_amount")
  private String shortNotionalAmount = null;

  @SerializedName("conversion_rate")
  private String conversionRate = null;

  @SerializedName("net_position")
  private String netPosition = null;

  @SerializedName("net_notional_position")
  private String netNotionalPosition = null;

  @SerializedName("market_rate")
  private String marketRate = null;

  public CoinbaseFinancingAssetLongShortPosition symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CoinbaseFinancingAssetLongShortPosition longAmount(String longAmount) {
    this.longAmount = longAmount;
    return this;
  }

   /**
   * Get longAmount
   * @return longAmount
  **/
  @ApiModelProperty(value = "")
  public String getLongAmount() {
    return longAmount;
  }

  public void setLongAmount(String longAmount) {
    this.longAmount = longAmount;
  }

  public CoinbaseFinancingAssetLongShortPosition longNotionalAmount(String longNotionalAmount) {
    this.longNotionalAmount = longNotionalAmount;
    return this;
  }

   /**
   * Get longNotionalAmount
   * @return longNotionalAmount
  **/
  @ApiModelProperty(value = "")
  public String getLongNotionalAmount() {
    return longNotionalAmount;
  }

  public void setLongNotionalAmount(String longNotionalAmount) {
    this.longNotionalAmount = longNotionalAmount;
  }

  public CoinbaseFinancingAssetLongShortPosition shortAmount(String shortAmount) {
    this.shortAmount = shortAmount;
    return this;
  }

   /**
   * Get shortAmount
   * @return shortAmount
  **/
  @ApiModelProperty(value = "")
  public String getShortAmount() {
    return shortAmount;
  }

  public void setShortAmount(String shortAmount) {
    this.shortAmount = shortAmount;
  }

  public CoinbaseFinancingAssetLongShortPosition shortNotionalAmount(String shortNotionalAmount) {
    this.shortNotionalAmount = shortNotionalAmount;
    return this;
  }

   /**
   * Get shortNotionalAmount
   * @return shortNotionalAmount
  **/
  @ApiModelProperty(value = "")
  public String getShortNotionalAmount() {
    return shortNotionalAmount;
  }

  public void setShortNotionalAmount(String shortNotionalAmount) {
    this.shortNotionalAmount = shortNotionalAmount;
  }

  public CoinbaseFinancingAssetLongShortPosition conversionRate(String conversionRate) {
    this.conversionRate = conversionRate;
    return this;
  }

   /**
   * Get conversionRate
   * @return conversionRate
  **/
  @ApiModelProperty(value = "")
  public String getConversionRate() {
    return conversionRate;
  }

  public void setConversionRate(String conversionRate) {
    this.conversionRate = conversionRate;
  }

  public CoinbaseFinancingAssetLongShortPosition netPosition(String netPosition) {
    this.netPosition = netPosition;
    return this;
  }

   /**
   * Get netPosition
   * @return netPosition
  **/
  @ApiModelProperty(value = "")
  public String getNetPosition() {
    return netPosition;
  }

  public void setNetPosition(String netPosition) {
    this.netPosition = netPosition;
  }

  public CoinbaseFinancingAssetLongShortPosition netNotionalPosition(String netNotionalPosition) {
    this.netNotionalPosition = netNotionalPosition;
    return this;
  }

   /**
   * Get netNotionalPosition
   * @return netNotionalPosition
  **/
  @ApiModelProperty(value = "")
  public String getNetNotionalPosition() {
    return netNotionalPosition;
  }

  public void setNetNotionalPosition(String netNotionalPosition) {
    this.netNotionalPosition = netNotionalPosition;
  }

  public CoinbaseFinancingAssetLongShortPosition marketRate(String marketRate) {
    this.marketRate = marketRate;
    return this;
  }

   /**
   * Get marketRate
   * @return marketRate
  **/
  @ApiModelProperty(value = "")
  public String getMarketRate() {
    return marketRate;
  }

  public void setMarketRate(String marketRate) {
    this.marketRate = marketRate;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingAssetLongShortPosition coinbaseFinancingAssetLongShortPosition = (CoinbaseFinancingAssetLongShortPosition) o;
    return Objects.equals(this.symbol, coinbaseFinancingAssetLongShortPosition.symbol) &&
        Objects.equals(this.longAmount, coinbaseFinancingAssetLongShortPosition.longAmount) &&
        Objects.equals(this.longNotionalAmount, coinbaseFinancingAssetLongShortPosition.longNotionalAmount) &&
        Objects.equals(this.shortAmount, coinbaseFinancingAssetLongShortPosition.shortAmount) &&
        Objects.equals(this.shortNotionalAmount, coinbaseFinancingAssetLongShortPosition.shortNotionalAmount) &&
        Objects.equals(this.conversionRate, coinbaseFinancingAssetLongShortPosition.conversionRate) &&
        Objects.equals(this.netPosition, coinbaseFinancingAssetLongShortPosition.netPosition) &&
        Objects.equals(this.netNotionalPosition, coinbaseFinancingAssetLongShortPosition.netNotionalPosition) &&
        Objects.equals(this.marketRate, coinbaseFinancingAssetLongShortPosition.marketRate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(symbol, longAmount, longNotionalAmount, shortAmount, shortNotionalAmount, conversionRate, netPosition, netNotionalPosition, marketRate);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingAssetLongShortPosition {\n");
    
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    longAmount: ").append(toIndentedString(longAmount)).append("\n");
    sb.append("    longNotionalAmount: ").append(toIndentedString(longNotionalAmount)).append("\n");
    sb.append("    shortAmount: ").append(toIndentedString(shortAmount)).append("\n");
    sb.append("    shortNotionalAmount: ").append(toIndentedString(shortNotionalAmount)).append("\n");
    sb.append("    conversionRate: ").append(toIndentedString(conversionRate)).append("\n");
    sb.append("    netPosition: ").append(toIndentedString(netPosition)).append("\n");
    sb.append("    netNotionalPosition: ").append(toIndentedString(netNotionalPosition)).append("\n");
    sb.append("    marketRate: ").append(toIndentedString(marketRate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

