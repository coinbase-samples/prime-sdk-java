/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseFinancingMarginInformation;
import java.io.IOException;

/**
 * CoinbaseFinancingConversionSummaryV2
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseFinancingConversionSummaryV2 {
  @SerializedName("conversion_id")
  private String conversionId = null;

  @SerializedName("conversion_datetime")
  private String conversionDatetime = null;

  @SerializedName("margin_information")
  private CoinbaseFinancingMarginInformation marginInformation = null;

  public CoinbaseFinancingConversionSummaryV2 conversionId(String conversionId) {
    this.conversionId = conversionId;
    return this;
  }

   /**
   * Get conversionId
   * @return conversionId
  **/
  @ApiModelProperty(value = "")
  public String getConversionId() {
    return conversionId;
  }

  public void setConversionId(String conversionId) {
    this.conversionId = conversionId;
  }

  public CoinbaseFinancingConversionSummaryV2 conversionDatetime(String conversionDatetime) {
    this.conversionDatetime = conversionDatetime;
    return this;
  }

   /**
   * Get conversionDatetime
   * @return conversionDatetime
  **/
  @ApiModelProperty(value = "")
  public String getConversionDatetime() {
    return conversionDatetime;
  }

  public void setConversionDatetime(String conversionDatetime) {
    this.conversionDatetime = conversionDatetime;
  }

  public CoinbaseFinancingConversionSummaryV2 marginInformation(CoinbaseFinancingMarginInformation marginInformation) {
    this.marginInformation = marginInformation;
    return this;
  }

   /**
   * Get marginInformation
   * @return marginInformation
  **/
  @ApiModelProperty(value = "")
  public CoinbaseFinancingMarginInformation getMarginInformation() {
    return marginInformation;
  }

  public void setMarginInformation(CoinbaseFinancingMarginInformation marginInformation) {
    this.marginInformation = marginInformation;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseFinancingConversionSummaryV2 coinbaseFinancingConversionSummaryV2 = (CoinbaseFinancingConversionSummaryV2) o;
    return Objects.equals(this.conversionId, coinbaseFinancingConversionSummaryV2.conversionId) &&
        Objects.equals(this.conversionDatetime, coinbaseFinancingConversionSummaryV2.conversionDatetime) &&
        Objects.equals(this.marginInformation, coinbaseFinancingConversionSummaryV2.marginInformation);
  }

  @Override
  public int hashCode() {
    return Objects.hash(conversionId, conversionDatetime, marginInformation);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseFinancingConversionSummaryV2 {\n");
    
    sb.append("    conversionId: ").append(toIndentedString(conversionId)).append("\n");
    sb.append("    conversionDatetime: ").append(toIndentedString(conversionDatetime)).append("\n");
    sb.append("    marginInformation: ").append(toIndentedString(marginInformation)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

