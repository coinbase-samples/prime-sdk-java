/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPostTradeCredit;
import java.io.IOException;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * CoinbaseEngPrimeApiApiPortfolioFinancing
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPortfolioFinancing {
  @SerializedName("post_trade_credit")
  private CoinbaseEngPrimeApiApiPostTradeCredit postTradeCredit = null;

  @SerializedName("credit_utilized")
  private String creditUtilized = null;

  @SerializedName("credit_available")
  private String creditAvailable = null;

  @SerializedName("credit_currency")
  private String creditCurrency = null;

  @SerializedName("is_frozen")
  private Boolean isFrozen = null;

  @SerializedName("frozen_message")
  private String frozenMessage = null;

  @SerializedName("credit_utilized_per_currency")
  private Map<String, String> creditUtilizedPerCurrency = null;

  @SerializedName("total_due")
  private String totalDue = null;

  @SerializedName("open_orders")
  private String openOrders = null;

  @SerializedName("adjusted_credit_utilized")
  private String adjustedCreditUtilized = null;

  @SerializedName("adjusted_credit_available")
  private String adjustedCreditAvailable = null;

  @SerializedName("adjusted_portfolio_equity")
  private String adjustedPortfolioEquity = null;

  @SerializedName("is_entity_pm_enabled")
  private Boolean isEntityPmEnabled = null;

  @SerializedName("is_portfolio_pm_enabled")
  private Boolean isPortfolioPmEnabled = null;

  public CoinbaseEngPrimeApiApiPortfolioFinancing postTradeCredit(CoinbaseEngPrimeApiApiPostTradeCredit postTradeCredit) {
    this.postTradeCredit = postTradeCredit;
    return this;
  }

   /**
   * Get postTradeCredit
   * @return postTradeCredit
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseEngPrimeApiApiPostTradeCredit getPostTradeCredit() {
    return postTradeCredit;
  }

  public void setPostTradeCredit(CoinbaseEngPrimeApiApiPostTradeCredit postTradeCredit) {
    this.postTradeCredit = postTradeCredit;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing creditUtilized(String creditUtilized) {
    this.creditUtilized = creditUtilized;
    return this;
  }

   /**
   * How much credit is currently being used
   * @return creditUtilized
  **/
  @ApiModelProperty(required = true, value = "How much credit is currently being used")
  public String getCreditUtilized() {
    return creditUtilized;
  }

  public void setCreditUtilized(String creditUtilized) {
    this.creditUtilized = creditUtilized;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing creditAvailable(String creditAvailable) {
    this.creditAvailable = creditAvailable;
    return this;
  }

   /**
   * How much credit is still available to be used
   * @return creditAvailable
  **/
  @ApiModelProperty(required = true, value = "How much credit is still available to be used")
  public String getCreditAvailable() {
    return creditAvailable;
  }

  public void setCreditAvailable(String creditAvailable) {
    this.creditAvailable = creditAvailable;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing creditCurrency(String creditCurrency) {
    this.creditCurrency = creditCurrency;
    return this;
  }

   /**
   * The currency that the credit is expressed in
   * @return creditCurrency
  **/
  @ApiModelProperty(value = "The currency that the credit is expressed in")
  public String getCreditCurrency() {
    return creditCurrency;
  }

  public void setCreditCurrency(String creditCurrency) {
    this.creditCurrency = creditCurrency;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing isFrozen(Boolean isFrozen) {
    this.isFrozen = isFrozen;
    return this;
  }

   /**
   * A boolean indicating whether or not the portfolios credit priviliges are frozen or not
   * @return isFrozen
  **/
  @ApiModelProperty(value = "A boolean indicating whether or not the portfolios credit priviliges are frozen or not")
  public Boolean isIsFrozen() {
    return isFrozen;
  }

  public void setIsFrozen(Boolean isFrozen) {
    this.isFrozen = isFrozen;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing frozenMessage(String frozenMessage) {
    this.frozenMessage = frozenMessage;
    return this;
  }

   /**
   * An optional message explaining why the portfolios credit priviliges are frozen
   * @return frozenMessage
  **/
  @ApiModelProperty(value = "An optional message explaining why the portfolios credit priviliges are frozen")
  public String getFrozenMessage() {
    return frozenMessage;
  }

  public void setFrozenMessage(String frozenMessage) {
    this.frozenMessage = frozenMessage;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing creditUtilizedPerCurrency(Map<String, String> creditUtilizedPerCurrency) {
    this.creditUtilizedPerCurrency = creditUtilizedPerCurrency;
    return this;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing putCreditUtilizedPerCurrencyItem(String key, String creditUtilizedPerCurrencyItem) {
    if (this.creditUtilizedPerCurrency == null) {
      this.creditUtilizedPerCurrency = new HashMap<String, String>();
    }
    this.creditUtilizedPerCurrency.put(key, creditUtilizedPerCurrencyItem);
    return this;
  }

   /**
   * How much credit is currently being used per currency
   * @return creditUtilizedPerCurrency
  **/
  @ApiModelProperty(value = "How much credit is currently being used per currency")
  public Map<String, String> getCreditUtilizedPerCurrency() {
    return creditUtilizedPerCurrency;
  }

  public void setCreditUtilizedPerCurrency(Map<String, String> creditUtilizedPerCurrency) {
    this.creditUtilizedPerCurrency = creditUtilizedPerCurrency;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing totalDue(String totalDue) {
    this.totalDue = totalDue;
    return this;
  }

   /**
   * Total amount due
   * @return totalDue
  **/
  @ApiModelProperty(value = "Total amount due")
  public String getTotalDue() {
    return totalDue;
  }

  public void setTotalDue(String totalDue) {
    this.totalDue = totalDue;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing openOrders(String openOrders) {
    this.openOrders = openOrders;
    return this;
  }

   /**
   * Number of open orders
   * @return openOrders
  **/
  @ApiModelProperty(value = "Number of open orders")
  public String getOpenOrders() {
    return openOrders;
  }

  public void setOpenOrders(String openOrders) {
    this.openOrders = openOrders;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing adjustedCreditUtilized(String adjustedCreditUtilized) {
    this.adjustedCreditUtilized = adjustedCreditUtilized;
    return this;
  }

   /**
   * How much credit is currently being used with CUF adjusted
   * @return adjustedCreditUtilized
  **/
  @ApiModelProperty(value = "How much credit is currently being used with CUF adjusted")
  public String getAdjustedCreditUtilized() {
    return adjustedCreditUtilized;
  }

  public void setAdjustedCreditUtilized(String adjustedCreditUtilized) {
    this.adjustedCreditUtilized = adjustedCreditUtilized;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing adjustedCreditAvailable(String adjustedCreditAvailable) {
    this.adjustedCreditAvailable = adjustedCreditAvailable;
    return this;
  }

   /**
   * How much credit is still available to be used with CUF adjusted
   * @return adjustedCreditAvailable
  **/
  @ApiModelProperty(value = "How much credit is still available to be used with CUF adjusted")
  public String getAdjustedCreditAvailable() {
    return adjustedCreditAvailable;
  }

  public void setAdjustedCreditAvailable(String adjustedCreditAvailable) {
    this.adjustedCreditAvailable = adjustedCreditAvailable;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing adjustedPortfolioEquity(String adjustedPortfolioEquity) {
    this.adjustedPortfolioEquity = adjustedPortfolioEquity;
    return this;
  }

   /**
   * How much equity does it have with CUF adjusted
   * @return adjustedPortfolioEquity
  **/
  @ApiModelProperty(value = "How much equity does it have with CUF adjusted")
  public String getAdjustedPortfolioEquity() {
    return adjustedPortfolioEquity;
  }

  public void setAdjustedPortfolioEquity(String adjustedPortfolioEquity) {
    this.adjustedPortfolioEquity = adjustedPortfolioEquity;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing isEntityPmEnabled(Boolean isEntityPmEnabled) {
    this.isEntityPmEnabled = isEntityPmEnabled;
    return this;
  }

   /**
   * A boolean indicating whether or not entity is enabled for portfolio margin
   * @return isEntityPmEnabled
  **/
  @ApiModelProperty(value = "A boolean indicating whether or not entity is enabled for portfolio margin")
  public Boolean isIsEntityPmEnabled() {
    return isEntityPmEnabled;
  }

  public void setIsEntityPmEnabled(Boolean isEntityPmEnabled) {
    this.isEntityPmEnabled = isEntityPmEnabled;
  }

  public CoinbaseEngPrimeApiApiPortfolioFinancing isPortfolioPmEnabled(Boolean isPortfolioPmEnabled) {
    this.isPortfolioPmEnabled = isPortfolioPmEnabled;
    return this;
  }

   /**
   * A boolean indicating whether or not portfolio is enabled for portfolio margin
   * @return isPortfolioPmEnabled
  **/
  @ApiModelProperty(value = "A boolean indicating whether or not portfolio is enabled for portfolio margin")
  public Boolean isIsPortfolioPmEnabled() {
    return isPortfolioPmEnabled;
  }

  public void setIsPortfolioPmEnabled(Boolean isPortfolioPmEnabled) {
    this.isPortfolioPmEnabled = isPortfolioPmEnabled;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPortfolioFinancing coinbaseEngPrimeApiApiPortfolioFinancing = (CoinbaseEngPrimeApiApiPortfolioFinancing) o;
    return Objects.equals(this.postTradeCredit, coinbaseEngPrimeApiApiPortfolioFinancing.postTradeCredit) &&
        Objects.equals(this.creditUtilized, coinbaseEngPrimeApiApiPortfolioFinancing.creditUtilized) &&
        Objects.equals(this.creditAvailable, coinbaseEngPrimeApiApiPortfolioFinancing.creditAvailable) &&
        Objects.equals(this.creditCurrency, coinbaseEngPrimeApiApiPortfolioFinancing.creditCurrency) &&
        Objects.equals(this.isFrozen, coinbaseEngPrimeApiApiPortfolioFinancing.isFrozen) &&
        Objects.equals(this.frozenMessage, coinbaseEngPrimeApiApiPortfolioFinancing.frozenMessage) &&
        Objects.equals(this.creditUtilizedPerCurrency, coinbaseEngPrimeApiApiPortfolioFinancing.creditUtilizedPerCurrency) &&
        Objects.equals(this.totalDue, coinbaseEngPrimeApiApiPortfolioFinancing.totalDue) &&
        Objects.equals(this.openOrders, coinbaseEngPrimeApiApiPortfolioFinancing.openOrders) &&
        Objects.equals(this.adjustedCreditUtilized, coinbaseEngPrimeApiApiPortfolioFinancing.adjustedCreditUtilized) &&
        Objects.equals(this.adjustedCreditAvailable, coinbaseEngPrimeApiApiPortfolioFinancing.adjustedCreditAvailable) &&
        Objects.equals(this.adjustedPortfolioEquity, coinbaseEngPrimeApiApiPortfolioFinancing.adjustedPortfolioEquity) &&
        Objects.equals(this.isEntityPmEnabled, coinbaseEngPrimeApiApiPortfolioFinancing.isEntityPmEnabled) &&
        Objects.equals(this.isPortfolioPmEnabled, coinbaseEngPrimeApiApiPortfolioFinancing.isPortfolioPmEnabled);
  }

  @Override
  public int hashCode() {
    return Objects.hash(postTradeCredit, creditUtilized, creditAvailable, creditCurrency, isFrozen, frozenMessage, creditUtilizedPerCurrency, totalDue, openOrders, adjustedCreditUtilized, adjustedCreditAvailable, adjustedPortfolioEquity, isEntityPmEnabled, isPortfolioPmEnabled);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPortfolioFinancing {\n");
    
    sb.append("    postTradeCredit: ").append(toIndentedString(postTradeCredit)).append("\n");
    sb.append("    creditUtilized: ").append(toIndentedString(creditUtilized)).append("\n");
    sb.append("    creditAvailable: ").append(toIndentedString(creditAvailable)).append("\n");
    sb.append("    creditCurrency: ").append(toIndentedString(creditCurrency)).append("\n");
    sb.append("    isFrozen: ").append(toIndentedString(isFrozen)).append("\n");
    sb.append("    frozenMessage: ").append(toIndentedString(frozenMessage)).append("\n");
    sb.append("    creditUtilizedPerCurrency: ").append(toIndentedString(creditUtilizedPerCurrency)).append("\n");
    sb.append("    totalDue: ").append(toIndentedString(totalDue)).append("\n");
    sb.append("    openOrders: ").append(toIndentedString(openOrders)).append("\n");
    sb.append("    adjustedCreditUtilized: ").append(toIndentedString(adjustedCreditUtilized)).append("\n");
    sb.append("    adjustedCreditAvailable: ").append(toIndentedString(adjustedCreditAvailable)).append("\n");
    sb.append("    adjustedPortfolioEquity: ").append(toIndentedString(adjustedPortfolioEquity)).append("\n");
    sb.append("    isEntityPmEnabled: ").append(toIndentedString(isEntityPmEnabled)).append("\n");
    sb.append("    isPortfolioPmEnabled: ").append(toIndentedString(isPortfolioPmEnabled)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

