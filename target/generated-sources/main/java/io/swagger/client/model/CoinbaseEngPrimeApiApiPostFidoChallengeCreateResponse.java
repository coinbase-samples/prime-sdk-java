/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs;
import io.swagger.client.model.CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * Follows PublicKeyCredentialRequestOptions: https://www.w3.org/TR/webauthn/#dictdef-publickeycredentialrequestoptions The timeout is left for the client to control.
 */
@ApiModel(description = "Follows PublicKeyCredentialRequestOptions: https://www.w3.org/TR/webauthn/#dictdef-publickeycredentialrequestoptions The timeout is left for the client to control.")
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse {
  @SerializedName("challenge")
  private byte[] challenge = null;

  @SerializedName("rp_id")
  private String rpId = null;

  @SerializedName("allow_credentials")
  private List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> allowCredentials = null;

  @SerializedName("user_verification")
  private String userVerification = null;

  @SerializedName("extensions")
  private CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs extensions = null;

  public CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse challenge(byte[] challenge) {
    this.challenge = challenge;
    return this;
  }

   /**
   * Get challenge
   * @return challenge
  **/
  @ApiModelProperty(required = true, value = "")
  public byte[] getChallenge() {
    return challenge;
  }

  public void setChallenge(byte[] challenge) {
    this.challenge = challenge;
  }

  public CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse rpId(String rpId) {
    this.rpId = rpId;
    return this;
  }

   /**
   * Get rpId
   * @return rpId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getRpId() {
    return rpId;
  }

  public void setRpId(String rpId) {
    this.rpId = rpId;
  }

  public CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse allowCredentials(List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> allowCredentials) {
    this.allowCredentials = allowCredentials;
    return this;
  }

  public CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse addAllowCredentialsItem(CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor allowCredentialsItem) {
    if (this.allowCredentials == null) {
      this.allowCredentials = new ArrayList<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor>();
    }
    this.allowCredentials.add(allowCredentialsItem);
    return this;
  }

   /**
   * Get allowCredentials
   * @return allowCredentials
  **/
  @ApiModelProperty(value = "")
  public List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> getAllowCredentials() {
    return allowCredentials;
  }

  public void setAllowCredentials(List<CoinbaseEngPrimeApiApiPublicKeyCredentialDescriptor> allowCredentials) {
    this.allowCredentials = allowCredentials;
  }

  public CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse userVerification(String userVerification) {
    this.userVerification = userVerification;
    return this;
  }

   /**
   * Get userVerification
   * @return userVerification
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUserVerification() {
    return userVerification;
  }

  public void setUserVerification(String userVerification) {
    this.userVerification = userVerification;
  }

  public CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse extensions(CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs extensions) {
    this.extensions = extensions;
    return this;
  }

   /**
   * Get extensions
   * @return extensions
  **/
  @ApiModelProperty(value = "")
  public CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs getExtensions() {
    return extensions;
  }

  public void setExtensions(CoinbaseEngPrimeApiApiAuthenticationExtensionsClientInputs extensions) {
    this.extensions = extensions;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse coinbaseEngPrimeApiApiPostFidoChallengeCreateResponse = (CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse) o;
    return Objects.equals(this.challenge, coinbaseEngPrimeApiApiPostFidoChallengeCreateResponse.challenge) &&
        Objects.equals(this.rpId, coinbaseEngPrimeApiApiPostFidoChallengeCreateResponse.rpId) &&
        Objects.equals(this.allowCredentials, coinbaseEngPrimeApiApiPostFidoChallengeCreateResponse.allowCredentials) &&
        Objects.equals(this.userVerification, coinbaseEngPrimeApiApiPostFidoChallengeCreateResponse.userVerification) &&
        Objects.equals(this.extensions, coinbaseEngPrimeApiApiPostFidoChallengeCreateResponse.extensions);
  }

  @Override
  public int hashCode() {
    return Objects.hash(challenge, rpId, allowCredentials, userVerification, extensions);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiPostFidoChallengeCreateResponse {\n");
    
    sb.append("    challenge: ").append(toIndentedString(challenge)).append("\n");
    sb.append("    rpId: ").append(toIndentedString(rpId)).append("\n");
    sb.append("    allowCredentials: ").append(toIndentedString(allowCredentials)).append("\n");
    sb.append("    userVerification: ").append(toIndentedString(userVerification)).append("\n");
    sb.append("    extensions: ").append(toIndentedString(extensions)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

