/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.EngPrimePolicyApiRule;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest {
  @SerializedName("new_rules")
  private List<EngPrimePolicyApiRule> newRules = null;

  @SerializedName("old_rules")
  private List<EngPrimePolicyApiRule> oldRules = null;

  @SerializedName("policy_type")
  private String policyType = null;

  @SerializedName("admin_review_required")
  private Boolean adminReviewRequired = null;

  @SerializedName("portfolio_id")
  private String portfolioId = null;

  public CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest newRules(List<EngPrimePolicyApiRule> newRules) {
    this.newRules = newRules;
    return this;
  }

  public CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest addNewRulesItem(EngPrimePolicyApiRule newRulesItem) {
    if (this.newRules == null) {
      this.newRules = new ArrayList<EngPrimePolicyApiRule>();
    }
    this.newRules.add(newRulesItem);
    return this;
  }

   /**
   * Get newRules
   * @return newRules
  **/
  @ApiModelProperty(value = "")
  public List<EngPrimePolicyApiRule> getNewRules() {
    return newRules;
  }

  public void setNewRules(List<EngPrimePolicyApiRule> newRules) {
    this.newRules = newRules;
  }

  public CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest oldRules(List<EngPrimePolicyApiRule> oldRules) {
    this.oldRules = oldRules;
    return this;
  }

  public CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest addOldRulesItem(EngPrimePolicyApiRule oldRulesItem) {
    if (this.oldRules == null) {
      this.oldRules = new ArrayList<EngPrimePolicyApiRule>();
    }
    this.oldRules.add(oldRulesItem);
    return this;
  }

   /**
   * Get oldRules
   * @return oldRules
  **/
  @ApiModelProperty(value = "")
  public List<EngPrimePolicyApiRule> getOldRules() {
    return oldRules;
  }

  public void setOldRules(List<EngPrimePolicyApiRule> oldRules) {
    this.oldRules = oldRules;
  }

  public CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest policyType(String policyType) {
    this.policyType = policyType;
    return this;
  }

   /**
   * Get policyType
   * @return policyType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPolicyType() {
    return policyType;
  }

  public void setPolicyType(String policyType) {
    this.policyType = policyType;
  }

  public CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest adminReviewRequired(Boolean adminReviewRequired) {
    this.adminReviewRequired = adminReviewRequired;
    return this;
  }

   /**
   * Get adminReviewRequired
   * @return adminReviewRequired
  **/
  @ApiModelProperty(value = "")
  public Boolean isAdminReviewRequired() {
    return adminReviewRequired;
  }

  public void setAdminReviewRequired(Boolean adminReviewRequired) {
    this.adminReviewRequired = adminReviewRequired;
  }

  public CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest portfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
    return this;
  }

   /**
   * Get portfolioId
   * @return portfolioId
  **/
  @ApiModelProperty(value = "")
  public String getPortfolioId() {
    return portfolioId;
  }

  public void setPortfolioId(String portfolioId) {
    this.portfolioId = portfolioId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest coinbaseEngPrimeApiApiUpsertPolicyChangeRequest = (CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest) o;
    return Objects.equals(this.newRules, coinbaseEngPrimeApiApiUpsertPolicyChangeRequest.newRules) &&
        Objects.equals(this.oldRules, coinbaseEngPrimeApiApiUpsertPolicyChangeRequest.oldRules) &&
        Objects.equals(this.policyType, coinbaseEngPrimeApiApiUpsertPolicyChangeRequest.policyType) &&
        Objects.equals(this.adminReviewRequired, coinbaseEngPrimeApiApiUpsertPolicyChangeRequest.adminReviewRequired) &&
        Objects.equals(this.portfolioId, coinbaseEngPrimeApiApiUpsertPolicyChangeRequest.portfolioId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(newRules, oldRules, policyType, adminReviewRequired, portfolioId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseEngPrimeApiApiUpsertPolicyChangeRequest {\n");
    
    sb.append("    newRules: ").append(toIndentedString(newRules)).append("\n");
    sb.append("    oldRules: ").append(toIndentedString(oldRules)).append("\n");
    sb.append("    policyType: ").append(toIndentedString(policyType)).append("\n");
    sb.append("    adminReviewRequired: ").append(toIndentedString(adminReviewRequired)).append("\n");
    sb.append("    portfolioId: ").append(toIndentedString(portfolioId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

