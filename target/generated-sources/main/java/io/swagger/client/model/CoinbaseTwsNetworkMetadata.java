/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * CoinbaseTwsNetworkMetadata
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseTwsNetworkMetadata {
  @SerializedName("name")
  private String name = null;

  @SerializedName("rpc_endpoint")
  private String rpcEndpoint = null;

  @SerializedName("chain_id")
  private String chainId = null;

  public CoinbaseTwsNetworkMetadata name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Network name used in web3 transaction
   * @return name
  **/
  @ApiModelProperty(value = "Network name used in web3 transaction")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseTwsNetworkMetadata rpcEndpoint(String rpcEndpoint) {
    this.rpcEndpoint = rpcEndpoint;
    return this;
  }

   /**
   * Network rpc_endpoint used in web3 transaction
   * @return rpcEndpoint
  **/
  @ApiModelProperty(value = "Network rpc_endpoint used in web3 transaction")
  public String getRpcEndpoint() {
    return rpcEndpoint;
  }

  public void setRpcEndpoint(String rpcEndpoint) {
    this.rpcEndpoint = rpcEndpoint;
  }

  public CoinbaseTwsNetworkMetadata chainId(String chainId) {
    this.chainId = chainId;
    return this;
  }

   /**
   * Network chain id used in the web3 transaction signature process
   * @return chainId
  **/
  @ApiModelProperty(value = "Network chain id used in the web3 transaction signature process")
  public String getChainId() {
    return chainId;
  }

  public void setChainId(String chainId) {
    this.chainId = chainId;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseTwsNetworkMetadata coinbaseTwsNetworkMetadata = (CoinbaseTwsNetworkMetadata) o;
    return Objects.equals(this.name, coinbaseTwsNetworkMetadata.name) &&
        Objects.equals(this.rpcEndpoint, coinbaseTwsNetworkMetadata.rpcEndpoint) &&
        Objects.equals(this.chainId, coinbaseTwsNetworkMetadata.chainId);
  }

  @Override
  public int hashCode() {
    return Objects.hash(name, rpcEndpoint, chainId);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseTwsNetworkMetadata {\n");
    
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    rpcEndpoint: ").append(toIndentedString(rpcEndpoint)).append("\n");
    sb.append("    chainId: ").append(toIndentedString(chainId)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

