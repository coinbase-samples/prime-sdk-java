/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.annotations.SerializedName;

import java.io.IOException;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;

/**
 * Gets or Sets coinbase.payments.common.payment_methods.PaymentMethod.Type
 */
@JsonAdapter(CoinbasePaymentsCommonPaymentMethodsPaymentMethodType.Adapter.class)
public enum CoinbasePaymentsCommonPaymentMethodsPaymentMethodType {
  
  INVALID("INVALID"),
  
  UNSET("UNSET"),
  
  BLOCKCHAIN_ADDRESS("BLOCKCHAIN_ADDRESS"),
  
  COINBASE_ACCOUNT("COINBASE_ACCOUNT"),
  
  BLOCKCHAIN_TRANSACTION("BLOCKCHAIN_TRANSACTION"),
  
  FEDWIRE("FEDWIRE"),
  
  SWIFT("SWIFT"),
  
  CARD("CARD"),
  
  ZENGIN("ZENGIN"),
  
  UK("UK"),
  
  SEPA("SEPA"),
  
  PAYPAL("PAYPAL"),
  
  LEDGER_ACCOUNT("LEDGER_ACCOUNT"),
  
  EXTERNAL_PAYMENT_METHOD("EXTERNAL_PAYMENT_METHOD"),
  
  PRO_ACCOUNT("PRO_ACCOUNT"),
  
  RTP("RTP"),
  
  CARD_REPRESENTMENT("CARD_REPRESENTMENT"),
  
  VENUE("VENUE"),
  
  LEDGER_NAMED_ACCOUNT("LEDGER_NAMED_ACCOUNT"),
  
  CUSTODIAL_POOL("CUSTODIAL_POOL"),
  
  APPLE_PAY("APPLE_PAY"),
  
  DEFAULT_ACCOUNT("DEFAULT_ACCOUNT"),
  
  REMITLY("REMITLY"),
  
  PRO_INTERNAL_ACCOUNT("PRO_INTERNAL_ACCOUNT"),
  
  DAPP_WALLET_ACCOUNT("DAPP_WALLET_ACCOUNT"),
  
  GOOGLE_PAY("GOOGLE_PAY"),
  
  DAPP_WALLET_BLOCKCHAIN_ADDRESS("DAPP_WALLET_BLOCKCHAIN_ADDRESS"),
  
  ZAAKPAY_MOBIKWIK("ZAAKPAY_MOBIKWIK"),
  
  DENEB_UPI("DENEB_UPI"),
  
  BANK_ACCOUNT("BANK_ACCOUNT"),
  
  IDENTITY_CONTRACT_CALL("IDENTITY_CONTRACT_CALL"),
  
  DENEB_IMPS("DENEB_IMPS"),
  
  ALLOCATION("ALLOCATION"),
  
  LIQUIDITY_POOL("LIQUIDITY_POOL"),
  
  ZENGIN_V2("ZENGIN_V2"),
  
  DIRECT_DEPOSIT("DIRECT_DEPOSIT"),
  
  SEPA_V2("SEPA_V2"),
  
  ZEPTO("ZEPTO"),
  
  PIX_EBANX("PIX_EBANX"),
  
  SIGNET("SIGNET"),
  
  DERIVATIVE_SETTLEMENT("DERIVATIVE_SETTLEMENT"),
  
  USER("USER"),
  
  SG_FAST("SG_FAST"),
  
  INTERAC("INTERAC"),
  
  INTRA_BANK("INTRA_BANK"),
  
  CBIT("CBIT"),
  
  IDEAL("IDEAL"),
  
  SOFORT("SOFORT"),
  
  SG_PAYNOW("SG_PAYNOW"),
  
  CHECKOUT_PAYMENT_LINK("CHECKOUT_PAYMENT_LINK"),
  
  EMAIL_ADDRESS("EMAIL_ADDRESS"),
  
  PHONE_NUMBER("PHONE_NUMBER"),
  
  VENDOR_PAYMENT("VENDOR_PAYMENT"),
  
  CTN("CTN"),
  
  BANCOMAT_PAY("BANCOMAT_PAY"),
  
  HOT_WALLET("HOT_WALLET"),
  
  NOVA_ACCOUNT("NOVA_ACCOUNT"),
  
  MAGIC_SPEND_BLOCKCHAIN_ADDRESS("MAGIC_SPEND_BLOCKCHAIN_ADDRESS"),
  
  TRANSFER_POINTER("TRANSFER_POINTER");

  private String value;

  CoinbasePaymentsCommonPaymentMethodsPaymentMethodType(String value) {
    this.value = value;
  }

  public String getValue() {
    return value;
  }

  @Override
  public String toString() {
    return String.valueOf(value);
  }

  public static CoinbasePaymentsCommonPaymentMethodsPaymentMethodType fromValue(String text) {
    for (CoinbasePaymentsCommonPaymentMethodsPaymentMethodType b : CoinbasePaymentsCommonPaymentMethodsPaymentMethodType.values()) {
      if (String.valueOf(b.value).equals(text)) {
        return b;
      }
    }
    return null;
  }

  public static class Adapter extends TypeAdapter<CoinbasePaymentsCommonPaymentMethodsPaymentMethodType> {
    @Override
    public void write(final JsonWriter jsonWriter, final CoinbasePaymentsCommonPaymentMethodsPaymentMethodType enumeration) throws IOException {
      jsonWriter.value(enumeration.getValue());
    }

    @Override
    public CoinbasePaymentsCommonPaymentMethodsPaymentMethodType read(final JsonReader jsonReader) throws IOException {
      String value = jsonReader.nextString();
      return CoinbasePaymentsCommonPaymentMethodsPaymentMethodType.fromValue(String.valueOf(value));
    }
  }
}

