/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbasePaymentsCommonPaymentMethodsOwnerType;
import java.io.IOException;

/**
 * CoinbasePaymentsCommonPaymentMethodsOwner
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbasePaymentsCommonPaymentMethodsOwner {
  @SerializedName("id")
  private String id = null;

  @SerializedName("uuid")
  private String uuid = null;

  @SerializedName("user_uuid")
  private String userUuid = null;

  @SerializedName("type")
  private CoinbasePaymentsCommonPaymentMethodsOwnerType type = null;

  public CoinbasePaymentsCommonPaymentMethodsOwner id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbasePaymentsCommonPaymentMethodsOwner uuid(String uuid) {
    this.uuid = uuid;
    return this;
  }

   /**
   * Get uuid
   * @return uuid
  **/
  @ApiModelProperty(value = "")
  public String getUuid() {
    return uuid;
  }

  public void setUuid(String uuid) {
    this.uuid = uuid;
  }

  public CoinbasePaymentsCommonPaymentMethodsOwner userUuid(String userUuid) {
    this.userUuid = userUuid;
    return this;
  }

   /**
   * Get userUuid
   * @return userUuid
  **/
  @ApiModelProperty(value = "")
  public String getUserUuid() {
    return userUuid;
  }

  public void setUserUuid(String userUuid) {
    this.userUuid = userUuid;
  }

  public CoinbasePaymentsCommonPaymentMethodsOwner type(CoinbasePaymentsCommonPaymentMethodsOwnerType type) {
    this.type = type;
    return this;
  }

   /**
   * Get type
   * @return type
  **/
  @ApiModelProperty(value = "")
  public CoinbasePaymentsCommonPaymentMethodsOwnerType getType() {
    return type;
  }

  public void setType(CoinbasePaymentsCommonPaymentMethodsOwnerType type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbasePaymentsCommonPaymentMethodsOwner coinbasePaymentsCommonPaymentMethodsOwner = (CoinbasePaymentsCommonPaymentMethodsOwner) o;
    return Objects.equals(this.id, coinbasePaymentsCommonPaymentMethodsOwner.id) &&
        Objects.equals(this.uuid, coinbasePaymentsCommonPaymentMethodsOwner.uuid) &&
        Objects.equals(this.userUuid, coinbasePaymentsCommonPaymentMethodsOwner.userUuid) &&
        Objects.equals(this.type, coinbasePaymentsCommonPaymentMethodsOwner.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, uuid, userUuid, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbasePaymentsCommonPaymentMethodsOwner {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    uuid: ").append(toIndentedString(uuid)).append("\n");
    sb.append("    userUuid: ").append(toIndentedString(userUuid)).append("\n");
    sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

