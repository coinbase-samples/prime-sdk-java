/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseBrokerageProxyCommonCrossingType;
import java.io.IOException;

/**
 * CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok {
  @SerializedName("cross_id")
  private String crossId = null;

  @SerializedName("base_size")
  private String baseSize = null;

  @SerializedName("limit_price")
  private String limitPrice = null;

  @SerializedName("display_base_size")
  private String displayBaseSize = null;

  @SerializedName("crossing_type")
  private CoinbaseBrokerageProxyCommonCrossingType crossingType = null;

  public CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok crossId(String crossId) {
    this.crossId = crossId;
    return this;
  }

   /**
   * Get crossId
   * @return crossId
  **/
  @ApiModelProperty(value = "")
  public String getCrossId() {
    return crossId;
  }

  public void setCrossId(String crossId) {
    this.crossId = crossId;
  }

  public CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok baseSize(String baseSize) {
    this.baseSize = baseSize;
    return this;
  }

   /**
   * Get baseSize
   * @return baseSize
  **/
  @ApiModelProperty(value = "")
  public String getBaseSize() {
    return baseSize;
  }

  public void setBaseSize(String baseSize) {
    this.baseSize = baseSize;
  }

  public CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok limitPrice(String limitPrice) {
    this.limitPrice = limitPrice;
    return this;
  }

   /**
   * Get limitPrice
   * @return limitPrice
  **/
  @ApiModelProperty(value = "")
  public String getLimitPrice() {
    return limitPrice;
  }

  public void setLimitPrice(String limitPrice) {
    this.limitPrice = limitPrice;
  }

  public CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok displayBaseSize(String displayBaseSize) {
    this.displayBaseSize = displayBaseSize;
    return this;
  }

   /**
   * Get displayBaseSize
   * @return displayBaseSize
  **/
  @ApiModelProperty(value = "")
  public String getDisplayBaseSize() {
    return displayBaseSize;
  }

  public void setDisplayBaseSize(String displayBaseSize) {
    this.displayBaseSize = displayBaseSize;
  }

  public CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok crossingType(CoinbaseBrokerageProxyCommonCrossingType crossingType) {
    this.crossingType = crossingType;
    return this;
  }

   /**
   * Get crossingType
   * @return crossingType
  **/
  @ApiModelProperty(value = "")
  public CoinbaseBrokerageProxyCommonCrossingType getCrossingType() {
    return crossingType;
  }

  public void setCrossingType(CoinbaseBrokerageProxyCommonCrossingType crossingType) {
    this.crossingType = crossingType;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok coinbaseBrokerageProxyCommonBlockTradeLimitLimitFok = (CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok) o;
    return Objects.equals(this.crossId, coinbaseBrokerageProxyCommonBlockTradeLimitLimitFok.crossId) &&
        Objects.equals(this.baseSize, coinbaseBrokerageProxyCommonBlockTradeLimitLimitFok.baseSize) &&
        Objects.equals(this.limitPrice, coinbaseBrokerageProxyCommonBlockTradeLimitLimitFok.limitPrice) &&
        Objects.equals(this.displayBaseSize, coinbaseBrokerageProxyCommonBlockTradeLimitLimitFok.displayBaseSize) &&
        Objects.equals(this.crossingType, coinbaseBrokerageProxyCommonBlockTradeLimitLimitFok.crossingType);
  }

  @Override
  public int hashCode() {
    return Objects.hash(crossId, baseSize, limitPrice, displayBaseSize, crossingType);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseBrokerageProxyCommonBlockTradeLimitLimitFok {\n");
    
    sb.append("    crossId: ").append(toIndentedString(crossId)).append("\n");
    sb.append("    baseSize: ").append(toIndentedString(baseSize)).append("\n");
    sb.append("    limitPrice: ").append(toIndentedString(limitPrice)).append("\n");
    sb.append("    displayBaseSize: ").append(toIndentedString(displayBaseSize)).append("\n");
    sb.append("    crossingType: ").append(toIndentedString(crossingType)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

