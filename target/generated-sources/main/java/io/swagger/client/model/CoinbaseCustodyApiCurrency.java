/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiCryptoNetwork;
import io.swagger.client.model.CoinbaseCustodyApiPropertiesEnabled;
import io.swagger.client.model.CoinbaseCustodyApiRequiredWithdrawalOptions;
import java.io.IOException;

/**
 * CoinbaseCustodyApiCurrency
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiCurrency {
  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("symbol")
  private String symbol = null;

  @SerializedName("decimals")
  private String decimals = null;

  @SerializedName("required_withdrawal_options")
  private CoinbaseCustodyApiRequiredWithdrawalOptions requiredWithdrawalOptions = null;

  @SerializedName("properties_enabled")
  private CoinbaseCustodyApiPropertiesEnabled propertiesEnabled = null;

  @SerializedName("price")
  private String price = null;

  @SerializedName("price_change_pct")
  private String priceChangePct = null;

  @SerializedName("icon")
  private String icon = null;

  @SerializedName("supports_test_withdrawal")
  private Boolean supportsTestWithdrawal = null;

  @SerializedName("address_link_prefix")
  private String addressLinkPrefix = null;

  @SerializedName("currency_type")
  private String currencyType = null;

  @SerializedName("unstaking_period")
  private String unstakingPeriod = null;

  @SerializedName("next_reward_cycle")
  private Integer nextRewardCycle = null;

  @SerializedName("min_stake_amount")
  private String minStakeAmount = null;

  @SerializedName("ams_uuid")
  private String amsUuid = null;

  @SerializedName("crypto_network")
  private CoinbaseCustodyApiCryptoNetwork cryptoNetwork = null;

  @SerializedName("contract_address")
  private String contractAddress = null;

  public CoinbaseCustodyApiCurrency id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiCurrency name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseCustodyApiCurrency symbol(String symbol) {
    this.symbol = symbol;
    return this;
  }

   /**
   * Get symbol
   * @return symbol
  **/
  @ApiModelProperty(required = true, value = "")
  public String getSymbol() {
    return symbol;
  }

  public void setSymbol(String symbol) {
    this.symbol = symbol;
  }

  public CoinbaseCustodyApiCurrency decimals(String decimals) {
    this.decimals = decimals;
    return this;
  }

   /**
   * Get decimals
   * @return decimals
  **/
  @ApiModelProperty(required = true, value = "")
  public String getDecimals() {
    return decimals;
  }

  public void setDecimals(String decimals) {
    this.decimals = decimals;
  }

  public CoinbaseCustodyApiCurrency requiredWithdrawalOptions(CoinbaseCustodyApiRequiredWithdrawalOptions requiredWithdrawalOptions) {
    this.requiredWithdrawalOptions = requiredWithdrawalOptions;
    return this;
  }

   /**
   * Get requiredWithdrawalOptions
   * @return requiredWithdrawalOptions
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiRequiredWithdrawalOptions getRequiredWithdrawalOptions() {
    return requiredWithdrawalOptions;
  }

  public void setRequiredWithdrawalOptions(CoinbaseCustodyApiRequiredWithdrawalOptions requiredWithdrawalOptions) {
    this.requiredWithdrawalOptions = requiredWithdrawalOptions;
  }

  public CoinbaseCustodyApiCurrency propertiesEnabled(CoinbaseCustodyApiPropertiesEnabled propertiesEnabled) {
    this.propertiesEnabled = propertiesEnabled;
    return this;
  }

   /**
   * Get propertiesEnabled
   * @return propertiesEnabled
  **/
  @ApiModelProperty(required = true, value = "")
  public CoinbaseCustodyApiPropertiesEnabled getPropertiesEnabled() {
    return propertiesEnabled;
  }

  public void setPropertiesEnabled(CoinbaseCustodyApiPropertiesEnabled propertiesEnabled) {
    this.propertiesEnabled = propertiesEnabled;
  }

  public CoinbaseCustodyApiCurrency price(String price) {
    this.price = price;
    return this;
  }

   /**
   * Get price
   * @return price
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPrice() {
    return price;
  }

  public void setPrice(String price) {
    this.price = price;
  }

  public CoinbaseCustodyApiCurrency priceChangePct(String priceChangePct) {
    this.priceChangePct = priceChangePct;
    return this;
  }

   /**
   * Get priceChangePct
   * @return priceChangePct
  **/
  @ApiModelProperty(required = true, value = "")
  public String getPriceChangePct() {
    return priceChangePct;
  }

  public void setPriceChangePct(String priceChangePct) {
    this.priceChangePct = priceChangePct;
  }

  public CoinbaseCustodyApiCurrency icon(String icon) {
    this.icon = icon;
    return this;
  }

   /**
   * Get icon
   * @return icon
  **/
  @ApiModelProperty(required = true, value = "")
  public String getIcon() {
    return icon;
  }

  public void setIcon(String icon) {
    this.icon = icon;
  }

  public CoinbaseCustodyApiCurrency supportsTestWithdrawal(Boolean supportsTestWithdrawal) {
    this.supportsTestWithdrawal = supportsTestWithdrawal;
    return this;
  }

   /**
   * Get supportsTestWithdrawal
   * @return supportsTestWithdrawal
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isSupportsTestWithdrawal() {
    return supportsTestWithdrawal;
  }

  public void setSupportsTestWithdrawal(Boolean supportsTestWithdrawal) {
    this.supportsTestWithdrawal = supportsTestWithdrawal;
  }

  public CoinbaseCustodyApiCurrency addressLinkPrefix(String addressLinkPrefix) {
    this.addressLinkPrefix = addressLinkPrefix;
    return this;
  }

   /**
   * Get addressLinkPrefix
   * @return addressLinkPrefix
  **/
  @ApiModelProperty(required = true, value = "")
  public String getAddressLinkPrefix() {
    return addressLinkPrefix;
  }

  public void setAddressLinkPrefix(String addressLinkPrefix) {
    this.addressLinkPrefix = addressLinkPrefix;
  }

  public CoinbaseCustodyApiCurrency currencyType(String currencyType) {
    this.currencyType = currencyType;
    return this;
  }

   /**
   * Get currencyType
   * @return currencyType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getCurrencyType() {
    return currencyType;
  }

  public void setCurrencyType(String currencyType) {
    this.currencyType = currencyType;
  }

  public CoinbaseCustodyApiCurrency unstakingPeriod(String unstakingPeriod) {
    this.unstakingPeriod = unstakingPeriod;
    return this;
  }

   /**
   * Get unstakingPeriod
   * @return unstakingPeriod
  **/
  @ApiModelProperty(required = true, value = "")
  public String getUnstakingPeriod() {
    return unstakingPeriod;
  }

  public void setUnstakingPeriod(String unstakingPeriod) {
    this.unstakingPeriod = unstakingPeriod;
  }

  public CoinbaseCustodyApiCurrency nextRewardCycle(Integer nextRewardCycle) {
    this.nextRewardCycle = nextRewardCycle;
    return this;
  }

   /**
   * Get nextRewardCycle
   * @return nextRewardCycle
  **/
  @ApiModelProperty(required = true, value = "")
  public Integer getNextRewardCycle() {
    return nextRewardCycle;
  }

  public void setNextRewardCycle(Integer nextRewardCycle) {
    this.nextRewardCycle = nextRewardCycle;
  }

  public CoinbaseCustodyApiCurrency minStakeAmount(String minStakeAmount) {
    this.minStakeAmount = minStakeAmount;
    return this;
  }

   /**
   * Get minStakeAmount
   * @return minStakeAmount
  **/
  @ApiModelProperty(required = true, value = "")
  public String getMinStakeAmount() {
    return minStakeAmount;
  }

  public void setMinStakeAmount(String minStakeAmount) {
    this.minStakeAmount = minStakeAmount;
  }

  public CoinbaseCustodyApiCurrency amsUuid(String amsUuid) {
    this.amsUuid = amsUuid;
    return this;
  }

   /**
   * Get amsUuid
   * @return amsUuid
  **/
  @ApiModelProperty(value = "")
  public String getAmsUuid() {
    return amsUuid;
  }

  public void setAmsUuid(String amsUuid) {
    this.amsUuid = amsUuid;
  }

  public CoinbaseCustodyApiCurrency cryptoNetwork(CoinbaseCustodyApiCryptoNetwork cryptoNetwork) {
    this.cryptoNetwork = cryptoNetwork;
    return this;
  }

   /**
   * Get cryptoNetwork
   * @return cryptoNetwork
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiCryptoNetwork getCryptoNetwork() {
    return cryptoNetwork;
  }

  public void setCryptoNetwork(CoinbaseCustodyApiCryptoNetwork cryptoNetwork) {
    this.cryptoNetwork = cryptoNetwork;
  }

  public CoinbaseCustodyApiCurrency contractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
    return this;
  }

   /**
   * Get contractAddress
   * @return contractAddress
  **/
  @ApiModelProperty(value = "")
  public String getContractAddress() {
    return contractAddress;
  }

  public void setContractAddress(String contractAddress) {
    this.contractAddress = contractAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiCurrency coinbaseCustodyApiCurrency = (CoinbaseCustodyApiCurrency) o;
    return Objects.equals(this.id, coinbaseCustodyApiCurrency.id) &&
        Objects.equals(this.name, coinbaseCustodyApiCurrency.name) &&
        Objects.equals(this.symbol, coinbaseCustodyApiCurrency.symbol) &&
        Objects.equals(this.decimals, coinbaseCustodyApiCurrency.decimals) &&
        Objects.equals(this.requiredWithdrawalOptions, coinbaseCustodyApiCurrency.requiredWithdrawalOptions) &&
        Objects.equals(this.propertiesEnabled, coinbaseCustodyApiCurrency.propertiesEnabled) &&
        Objects.equals(this.price, coinbaseCustodyApiCurrency.price) &&
        Objects.equals(this.priceChangePct, coinbaseCustodyApiCurrency.priceChangePct) &&
        Objects.equals(this.icon, coinbaseCustodyApiCurrency.icon) &&
        Objects.equals(this.supportsTestWithdrawal, coinbaseCustodyApiCurrency.supportsTestWithdrawal) &&
        Objects.equals(this.addressLinkPrefix, coinbaseCustodyApiCurrency.addressLinkPrefix) &&
        Objects.equals(this.currencyType, coinbaseCustodyApiCurrency.currencyType) &&
        Objects.equals(this.unstakingPeriod, coinbaseCustodyApiCurrency.unstakingPeriod) &&
        Objects.equals(this.nextRewardCycle, coinbaseCustodyApiCurrency.nextRewardCycle) &&
        Objects.equals(this.minStakeAmount, coinbaseCustodyApiCurrency.minStakeAmount) &&
        Objects.equals(this.amsUuid, coinbaseCustodyApiCurrency.amsUuid) &&
        Objects.equals(this.cryptoNetwork, coinbaseCustodyApiCurrency.cryptoNetwork) &&
        Objects.equals(this.contractAddress, coinbaseCustodyApiCurrency.contractAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, name, symbol, decimals, requiredWithdrawalOptions, propertiesEnabled, price, priceChangePct, icon, supportsTestWithdrawal, addressLinkPrefix, currencyType, unstakingPeriod, nextRewardCycle, minStakeAmount, amsUuid, cryptoNetwork, contractAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiCurrency {\n");
    
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    symbol: ").append(toIndentedString(symbol)).append("\n");
    sb.append("    decimals: ").append(toIndentedString(decimals)).append("\n");
    sb.append("    requiredWithdrawalOptions: ").append(toIndentedString(requiredWithdrawalOptions)).append("\n");
    sb.append("    propertiesEnabled: ").append(toIndentedString(propertiesEnabled)).append("\n");
    sb.append("    price: ").append(toIndentedString(price)).append("\n");
    sb.append("    priceChangePct: ").append(toIndentedString(priceChangePct)).append("\n");
    sb.append("    icon: ").append(toIndentedString(icon)).append("\n");
    sb.append("    supportsTestWithdrawal: ").append(toIndentedString(supportsTestWithdrawal)).append("\n");
    sb.append("    addressLinkPrefix: ").append(toIndentedString(addressLinkPrefix)).append("\n");
    sb.append("    currencyType: ").append(toIndentedString(currencyType)).append("\n");
    sb.append("    unstakingPeriod: ").append(toIndentedString(unstakingPeriod)).append("\n");
    sb.append("    nextRewardCycle: ").append(toIndentedString(nextRewardCycle)).append("\n");
    sb.append("    minStakeAmount: ").append(toIndentedString(minStakeAmount)).append("\n");
    sb.append("    amsUuid: ").append(toIndentedString(amsUuid)).append("\n");
    sb.append("    cryptoNetwork: ").append(toIndentedString(cryptoNetwork)).append("\n");
    sb.append("    contractAddress: ").append(toIndentedString(contractAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

