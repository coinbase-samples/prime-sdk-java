/*
 * Coinbase Prime REST API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package io.swagger.client.model;

import java.util.Objects;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import io.swagger.client.model.CoinbaseCustodyApiActivityUser;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * CoinbaseCustodyApiActivityTimelineEvent
 */
@javax.annotation.Generated(value = "io.swagger.codegen.languages.JavaClientCodegen", date = "2024-02-22T12:46:00.828-08:00")
public class CoinbaseCustodyApiActivityTimelineEvent {
  @SerializedName("event")
  private String event = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("lifecycleable_id")
  private String lifecycleableId = null;

  @SerializedName("lifecycleable_type")
  private String lifecycleableType = null;

  @SerializedName("links")
  private List<String> links = new ArrayList<String>();

  @SerializedName("name")
  private String name = null;

  @SerializedName("pending")
  private Boolean pending = null;

  @SerializedName("timestamp")
  private String timestamp = null;

  @SerializedName("user")
  private CoinbaseCustodyApiActivityUser user = null;

  public CoinbaseCustodyApiActivityTimelineEvent event(String event) {
    this.event = event;
    return this;
  }

   /**
   * Get event
   * @return event
  **/
  @ApiModelProperty(required = true, value = "")
  public String getEvent() {
    return event;
  }

  public void setEvent(String event) {
    this.event = event;
  }

  public CoinbaseCustodyApiActivityTimelineEvent id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Get id
   * @return id
  **/
  @ApiModelProperty(required = true, value = "")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public CoinbaseCustodyApiActivityTimelineEvent lifecycleableId(String lifecycleableId) {
    this.lifecycleableId = lifecycleableId;
    return this;
  }

   /**
   * Get lifecycleableId
   * @return lifecycleableId
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLifecycleableId() {
    return lifecycleableId;
  }

  public void setLifecycleableId(String lifecycleableId) {
    this.lifecycleableId = lifecycleableId;
  }

  public CoinbaseCustodyApiActivityTimelineEvent lifecycleableType(String lifecycleableType) {
    this.lifecycleableType = lifecycleableType;
    return this;
  }

   /**
   * Get lifecycleableType
   * @return lifecycleableType
  **/
  @ApiModelProperty(required = true, value = "")
  public String getLifecycleableType() {
    return lifecycleableType;
  }

  public void setLifecycleableType(String lifecycleableType) {
    this.lifecycleableType = lifecycleableType;
  }

  public CoinbaseCustodyApiActivityTimelineEvent links(List<String> links) {
    this.links = links;
    return this;
  }

  public CoinbaseCustodyApiActivityTimelineEvent addLinksItem(String linksItem) {
    this.links.add(linksItem);
    return this;
  }

   /**
   * Get links
   * @return links
  **/
  @ApiModelProperty(required = true, value = "")
  public List<String> getLinks() {
    return links;
  }

  public void setLinks(List<String> links) {
    this.links = links;
  }

  public CoinbaseCustodyApiActivityTimelineEvent name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @ApiModelProperty(required = true, value = "")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public CoinbaseCustodyApiActivityTimelineEvent pending(Boolean pending) {
    this.pending = pending;
    return this;
  }

   /**
   * Get pending
   * @return pending
  **/
  @ApiModelProperty(required = true, value = "")
  public Boolean isPending() {
    return pending;
  }

  public void setPending(Boolean pending) {
    this.pending = pending;
  }

  public CoinbaseCustodyApiActivityTimelineEvent timestamp(String timestamp) {
    this.timestamp = timestamp;
    return this;
  }

   /**
   * Get timestamp
   * @return timestamp
  **/
  @ApiModelProperty(required = true, value = "")
  public String getTimestamp() {
    return timestamp;
  }

  public void setTimestamp(String timestamp) {
    this.timestamp = timestamp;
  }

  public CoinbaseCustodyApiActivityTimelineEvent user(CoinbaseCustodyApiActivityUser user) {
    this.user = user;
    return this;
  }

   /**
   * Get user
   * @return user
  **/
  @ApiModelProperty(value = "")
  public CoinbaseCustodyApiActivityUser getUser() {
    return user;
  }

  public void setUser(CoinbaseCustodyApiActivityUser user) {
    this.user = user;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    CoinbaseCustodyApiActivityTimelineEvent coinbaseCustodyApiActivityTimelineEvent = (CoinbaseCustodyApiActivityTimelineEvent) o;
    return Objects.equals(this.event, coinbaseCustodyApiActivityTimelineEvent.event) &&
        Objects.equals(this.id, coinbaseCustodyApiActivityTimelineEvent.id) &&
        Objects.equals(this.lifecycleableId, coinbaseCustodyApiActivityTimelineEvent.lifecycleableId) &&
        Objects.equals(this.lifecycleableType, coinbaseCustodyApiActivityTimelineEvent.lifecycleableType) &&
        Objects.equals(this.links, coinbaseCustodyApiActivityTimelineEvent.links) &&
        Objects.equals(this.name, coinbaseCustodyApiActivityTimelineEvent.name) &&
        Objects.equals(this.pending, coinbaseCustodyApiActivityTimelineEvent.pending) &&
        Objects.equals(this.timestamp, coinbaseCustodyApiActivityTimelineEvent.timestamp) &&
        Objects.equals(this.user, coinbaseCustodyApiActivityTimelineEvent.user);
  }

  @Override
  public int hashCode() {
    return Objects.hash(event, id, lifecycleableId, lifecycleableType, links, name, pending, timestamp, user);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class CoinbaseCustodyApiActivityTimelineEvent {\n");
    
    sb.append("    event: ").append(toIndentedString(event)).append("\n");
    sb.append("    id: ").append(toIndentedString(id)).append("\n");
    sb.append("    lifecycleableId: ").append(toIndentedString(lifecycleableId)).append("\n");
    sb.append("    lifecycleableType: ").append(toIndentedString(lifecycleableType)).append("\n");
    sb.append("    links: ").append(toIndentedString(links)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    pending: ").append(toIndentedString(pending)).append("\n");
    sb.append("    timestamp: ").append(toIndentedString(timestamp)).append("\n");
    sb.append("    user: ").append(toIndentedString(user)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

